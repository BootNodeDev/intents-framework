export API_KEY_ALCHEMY="YOUR_API_KEY_ALCHEMY"
export API_KEY_ARBISCAN="YOUR_API_KEY_ARBISCAN"
export API_KEY_BSCSCAN="YOUR_API_KEY_BSCSCAN"
export API_KEY_ETHERSCAN="YOUR_API_KEY_ETHERSCAN"
export API_KEY_GNOSISSCAN="YOUR_API_KEY_GNOSISSCAN"
export API_KEY_INFURA="YOUR_API_KEY_INFURA"
export API_KEY_OPTIMISTIC_ETHERSCAN="YOUR_API_KEY_OPTIMISTIC_ETHERSCAN"
export API_KEY_POLYGONSCAN="YOUR_API_KEY_POLYGONSCAN"
export API_KEY_SNOWTRACE="YOUR_API_KEY_SNOWTRACE"
export MNEMONIC="YOUR_MNEMONIC"
export FOUNDRY_PROFILE="default"
export BASE_RPC_URL="AN BASE SEPOLIA RPC URL FOR FORK TESTING THE ECO ADAPTER"

export NETWORK="NETWORK NAME WHERE THE SCRIPT IS RUNNNIG"
export ETHERSCAN_API_KEY="YOUR ETHERSCAN API KEY ON NETWORK_NAME"
export MAILBOX="HYPERLANE MAILBOX ADDRESS ON NETWORK_NAME"
export PERMIT2="PERMIT2 ADDRESS ON NETWORK_NAME"

export DEPLOYER_PK="YOU DEPLOYER PRIVATE KEY"
export ROUTER7683_SALT="A ONTE TIME USE SALT FOR DEPLOYING THE ROUTER"

export PROXY_ADMIN_OWNER="ADDRESS OF THE OWNER OF THE PROXY ADMIN"
export ROUTER_OWNER="ADDRESS OF THE OWNER OF THE ROUTER"

# enrollRemoteRouters and setDestinationGas
export DOMAINS="COMA SEPARATED LIST OF DOMAINS TO ENROLL"

### Open
export ROUTER_ADDRESS = "ROUTER ADDRESS"
export ORDER_SENDER = "ORDER SENDER ADDRESS"
export ORDER_RECIPIENT = "ORDER RECIPENT ADDRESS"
export ITT_INPUT = "TOKEN INPUT ADDRESS"
export ITT_OUTPUT = "TOKEN OUTPUT ADDRESS"
export AMOUNT_IN = "AMOUNT IN"
export AMOUNT_OUT = "AMOUNT OUT"
export DESTINATION_DOMAIN = "DESTINATION DOMAIN ID"

## ECO
### Deploy
export ADAPTER_OWNER="ADDRESS OF THE OWNER OF THE ADAPTER"
export ECO_INBOX="ADDRESS OF THE ECO INBOX"

### Create Intent
export ECO_INTENT_SOURCE="ECO INTENT SOURCE ADDRESS"
export ECO_DESTINATION_CHAIN="DESTINATION CHAIN ID"
export ECO_INBOX="ECO INBOX ADDRESS"
export ECO_TARGET_TOKEN="INTENT TARGET TOKEN ADDRESS"
export ECO_RECEIVER_ADDRESS="INTENT RECEIVER ADDRESS"
export ECO_RECEIVER_AMOUNT="INTENT TARGET TOKEN AMOUNT"
export ECO_REWARD_TOKENS="REWARD TOKENS ADDRESS SEPERATED BY COMMA"
export ECO_RECEIVER_AMOUNT="REWARD TOKENS AMOUNT SEPERATED BY COMMA"
export ECO_PROVER="ECO PROVER ADDRESS"

{
  "abi": [
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "__activateTstore",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "__registerAllocator",
      "inputs": [
        { "name": "allocator", "type": "address", "internalType": "address" },
        { "name": "proof", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "uint96", "internalType": "uint96" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedTransfer",
      "inputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct BatchTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "transfers",
              "type": "tuple[]",
              "internalType": "struct TransferComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedTransfer",
      "inputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct SplitBatchTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "transfers",
              "type": "tuple[]",
              "internalType": "struct SplitByIdComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedTransfer",
      "inputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct SplitTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "recipients",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedTransfer",
      "inputs": [
        {
          "name": "transfer",
          "type": "tuple",
          "internalType": "struct BasicTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct BasicTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct SplitBatchTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "transfers",
              "type": "tuple[]",
              "internalType": "struct SplitByIdComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct BatchTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "transfers",
              "type": "tuple[]",
              "internalType": "struct TransferComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocatedWithdrawal",
      "inputs": [
        {
          "name": "withdrawal",
          "type": "tuple",
          "internalType": "struct SplitTransfer",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "recipients",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BasicClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct MultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct MultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct MultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct MultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BasicClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct BatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedMultichainClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimant",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct SplitBatchClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct SplitBatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "portions",
                  "type": "tuple[]",
                  "internalType": "struct SplitComponent[]",
                  "components": [
                    {
                      "name": "claimant",
                      "type": "address",
                      "internalType": "address"
                    },
                    {
                      "name": "amount",
                      "type": "uint256",
                      "internalType": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedBatchClaim",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct QualifiedSplitClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "id", "type": "uint256", "internalType": "uint256" },
            {
              "name": "allocatedAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claimants",
              "type": "tuple[]",
              "internalType": "struct SplitComponent[]",
              "components": [
                {
                  "name": "claimant",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimAndWithdraw",
      "inputs": [
        {
          "name": "claimPayload",
          "type": "tuple",
          "internalType": "struct ExogenousQualifiedBatchMultichainClaimWithWitness",
          "components": [
            {
              "name": "allocatorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sponsorSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            { "name": "sponsor", "type": "address", "internalType": "address" },
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "expires", "type": "uint256", "internalType": "uint256" },
            { "name": "witness", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "witnessTypestring",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "qualificationTypehash",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "qualificationPayload",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "additionalChains",
              "type": "bytes32[]",
              "internalType": "bytes32[]"
            },
            {
              "name": "chainIndex",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "notarizedChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "claims",
              "type": "tuple[]",
              "internalType": "struct BatchClaimComponent[]",
              "components": [
                { "name": "id", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "allocatedAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            { "name": "claimant", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "consume",
      "inputs": [
        { "name": "nonces", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint8", "internalType": "enum ResetPeriod" },
        { "name": "", "type": "uint8", "internalType": "enum Scope" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "allocator", "type": "address", "internalType": "address" },
        {
          "name": "resetPeriod",
          "type": "uint8",
          "internalType": "enum ResetPeriod"
        },
        { "name": "scope", "type": "uint8", "internalType": "enum Scope" },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "allocator", "type": "address", "internalType": "address" },
        {
          "name": "resetPeriod",
          "type": "uint8",
          "internalType": "enum ResetPeriod"
        },
        { "name": "scope", "type": "uint8", "internalType": "enum Scope" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "allocator", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "", "type": "address", "internalType": "address" },
        {
          "name": "permitted",
          "type": "tuple[]",
          "internalType": "struct ISignatureTransfer.TokenPermissions[]",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint8", "internalType": "enum ResetPeriod" },
        { "name": "", "type": "uint8", "internalType": "enum Scope" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "idsAndAmounts",
          "type": "uint256[2][]",
          "internalType": "uint256[2][]"
        },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "allocator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositAndRegister",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "depositor", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        {
          "name": "resetPeriod",
          "type": "uint8",
          "internalType": "enum ResetPeriod"
        },
        { "name": "", "type": "uint8", "internalType": "enum Scope" },
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "compactCategory",
          "type": "uint8",
          "internalType": "enum CompactCategory"
        },
        { "name": "witness", "type": "string", "internalType": "string" },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositAndRegister",
      "inputs": [
        {
          "name": "idsAndAmounts",
          "type": "uint256[2][]",
          "internalType": "uint256[2][]"
        },
        {
          "name": "claimHashesAndTypehashes",
          "type": "bytes32[2][]",
          "internalType": "bytes32[2][]"
        },
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositAndRegister",
      "inputs": [
        { "name": "allocator", "type": "address", "internalType": "address" },
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "typehash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositAndRegister",
      "inputs": [
        { "name": "depositor", "type": "address", "internalType": "address" },
        {
          "name": "permitted",
          "type": "tuple[]",
          "internalType": "struct ISignatureTransfer.TokenPermissions[]",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        {
          "name": "resetPeriod",
          "type": "uint8",
          "internalType": "enum ResetPeriod"
        },
        { "name": "", "type": "uint8", "internalType": "enum Scope" },
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "compactCategory",
          "type": "uint8",
          "internalType": "enum CompactCategory"
        },
        { "name": "witness", "type": "string", "internalType": "string" },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositAndRegister",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "allocator", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "typehash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disableForcedWithdrawal",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "enableForcedWithdrawal",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        { "name": "slots", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [
        { "name": "", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "forcedWithdrawal",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getForcedWithdrawalStatus",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum ForcedWithdrawalStatus"
        },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLockDetails",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint8", "internalType": "enum ResetPeriod" },
        { "name": "", "type": "uint8", "internalType": "enum Scope" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegistrationStatus",
      "inputs": [
        { "name": "sponsor", "type": "address", "internalType": "address" },
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "typehash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "isActive", "type": "bool", "internalType": "bool" },
        { "name": "expires", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasConsumedAllocatorNonce",
      "inputs": [
        { "name": "nonce", "type": "uint256", "internalType": "uint256" },
        { "name": "allocator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "status", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "register",
      "inputs": [
        {
          "name": "claimHashesAndTypehashes",
          "type": "bytes32[2][]",
          "internalType": "bytes32[2][]"
        },
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "register",
      "inputs": [
        { "name": "claimHash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "typehash", "type": "bytes32", "internalType": "bytes32" },
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "AllocatorRegistered",
      "inputs": [
        {
          "name": "allocatorId",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "allocator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Claim",
      "inputs": [
        {
          "name": "sponsor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "allocator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "arbiter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CompactRegistered",
      "inputs": [
        {
          "name": "sponsor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimHash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "typehash",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "expires",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ForcedWithdrawalStatusUpdated",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "activating",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "withdrawableAt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "by",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AllocatedAmountExceeded",
      "inputs": [
        {
          "name": "allocatedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "providedAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    { "type": "error", "name": "BalanceOverflow", "inputs": [] },
    {
      "type": "error",
      "name": "Expired",
      "inputs": [
        { "name": "expiration", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ForcedWithdrawalAlreadyDisabled",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InsufficientBalance", "inputs": [] },
    { "type": "error", "name": "InsufficientPermission", "inputs": [] },
    { "type": "error", "name": "InvalidBatchAllocation", "inputs": [] },
    { "type": "error", "name": "InvalidBatchDepositStructure", "inputs": [] },
    { "type": "error", "name": "InvalidDepositBalanceChange", "inputs": [] },
    { "type": "error", "name": "InvalidDepositTokenOrdering", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidRegistrationDuration",
      "inputs": [
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidRegistrationProof",
      "inputs": [
        { "name": "allocator", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidScope",
      "inputs": [{ "name": "id", "type": "uint256", "internalType": "uint256" }]
    },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidToken",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "OnlyDirectCalls", "inputs": [] },
    { "type": "error", "name": "Permit2CallFailed", "inputs": [] },
    {
      "type": "error",
      "name": "PrematureWithdrawal",
      "inputs": [{ "name": "id", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "ReentrantCall",
      "inputs": [
        {
          "name": "existingCaller",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "TStoreAlreadyActivated", "inputs": [] },
    { "type": "error", "name": "TStoreNotSupported", "inputs": [] },
    {
      "type": "error",
      "name": "TloadTestContractDeploymentFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnallocatedTransfer",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "id", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1085:8212:36:-:0;;;;;;399:6063:65;;:::i;:::-;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2214:262:48;8755:335:35;-1:-1:-1;8755:335:35;;;-1:-1:-1;8755:335:35;-1:-1:-1;;;;;1085:8212:36;;3014:31:35;3010:104;;-1:-1:-1;9726:9:35;;;;8755:335;9726:9;1085:8212:36;9691:55:35;1085:8212:36;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;-1:-1:-1;1085:8212:36;;;;;;3237:647:35;;;;3433:10;3418:25;;3472:10;3457:25;;3513:12;3496:29;;3237:647;3894:44;;4029:38;;2258:13:48;2238:33;;2309:42;2258:13;1871:575:54;1742:710;1871:575;;;;;;;;;;;;;;;;;;;;;;;;;;1742:710;;2309:42:48;2281:70;;1085:8212:36;;2382:22:48;;;;-1:-1:-1;;;;;2382:22:48;;;;;;;;;;;;;;;-1:-1:-1;2382:22:48;;;;;2361:43;;5767:105;;;;2414:55;;2214:262::o;2382:22::-;;:::i;:::-;;:::i;3237:647:35:-;3722:30;3707:45;;3781:29;3766:44;;3841:32;3824:49;;3237:647;;1085:8212:36;;;3010:104:35;3068:35;;;-1:-1:-1;3068:35:35;;-1:-1:-1;3068:35:35",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c908162ad800c1461312757508062fdd58e146130eb57806301ffc9a7146130a757806303417d721461309057806306659b7f1461307b57806306e8cc181461306657806306fdde031461303c57806308e600ee14613027578063095bcdb614612f4e5780630a133cf214612f395780630d57fec914612f245780630f5eeadf14612f0f578063107d4ee414612ec857806310d8267214612dff57806312a1e6ea14612dea57806312d4888514612d7a57806312f9d21e14612d6557806313589bfe14612d50578063138cd81914612d2a578063144bd5b514612cc85780631486590714612cb3578063176f405a14612c525780631b98b63f14612c3d5780631bb81a8114612c285780631d474b1414612c135780631e2eaeaf14612bf7578063200f0c4d14612b8f578063206620a114612b3f57806325d7776b14612b155780632737edb914612afe57806327c777a914612a815780632a9c4d0d146129515780632acd5dc31461293c5780632c4bbd17146129255780632e3ff2f7146128c15780632e4d55cc146128ac57806331bbae3e1461286e57806332e2a80314612859578063341056c5146128445780633644e5151461282a578063393c33e21461272f5780633f458a19146127185780633f47e662146126fc5780634073c0cc146126d9578063409b3a7e146126c4578063414fd914146126af578063418a23f51461269a578063426a849314612636578063440a0ec3146125ed57806344b97d78146125ba5780634ad5205e146125a35780634c1024161461258c5780634d585fbf146125755780634e41a1fb146125015780634e55a548146124ea578063507cb46f1461249057806353e5006714612350578063548439e114612339578063558a7297146122c4578063577cdc64146122ad5780635920212814612296578063598af9e7146122605780635ac2ccf1146122495780635b15bfd9146121dd5780635b6016ec146121765780635d76a382146121615780635e6c91ff1461214c57806362a420bb1461211557806363f5b1ad146120d8578063648705561461209a578063671b3bd61461202a5780636a9a4c4414611f895780636af2791b14611f745780637003019014611f125780637112406d14611dc857806371f5012714611db1578063721f629214611d765780637423eb3c14611c9157806376d531d414611c7c5780638340f54914611c41578063843719f014611bf15780638678555914611bdc57806388d247c414611bc557806388da84d414611bae57806389ce066114611b59578063935ed2ba14611b1e5780639730f4fd14611b07578063996d3aac14611adc57806399cf8b9b146119e85780639be5f537146119d1578063a23941471461191c578063a4c7bd93146118e2578063aa41c87e14611895578063aa8b845d14611863578063b20abc481461184e578063b24849b714611824578063b3244389146117ee578063b4039fc2146117c1578063b54baefd1461178c578063b602ae021461174a578063b6363cf214611705578063b7ace047146116c0578063b8a5bbad14611682578063bc95bd7a14611637578063c4d195e8146115f0578063c8091041146115b4578063c87b56dd14611432578063ca6cc39f146113e5578063d204f11e1461139a578063d2a1805f14611379578063d34ddc8214611362578063d350188c1461134d578063d3917f3c146112ff578063d921f36a146112b8578063da15ee7f1461112f578063da2f268b146110e6578063db04bc72146110d1578063dbd035ff14611059578063dd589cfc14610fdc578063e0565c4914610f8e578063e05c6e7d14610f41578063e6c5b65414610ee6578063e8672f9314610ed1578063ea14532e14610e6a578063eaa6748314610e33578063eb19600814610df9578063eb35a6d214610d89578063eb43182114610d4d578063ebcbd7b514610cf6578063ecaca40e14610c8d578063eea77a7814610c18578063eed634ad14610c03578063eed9357214610bb8578063f135baaa14610b9c578063f23d923d14610b2e578063f2f0def114610ae9578063f340fa0114610ab8578063f44a345214610a5a578063f745381c14610a24578063f95d3d16146109ea578063fa1c55001461098a578063fb75fb6914610924578063fcfe431a146108c1578063fdc060e7146107d75763fe99049a14610655575f80fd5b60803660031901126107d3576106696131bd565b6106716131ff565b6044359160643561068d60016001605c1b038560a01c16614862565b9260018060a01b0383169260018060a01b038216945f60208160a460405194828052601c8601948591631a808f91885233868901528b60408901528c60608901528d60808901528a60a08901525af15f5163e57f706f60e01b016107b85750505067edcaa89a82293940603452602852336014526034602020541561077f575b84601452604060142080548084116107725783900390556028528360145260406014208054908282019182106107655755335f526020525f516020615f655f395f51905f5260405fa45f603452602060405160018152f35b6389560ca15f526004601cfd5b63f4d678b85f526004601cfd5b845f5260545f20805460018101610798575b505061070d565b8084116107ab5783900390555f80610791565b63deda90305f526004601cfd5b3d1517156107cb5763014c931060a49252fd5b3d5f803e3d5ffd5b5f80fd5b346107d3576107e536613408565b608081015f806107f5838561377f565b905f915b80831061089c5750505061088a576108796035928461087461087f9660e06040515f516020615fa55f395f51905f52815233602082015233604082015260208301976060898184013760c0820152209560608201359661086f61086760016001605c1b038a60a01c16614862565b809335613fcf565b614012565b61377f565b9061527d565b602060405160018152f35b634e487b715f5260116020526024601cfd5b90919260019060206108af8685876138cd565b013580960195861017930191906107f9565b346107d357602061091a601760356108d8366133d4565b6101806108f96108f36108ed83850185613c23565b90614bee565b83615c0a565b9290919361090b610160820135613c58565b926109146137c8565b95614d26565b6040519015158152f35b346107d357602061091a603461093936613249565b61095b61095361094d610100840184613898565b90614e53565b826030615651565b9061010061096b3615848461532d565b916109796001361517613cdd565b926109826137c8565b946021615e45565b346107d357602061091a603461099f3661327d565b6109bb6109b36108ed610100840184613c23565b826031615651565b906109c960e0820135613c58565b6101006109d96002361517613cdd565b926109e26137c8565b946026615e45565b346107d357602061091a60356109ff36613215565b610120610a10604036151783615bc9565b92919390610a1c6137c8565b946024615e45565b346107d357602061091a60176034610a3b3661333c565b610a4481615571565b90610100610a506137c8565b93361592806152df565b346107d357602061091a6035610a6f36613249565b610a8a610a826108ed60e0840184613c23565b82602b615651565b9060e0610a993615848461532d565b91610aa76001361517613cdd565b92610ab06137c8565b94601f615e45565b60203660031901126107d3576020610ad6610ad16131bd565b614320565b610ae134823361437c565b604051908152f35b346107d357602061091a60176035610b00366133a0565b610b19610b1361094d60e0840184613898565b82615834565b9060e0610b246137c8565b93361592806151a7565b346107d357602061091a6035610b4336613215565b3615610100610b73610b6b60408417859060e0910160c08101355f52013560205260405f2090565b846030615651565b92610b8b6002610b8485878561532d565b9417613cdd565b92610b946137c8565b946023615e45565b346107d35760203660031901126107d3576004355c5f5260205ff35b346107d357602061091a6035610bcd36613215565b610be7610be16108ed610140840184613c23565b82615b8a565b9091610140610bfa610120830135613c58565b916109e26137c8565b346107d357602061091a6034610bcd36613215565b346107d357602061091a6035610c2d366133d4565b361590610c5b610c5360808417839060e0910160c08101355f52013560205260405f2090565b826032615651565b91610140610c6a82858561532d565b92610c7e6002610b84610120840135613c58565b93610c876137c8565b95614239565b346107d35760a03660031901126107d3576020610ca86131bd565b610cd9610cc4610cb66131ff565b610cbf846148dc565b6142e2565b91610ccd6139d1565b8260443591339061487c565b610ce1613baa565b610ae1610258361517608435606435336141b4565b346107d357602061091a6034610d0b366134d1565b610180610d326108f360c0361517849060e0910160c08101355f52013560205260405f2090565b92909193610d44610160820135613c58565b92610c876137c8565b346107d357602061091a6034610d623661327d565b610120610d7d610d7761094d83850185613898565b83615baa565b929193906109826137c8565b346107d35760203660031901126107d3576020600435610ae162ffffff77278d00094890015180000f3c00025800003c00000f000001601860078560fc1c16021c1642018281610df38195339190604051926014526341d0e04b5f526034526038601c2091604052565b556148f6565b346107d357602061091a6035610e0e3661333c565b610100610e1a826155cc565b919092610e2a6002361517613cdd565b92610a1c6137c8565b346107d357602061091a6034610e48366133a0565b610e5b610a8261094d60e0840184613898565b9060e061096b3615848461532d565b346107d357602061091a60176034610e813661333c565b610e95610c5361094d610140840184613898565b90610ea23615838361532d565b90610140610eb4610120830135613c58565b91610ec26002361517613cdd565b93610ecb6137c8565b956151a7565b346107d357602061091a60346109ff36613215565b346107d357602061091a6034610efb3661327d565b610f20610f188260e09060c08101355f52013560205260405f2090565b82602f615651565b90361560c0610f3160028317613cdd565b92610f3a6137c8565b9480614239565b346107d357602061091a6035610f563661333c565b610f5f81615250565b90610f6d60e0820135613c58565b610100610f7d6002361517613cdd565b92610f866137c8565b946025615e45565b346107d357602061091a6034610fa336613215565b6101003615610fd1610fcb60408317859060e0910160c08101355f52013560205260405f2090565b84615b66565b929093610f3a6137c8565b346107d357602061091a610fef3661343b565b6040515f516020615fa55f395f51905f528152338482015233604082015261103f8260e0868201936080856060830137209260608201359361086f61086760016001605c1b038760a01c16614862565b608061104d60a084016137b4565b92013591336034615c31565b346107d35760203660031901126107d3576004356001600160401b0381116107d357611089903690600401613370565b6040519160408360208152836020820152019160051b8301916020806040850193925b83355481520191019084838210156110c85750602080916110ac565b60408186030190f35b346107d357602061091a6034610a6f36613249565b346107d35760403660031901126107d35760206004356111046131ff565b906040519183526303f37b1a600c52806040526001603760282054918360405260ff161b1615158152f35b6101603660031901126107d3576111446131bd565b6024356001600160401b0381116107d35761116390369060040161346e565b61116e9291926131d3565b5060a4359060088210156107d357600260c43510156107d35760e43591610104359460038610156107d357610124356001600160401b0381116107d3576111b990369060040161330f565b9661014435906001600160401b0382116107d357869588926111df90369060040161330f565b6111ed8584899e949e614984565b96819f939183839b949b0160051b90602001209561120b8b84614a8c565b83839992993615976001891792611221946143c6565b9f9091604051925f5260205260405260605f206080890152604052601f19916002811460061b90600114600b020190801515010160f301169060071b01610180019060c01761126f94613e72565b611279948a614b38565b60180277278d00094890015180000f3c00025800003c00000f000001901c62ffffff16916112a6936141b4565b6040516112b48192826135c0565b0390f35b346107d357602061091a601760356112cf366132db565b6101806112e46108f361094d83850185613898565b929091936112f6610160820135613c58565b92610ecb6137c8565b346107d357602061091a6035611314366133d4565b61014061134161133b6080361517849060e0910160c08101355f52013560205260405f2090565b83615bd9565b92919390610b946137c8565b346107d357602061091a6034610e0e3661333c565b346107d357602061091a60176034610b00366133a0565b346107d357602061091a603561138e366132db565b610140610a10826155f4565b346107d357602061091a601760346113b13661343b565b6113c4610a8261094d60a0840184613898565b90361560a06113d560018317613cdd565b926113de6137c8565b94806151a7565b346107d357602061091a60356113fa36613215565b61140381615250565b9061141160e0820135613c58565b6101006114216002361517613cdd565b9261142a6137c8565b946022615e45565b346107d35760203660031901126107d357604051600435608082016001600160401b038111838210176115a05760409081525f60208401818152918401818152606085019182526001600160a01b03848116865261149c60a086901c60016001605c1b0316614862565b16835260078460fc1c16600881101561158c5781528360ff1c90600282101561158c5790825260405163d637ca8d60e01b815294516001600160a01b03908116600487015292519092166024850152905161150b91906115009060448601906135a6565b5160648401906135b3565b60848201525f8160a4817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611581576112b4915f9161155f575b5060405191829182613193565b61157b91503d805f833e61157381836135f9565b810190613635565b82611552565b6040513d5f823e3d90fd5b634e487b7160e01b5f52602160045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60403660031901126107d3576004356001600160401b0381116107d3576115e261087f91369060040161346e565b6115ea6131ff565b916138dd565b346107d357602061091a601760356116073661327d565b61162161161b6108ed610100840184613c23565b82615b66565b9061010061162d6137c8565b9336159280614d26565b346107d357602061091a6017603561164e366133a0565b611661610f186108ed60c0840184613c23565b90361560c061167260028317613cdd565b9261167b6137c8565b9480614d26565b346107d357602061091a60176034611699366133a0565b6116a281615516565b90361560a06116b082613cdd565b926116b96137c8565b94806152df565b346107d357602061091a601760346116d736613249565b6116f4610f188260e09060c08101355f52013560205260405f2090565b90361560c06116b060028317613cdd565b346107d35760403660031901126107d35761171e6131bd565b6117266131ff565b9067edcaa89a822939406020526014525f5260206034600c20546040519015158152f35b346107d357602061091a603561175f36613249565b361561176d81836028615651565b9061177781613cdd565b916117806137c8565b9360a083179180614239565b346107d357602061091a601760346117a336613249565b6117b6610b136108ed60e0840184613c23565b9060e061162d6137c8565b346107d357602061091a60346117d63661327d565b60e06117e182615524565b919092610e2a3615613cdd565b346107d357602061091a603461180336613215565b61014061181861133b6108ed83850185613c23565b92919390610ab06137c8565b346107d357602061091a60346118393661333c565b610120611818610d776108ed83850185613c23565b346107d357602061091a60356118393661333c565b602061187c610ae1611874366132b1565b939091614320565b9261188834853361437c565b61025836151791336141b4565b346107d357602061091a60346118aa3661333c565b6118be610be161094d610140840184613898565b90916101406118d1610120830135613c58565b916118da6137c8565b946027615e45565b346107d357602061091a60346118f7366132db565b61190081615542565b9091610140611913610120830135613c58565b91610f866137c8565b346107d35761192a36613408565b608081015f8061193a838561377f565b905f915b8083106119ac5750505061088a576108796034928461087461087f9660e06040515f516020615fa55f395f51905f52815233602082015233604082015260208301976060898184013760c0820152209560608201359661086f61086760016001605c1b038a60a01c16614862565b90919260019060206119bf8685876138cd565b0135809601958610179301919061193e565b346107d357602061091a6017603461164e366133a0565b6101203660031901126107d3576119fd6131bd565b506024356001600160401b0381116107d357611a1d90369060040161346e565b611a256131d3565b50600860a43510156107d357600260c43510156107d35760e435916001600160a01b03831683036107d35761010435906001600160401b0382116107d3576112b493611aca611a7b611ad094369060040161330f565b959093611a89848383614984565b9592611ab660c09b9399929b361592611aa460848517613d1e565b611aae8d83614a8c565b949094613db8565b608084015260071b61022001921790613e72565b86614b38565b604051918291826135c0565b346107d357602061091a60176034611af33661327d565b611afc81615774565b9060e0610a506137c8565b346107d357602061091a601760346116073661327d565b346107d357602061091a60176034611b3536613539565b611b48610f1861094d60c0840184613898565b90361560c06113d560028317613cdd565b346107d357602061091a6035611b6e366133d4565b611b92610be16080361517839060e0910160c08101355f52013560205260405f2090565b9091610140611ba5610120830135613c58565b9161142a6137c8565b346107d357602061091a60176035610e813661333c565b346107d357602061091a60176035611b3536613539565b346107d357602061091a603461175f36613249565b346107d357602061091a60176035611c08366132db565b611c118161559c565b9091610140611c24610120830135613c58565b91611c326002361517613cdd565b93611c3b6137c8565b956152df565b346107d3576020611c63611c74611c573661356c565b919390610cbf856148dc565b8093611c6d6139d1565b339061487c565b610ae1613baa565b346107d357602061091a6035610efb3661327d565b346107d3575f3660031901126107d357323303611d67577f00000000000000000000000000000000000000000000000000000000000000008015611d5c575b611d4d575f8080807f0000000000000000000000000000000000000000000000000000000000000000600a5a04fa3d15611d48573d611d0e8161361a565b90611d1c60405192836135f9565b81525f60203d92013e5b15611d39575f805460ff19166001179055005b6370a4078f60e01b5f5260045ffd5b611d26565b630f45b98b60e41b5f5260045ffd5b5060ff5f5416611cd0565b63096650c560e21b5f5260045ffd5b346107d357602061091a60176035611d8d36613539565b611da0610a826108ed60a0840184613c23565b90361560a061167260018317613cdd565b346107d357602061091a60176035611699366133a0565b346107d357611dd63661349e565b60608101611de48183613898565b8060069492941b81810460401482151715611efe57611e0290614bad565b935f915f5b818110611e955750505061088a57611e4d81611e2d856020611e52975191012082615373565b611e476039611e3c8785613898565b6020860135916140ed565b90614012565b613898565b5f5b818110611e6657602060405160018152f35b80611e8f6034611e796001948688614192565b611e86602082018261377f565b9091359161527d565b01611e54565b611ea0818385614192565b5f90611eaf602082018261377f565b905f915b808310611ed957505050906040839260019460061b8b0190356020820152015201611e07565b9091976001906020611eec8b85876138cd565b01358096019586101798019190611eb3565b634e487b7160e01b5f52601160045260245ffd5b346107d35760203660031901126107d357600435611f4981339190604051926014526341d0e04b5f526034526038601c2091604052565b805415611f5f57905f61087f92553615906148f6565b5063e632dbad5f52336020526040526044601cfd5b346107d357602061091a6034610c2d366133d4565b346107d3576080611f9936613408565b611fed611fe460608301611fde84611fc6611fb4848361377f565b6040519060061b809282372082615373565b611e47611fd3858461377f565b60208501359161406f565b8361377f565b939092016137b4565b905f5b83811061200257602060405160018152f35b8061202361201360019387866138cd565b6020810135903586336035615c31565b5001611ff0565b346107d35760c03660031901126107d3576120436131bd565b61204b6131ff565b906044359160088310156107d3576064359160028310156107d357612087611c74926020956120786131e9565b95612082856148dc565b61434b565b80936120916139d1565b6084359261487c565b346107d357602061091a601760356120b136613505565b6101806120bd82615626565b929091936120cf610160820135613c58565b92611c3b6137c8565b346107d357602061091a60346120ed3661333c565b361560e061210060408317846028615651565b92610b8b61210f84868461532d565b93613cdd565b346107d357602061091a6017603561212c36613249565b61214061161b61094d610100840184613898565b90610100610b246137c8565b346107d357602061091a6034611b6e366133d4565b346107d357602061091a60356118aa3661333c565b60603660031901126107d3576004356001600160401b0381116107d3576121a190369060040161346e565b602435906001600160401b0382116107d3576020926121d46121ca61091a94369060040161346e565b92909333916138dd565b60443591614159565b346107d35760203660031901126107d357608060043561224761220b60016001605c1b038360a01c16614862565b604080516001600160a01b038086168252909216602083015290929061223a90840160fc83901c6007166135a6565b606083019060ff1c6135b3565bf35b346107d357602061091a601760346108d8366133d4565b346107d35761226e3661356c565b9167edcaa89a822939406034526028526014525f52602060545f20545f603452604051908152f35b346107d357602061091a60176034611d8d36613539565b346107d357602061091a6017603461212c36613249565b60403660031901126107d3576122d86131bd565b602435908115158092036107d35767edcaa89a82293940602052336014525f52806034600c2055602052600c5160601c337fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267602080a3602060405160018152f35b346107d357602061091a601760356113b13661343b565b346107d3576101803660031901126107d35761236a6131bd565b6123726131d3565b9061237b6131e9565b5060c43560088110156107d357600260e43510156107d3576101043590610124359060038210156107d357610144356001600160401b0381116107d3576123c690369060040161330f565b94909261016435956001600160401b0387116107d35787966123ec90369060040161330f565b9890916123f885613d53565b839d93969297919436159b61240e938d936143c6565b9990604051905f52866020528b60405260605f20610100860152604052601f1961016085015161017f0116906101401761244794613e72565b61245093613eca565b60180277278d00094890015180000f3c00025800003c00000f000001901c62ffffff169161247d936141b4565b612485613baa565b604051908152602090f35b60803660031901126107d3576124a46131bd565b60243560088110156107d3576044359060028210156107d357606435916001600160a01b03831683036107d357602093610ae1926124e1926142b1565b9182349161437c565b346107d357602061091a601760356117a336613249565b346107d35760203660031901126107d357604051634e41a1fb60e01b815260048035908201525f816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611581576112b4915f9161155f575060405191829182613193565b346107d357602061091a601760346120b136613505565b346107d357602061091a60176034611c08366132db565b346107d357602061091a60176035611af33661327d565b346107d357602061091a60346125cf3661333c565b6125d881615774565b9060e06125e36137c8565b9336159280614239565b346107d3576040612627612600366132b1565b91605892601c926040519260148401526368a30dd083526034830152605482015201205490565b81519042811182526020820152f35b61263f366132b1565b909167edcaa89a8229394060345233602852601452815f528060545f20555f5260205160601c337fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a760205fa45f603452602060405160018152f35b346107d357602061091a6035610d0b366134d1565b346107d357602061091a603461138e366132db565b346107d357602061091a6034610f563661333c565b346107d35760603660031901126107d35761087f604435602435600435336141b4565b346107d35760203660031901126107d357602060405160128152f35b346107d357602061091a60176035610a3b3661333c565b346107d35761273d3661349e565b6060810161274b8183613898565b8060069492941b81810460401482151715611efe5761276990614bad565b935f915f5b8181106127c15750505061088a57611e4d81611e2d856020612794975191012082615373565b5f5b8181106127a857602060405160018152f35b806127bb6035611e796001948688614192565b01612796565b6127cc818385614192565b5f906127db602082018261377f565b905f915b80831061280557505050906040839260019460061b8b019035602082015201520161276e565b90919760019060206128188b85876138cd565b013580960195861017980191906127df565b346107d3575f3660031901126107d3576020610ae16137c8565b346107d357602061091a60356118f7366132db565b346107d357602061091a60346113fa36613215565b346107d35760403660031901126107d3576004356001600160401b0381116107d35761091a6128a3602092369060040161346e565b60243591614159565b346107d357602061091a60356125cf3661333c565b346107d35760603660031901126107d3576004356128dd6131ff565b60408051336014526341d0e04b5f5260348490526038601c209152544281119015176129145761091a906020926044359133613697565b50639287bcb05f526020526024601cfd5b346107d357602061091a601760346112cf366132db565b346107d357602061091a603561099f3661327d565b346107d35760403660031901126107d35761296a6131bd565b6024356001600160401b0381116107d35761298990369060040161330f565b6001600160a01b03909216916055811491338414843b1515179183612a35575b50501715612a25576129ba81613ef9565b806744036fc77deaed23605c1b1791825480612a1157508060209355815f5282527fc54dcaa67a8fd7b4a9aa6fd57351934c792613d5ec1acbd65274270e6de8f7e460405fa16001600160601b0360405191168152f35b8263c18b0e975f526020526040526044601cfd5b634e7f492b5f526020526024601cfd5b809192935015612a6d57808260405137604051206001600160a01b031683146001600160f81b031991358216909114169083806129a9565b634e487b7160e01b5f52603260045260245ffd5b346107d357602061091a612a943661343b565b6040515f516020615fa55f395f51905f5281523384820152336040820152612ae48260e0868201936080856060830137209260608201359361086f61086760016001605c1b038760a01c16614862565b6080612af260a084016137b4565b92013591336035615c31565b346107d357602061091a601760356116d736613249565b346107d357602061091a6035612b2a3661333c565b610140610d7d61133b61094d83850185613898565b346107d357602061091a6035612b5436613249565b612b686109b361094d610100840184613898565b90612b7660e0820135613c58565b610100612b866002361517613cdd565b926118da6137c8565b346107d3576080612b9f36613408565b612bba611fe460608301611fde84611fc6611fb4848361377f565b905f5b838110612bcf57602060405160018152f35b80612bf0612be060019387866138cd565b6020810135903586336034615c31565b5001612bbd565b346107d35760203660031901126107d357600435545f5260205ff35b346107d357602061091a6034611314366133d4565b346107d357602061091a60356120ed3661333c565b346107d357602061091a6035610fa336613215565b346107d357602061091a60176034612c6936613215565b612c7d610c536108ed610140840184613c23565b90612c8a3615838361532d565b90610140612c9c610120830135613c58565b91612caa6002361517613cdd565b936109146137c8565b346107d357602061091a603561180336613215565b346107d35760403660031901126107d357612d06612ce46131bd565b602435909190604051926014526341d0e04b5f526034526038601c2091604052565b546040518115154283116002030291600383101561158c5760409282526020820152f35b346107d357602061091a6035612d3f366132db565b610120611341604036151783615bc9565b346107d357602061091a6035610e48366133a0565b346107d357602061091a6034610b4336613215565b346107d35760203660031901126107d3576004356001600160401b0381116107d357612daa903690600401613370565b90612dbc612db733613ef9565b613fa8565b809160051b01905b818110612dd657602060405160018152f35b602090612de4338235613fcf565b01612dc4565b346107d357602061091a6034612b2a3661333c565b346107d3576101403660031901126107d357612e196131bd565b612e216131d3565b50612e2a6131e9565b50600860c43510156107d357600260e43510156107d35761010435906001600160a01b03821682036107d357610124356001600160401b0381116107d357602092612ead92612e80611c7493369060040161330f565b929091612ec3361594612e9560a48717613d1e565b94612e9f84613d53565b9b839c9a939991929a613db8565b6101008201526101406102008317921790613e72565b613eca565b346107d357602061091a6034612edd3661327d565b612ef16109536108ed610100840184613c23565b90610100612f013615848461532d565b91610aa76002361517613cdd565b346107d357602061091a6035612edd3661327d565b346107d357602061091a6034612d3f366132db565b346107d357602061091a603561093936613249565b612f57366132b1565b612f6f60016001605c1b038360a09594951c16614862565b9160018060a01b038116925f60208160a460405194828052601c8601948591631a808f91885233868901523360408901528a60608901528b60808901528960a08901525af15f5163e57f706f60e01b016107b85750505067edcaa89a8229394060205233601452835f5260405f208054808411610772578390039055601452825f5260405f208054908282019182106107655755335f52602052335f516020615f655f395f51905f5260405fa4602060405160018152f35b346107d357602061091a6035610d623661327d565b346107d3575f3660031901126107d357602080526b0b54686520436f6d70616374604b5260606020f35b346107d357602061091a60356117d63661327d565b346107d357602061091a6034612b5436613249565b346107d357602061091a60176035612c6936613215565b346107d35760203660031901126107d3576004356001600160e01b0319811681036107d35760209060e01c604051906301ffc9a7630f632fb3821491141715158152f35b346107d35760403660031901126107d3576131046131bd565b67edcaa89a822939406020526014526024355f52602060405f2054604051908152f35b346107d35760203660031901126107d357622b600360e21b815260048035908201525f816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611581576112b4915f9161155f5750604051918291825b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036107d357565b608435906001600160a01b03821682036107d357565b60a435906001600160a01b03821682036107d357565b602435906001600160a01b03821682036107d357565b60206003198201126107d357600435906001600160401b0382116107d3576101809082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d3576101209082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d3576101409082900360031901126107d35760040190565b60609060031901126107d3576004356001600160a01b03811681036107d357906024359060443590565b60206003198201126107d357600435906001600160401b0382116107d3576101a09082900360031901126107d35760040190565b9181601f840112156107d3578235916001600160401b0383116107d357602083818601950101116107d357565b60206003198201126107d357600435906001600160401b0382116107d3576101609082900360031901126107d35760040190565b9181601f840112156107d3578235916001600160401b0383116107d3576020808501948460051b0101116107d357565b60206003198201126107d357600435906001600160401b0382116107d3576101009082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d3576101c09082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d35760a09082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d35760c09082900360031901126107d35760040190565b9181601f840112156107d3578235916001600160401b0383116107d3576020808501948460061b0101116107d357565b60206003198201126107d357600435906001600160401b0382116107d35760809082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d3576102009082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d3576101e09082900360031901126107d35760040190565b60206003198201126107d357600435906001600160401b0382116107d35760e09082900360031901126107d35760040190565b60609060031901126107d3576004356001600160a01b03811681036107d357906024356001600160a01b03811681036107d3579060443590565b90600882101561158c5752565b90600282101561158c5752565b60206040818301928281528451809452019201905f5b8181106135e35750505090565b82518452602093840193909201916001016135d6565b90601f801991011681019081106001600160401b038211176115a057604052565b6001600160401b0381116115a057601f01601f191660200190565b6020818303126107d3578051906001600160401b0382116107d3570181601f820112156107d3578051906136688261361a565b9261367660405194856135f9565b828452602083830101116107d357815f9260208093018386015e8301015290565b909291926136a36139d1565b6001600160a01b0384168061372457505f9081808538935af115613717575b67edcaa89a8229394060205280601452825f5260405f209182549283821161077257815f9403905533835260205260018060a01b03165f516020615f655f395f51905f52604083a4613712613baa565b600190565b63b12d13eb5f526004601cfd5b9091926137313083613b85565b9260145260345263a9059cbb60601b5f5260205f6044601082855af13d1560015f51141716156137725761376a905f6034523090613b85565b9003906136c2565b6390b8ec185f526004601cfd5b903590601e19813603018212156107d357018035906001600160401b0382116107d357602001918160061b360383136107d357565b356001600160a01b03811681036107d35790565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046186138135790565b5060a06040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f5e6f7b4e1ac3d625bac418bc955510b3e054cb6cc23cc27885107f080180b29260208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d60408201524660608201523060808201522090565b903590601e19813603018212156107d357018035906001600160401b0382116107d357602001918160051b360383136107d357565b9190811015612a6d5760061b0190565b91906138e76139d1565b82359060018060a01b03821615916020850135341415831634158414178215176139c4578060016001605c1b03849260a01c1661392381613fa8565b936139b2575b505b81811061394157505050505061393f613baa565b565b61394c8183876138cd565b80359060016001605c1b038260a01c166001600160601b0386168103613991575b506001929161398b916020013590876001600160a01b03821661487c565b0161392b565b61398b919550916020836139a760019695613fa8565b96925050919261396d565b6139be9034908661437c565b5f613929565b63ca0fc08e5f526004601cfd5b7f000000000000000000000000000000000000000000000000000000000000000080600414613b595780600314613b475780600914613b105780600a14613ad357600814613a2d57634e487b7160e01b5f52605160045260245ffd5b613a43361568929eee149b4bd212686028615651565b805b613ac357507f000000000000000000000000000000000000000000000000000000000000000080600214613a9c57600114613a8e57634e487b7160e01b5f52605160045260245ffd5b3368929eee149b4bd212685d565b505f5460ff1615613ab5573368929eee149b4bd212685d565b3368929eee149b4bd2126855565b63f57c448b5f526020526024601cfd5b5060e0604036151768929eee149b4bd212680160c08101355f520135602052613b0a60405f2068929eee149b4bd212686031615651565b80613a45565b5068929eee149b4bd21328355f90815268929eee149b4bd213483560205260409020613b0a9068929eee149b4bd21268602f615651565b5068929eee149b4bd212685c80613a45565b505f5460ff1615613b755768929eee149b4bd212685c80613a45565b68929eee149b4bd2126854613b0a565b602460106020939284936014526370a0823160601b5f525afa601f3d11166020510290565b7f000000000000000000000000000000000000000000000000000000000000000080600614613bfc57600514613bee57634e487b7160e01b5f52605160045260245ffd5b5f68929eee149b4bd212685d565b505f5460ff1615613c15575f68929eee149b4bd212685d565b5f68929eee149b4bd2126855565b903590601e19813603018212156107d357018035906001600160401b0382116107d3576020019160608202360383136107d357565b60a090604051907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f5e6f7b4e1ac3d625bac418bc955510b3e054cb6cc23cc27885107f080180b29260208301527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d604083015260608201523060808201522090565b90604051915f516020615fa55f395f51905f525f525f516020615fc55f395f51905f526020525f516020615f855f395f51905f5260405260051b5191604052565b60a0906080604051917fe055493563385cc588fffacbffe2dab023fef807baa449530431169b0eeb5b69835260208301372090565b90613d5c6139d1565b613d7c613d7460a43560c43560e435612082876148dc565b923090613b85565b906040519063137c29fe82526080600460208401373060a083015260243560c083015260843560e0830152610140610120830152610160820190565b60807f63697069656e7429546f6b656e5065726d697373696f6e73286164647265737391609681527f436f6d706163744465706f736974207769746e65737329436f6d70616374446560208201527f706f736974286164647265737320616c6c6f6361746f722c75696e743820726560408201527f736574506572696f642c75696e74382073636f70652c6164647265737320726560608201527520746f6b656e2c75696e7432353620616d6f756e742960968201520152565b9093805f9493601c92869582613e86614eaf565b9987015260408387018360208201520137016024019101826e22d473030f116ddee9f6b43ac78ba35af11615613eb857565b3d6107cb57637f28c61e5f526004601cfd5b613ed8909291923090613b85565b9283811015613eec5761393f93039161437c565b63426d8dcf5f526004601cfd5b6affffffffffffffffffffff6a7fffffffffffffffffffff8260491c16818360481c16178060021c178060041c178060081c178060101c178060201c176755555555555555558160011c169003673333333333333333808260021c169116018060041c01670f0f0f0f0f0f0f0f660f0f0f0f0f0f0f8260081c169116018060101c01911690690fedcba9876543210000600f60581b91607f600319918060201c0116604803161c60581b161790565b6744036fc77deaed23605c1b81175415613fbf5750565b63cf90c3a85f526020526024601cfd5b604051916020526303f37b1a600c5280604052603760282090600182549160ff161b9080821661400157179055604052565b63dbc205b160601b600c526044601cfd5b916140206040820135614f51565b803590601e19813603018212156107d35701918235926001600160401b0384116107d3576020019280360384136107d35761393f93614069916140616137c8565b918585614f6c565b336150bc565b90929183159161408185826038615aa0565b9161409561408e84614862565b8092613fcf565b946001600160601b0360019316905b8084106140c257505050506140b557565b633a03d3bb5f526004601cfd5b90919293600190836001600160601b036140df8886896038615b0a565b1614151794019291906140a4565b919093928415926140ff868284615aa0565b9261410c61408e85614862565b956001600160601b0360019416915b81851061412d5750505050506140b557565b9091929394600190846001600160601b0361414a8987878b615b0a565b1614151795019392919061411b565b91905f5b81811061416d5750505050600190565b8061418c8461417f60019486896138cd565b60208101359035336141b4565b0161415d565b9190811015612a6d5760051b81013590603e19813603018212156107d3570190565b91929092604051908360148301526368a30dd082526034820194855260548201526058601c8201208242019262278d00811182548510176142295750829055607401526001600160a01b0316907ff78a2f33ff80ef4391f7449c748dc2d577a62cd645108f4f4069f4a7e0635b6a90606090a2565b631f9a96f45f526020526024601cfd5b939195909497969286019586359560208801359760608101359861425d89876152bf565b89811061429c575091614299999a93916142939593604060018060a01b03910135169760016001605c1b038a60a01c1690614c4a565b90615c31565b90565b8990633078b2f65f526020526040526044601cfd5b90916142bc81613ef9565b6744036fc77deaed23605c1b811754909118613fbf5760a01b9160fc1b9060ff1b171790565b6142eb82613ef9565b6744036fc77deaed23605c1b81175490921861430f57600360fc1b9160a01b171790565b5063cf90c3a85f526020526024601cfd5b61432981613ef9565b6744036fc77deaed23605c1b811754909118613fbf5760a01b600360fc1b1790565b9261435581613ef9565b6744036fc77deaed23605c1b811754909118613fbf5760a01b9160fc1b9060ff1b17171790565b909167edcaa89a8229394060205281601452825f5260405f208054908282019182106107655755335f5260205260018060a01b03165f5f516020615f655f395f51905f52604082a4565b939194925f9160208601925f935f9515908161481f575b85156147ce575b505f92801561473a575b5f1981011561469b575b83156145e1575b8415614460575050508184959697823701946e75696e7432353620616d6f756e7429600e8701527f29546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c5f19870152600e81870301905280850390209303902090565b91985096935083919450600e925060051b936e75696e7432353620616d6f756e7429838201527f29546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c5f19820152030190526040519261456d575b83156144f9575b5f516020615fa55f395f51905f525f525f516020615fc55f395f51905f526020525f516020615f855f395f51905f526040525191604052565b7f45012d42fad8c9e937cff5a2d750ee18713dd45aadcd718660d5523056618d995f527fc2e16a823b8cdddfdf889991d7a461f0a19faf1f8e608f1c164495a52151cc3e6020527fd2f6ad391328936f118250f231e63c7e639f9756a9ebf972d81763870a772d87604052805193506144c0565b7f2bf981c42c7f423b06fa49ba996d2930887e2f1f53d9a26b8c7423ac1cf83e615f527fd14445d78213a5acddfa89171b0199de521c3b36738b835264cae18f5a53dbf36020527f329b3c527a3c74b8cabc51c304669d1866b87352cafdf440ef2becd6dc261d1e604052805193506144b9565b7f4d756c7469636861696e436f6d7061637420636f6d70616374294d756c74696387527f6861696e436f6d7061637428616464726573732073706f6e736f722c75696e7460208801527f323536206e6f6e63652c75696e7432353620657870697265732c5365676d656e60408801526f5d20696473416e64416d6f756e74732c60708801527f697465722c75696e7432353620636861696e49642c75696e743235365b325d5b6060880152601a87019660900193506143ff565b7f4261746368436f6d7061637420636f6d70616374294261746368436f6d70616387527f74286164647265737320617262697465722c616464726573732073706f6e736f60208801527a75696e743235365b325d5b5d20696473416e64416d6f756e74732c605b8801527f722c75696e74323536206e6f6e63652c75696e7432353620657870697265732c60408801526015870196607b0193506143f8565b7f436f6d7061637420636f6d7061637429436f6d7061637428616464726573732087527f617262697465722c616464726573732073706f6e736f722c75696e743235362060208801526f2c75696e7432353620616d6f756e742c60508801527f6e6f6e63652c75696e7432353620657870697265732c75696e743235362069646040880152601087019660700193506143ee565b7569766174696f6e2875696e743235365b5d206964732c60368a01527f426174636841637469766174696f6e207769746e65737329426174636841637490526056880195506038880194505f6143e4565b686e743235362069642c60298a01527f41637469766174696f6e207769746e6573732941637469766174696f6e28756981526049890196506033890195506143dd565b6744036fc77deaed23605c1b81175491908215613fbf5750565b91906148883084613b85565b9260405194606052306040523360601b602c526323b872dd60601b600c5260205f6064601c82855af13d1560015f51141716156148cf5761393f945f606052604052613eca565b637939f4245f526004601cfd5b8060601b156148e85790565b63961c9a4f6040526024605cfd5b908015155f52602052337fe27f5e0382cf5347965fc81d5c81cd141897fe9ce402d22c496b7c2ddc84e5fd60405fa3565b6001600160401b0381116115a05760051b60200190565b9061494882614927565b61495560405191826135f9565b8281528092614966601f1991614927565b0190602036910137565b8051821015612a6d5760209160051b010190565b919261498e6139d1565b6001600160a01b03833516159260208101353490811415851690158514178315176139c45783926149c660843560a43560c4356142b1565b956149d08261493e565b94614a6d575b50848103956149e48761493e565b925f925f5b898110614a0857505050506149fb5790565b630f2f1e515f526004601cfd5b80614a598a600193979596970194614a29614a2487878a6138cd565b6137b4565b90848060a01b0382166001600160601b0360a01b8a1617988911151797614a5181978d614970565b523090613b85565b614a638289614970565b52019291926149e9565b614a799087349161437c565b835115612a6d578560208501525f6149d6565b91604051918360061b8460071b9160061b6024350163fe8ec1a7855260c06020860152816101400160408601526004356060860152826101600160a0860152606060e0860152604435610100860152606435610120860152856101408601528160248201610160870137818501956101608701525f5b828110614b185750939450508301610180019150565b806040918801306101808201526101a06044838601013591015201614b02565b83515f96909594939290875b878110614b5f575050505050505050613eec5761393f613baa565b80614ba783600193019a614b818c614b7c614a2430928c8b6138cd565b613b85565b90614b9d614b8f858c614970565b519183831015179d89614970565b519103908a61437c565b01614b44565b90614bb78261361a565b614bc460405191826135f9565b8281528092614966601f199161361a565b9015612a6d5790565b9190811015612a6d576060020190565b8160061b82810460401483151715611efe57614c0990614bad565b915f5b818110614c20575050506020815191012090565b80614c2e6001928486614bde565b604060208360061b880192803582850152013591015201614c0c565b60408401356001600160a01b031697969095939486948994919387358801936020890135890192909183359190614c8460808c0135614f51565b614c8d90614862565b6060819b013590614c9d91613fcf565b86811502019181151587841415179081159b614cd49961393f9d614cf0575b505050614cda575b5050508582359260200191614f6c565b846150bc565b614ce8926020018c89614f6c565b5f8080614cc4565b614d1b9350605892601c926040519260148401526368a30dd083526034830152605482015201205490565b4210155f898e614cbc565b98979380959196614d6b939894890198893581019860208a81019a359b013597614d63614d538d8d614bd5565b3560a01c60016001605c1b031690565b9d8e91615e45565b90614d768686614bd5565b95614d9f6020614d93878a35809b6040810135948591013561535c565b83151798868686615c31565b506001600160601b0360019916985b818110614dc7575050505050505061371291925061536d565b614dd2818389614bde565b80359889918860408201359b8c926020013592614dee9361535c565b8c8360a01c60016001605c1b03161415171798614e0d91878787615c31565b50600101614dae565b9015612a6d57803590605e19813603018212156107d3570190565b9190811015612a6d5760051b81013590605e19813603018212156107d3570190565b8160061b82810460401483151715611efe57614e6e90614bad565b915f5b818110614e85575050506020815191012090565b80614e936001928486614e31565b604060208360061b880192803582850152013591015201614e71565b7f0000000000000000000000000000000000000000000000000000000000000000613712576e22d473030f116ddee9f6b43ac78ba33b151590565b60a092916040606092815194848601525f516020615f455f395f51905f5285528560208601933385524684880152608087208752820101358101803560051b80916020018537602001852060808601525f516020615f855f395f51905f5285520190372090565b42811115614f5c5750565b63f80dbaea5f526020526024601cfd5b604080516119015f9081526020979097529181526042601e20918152919390929091606483019083146001600160a01b0386166041851481614fc7575b5050505050505033141715614fba57565b638baa579f5f526004601cfd5b909192939495975060405192885f5261506c575b61502d575b60209495965f60605282604052630b135d3f60e11b83526004830152602482019586946040865281604485015260648401375afa9051630b135d3f60e11b1416905f808080808080614fa9565b60408401355f1a60205260408481376020600160805f825afa5181183d1517614fe0575094505050506001915f6060526040525f808080808080614fa9565b60208581013560ff81901c601b01825286356040526001600160ff1b0316606052600160805f825afa5182183d1517614fdb57505094505050506001915f6060526040525f808080808080614fa9565b5f91825233926001600160a01b03908116929116907f770c32a2314b700d6239ee35ba23a9690f2fceb93a55d8c753e953059b3b18d490602090a4565b6040519260608401525f516020615f455f395f51905f5283526020830191338352466040850152608084209082019060a082013583019060c0823560051b93013560051b5f905f5b85811061517857505050505091604060609260a09594602001852060808601525f516020615f855f395f51905f5285520190372090565b8089016020848301870101358152828214615197575b50602001615141565b602090810185905292508261518e565b949195849197966151d4948101358101988960200199359a6151cc614d538d8d614e16565b988991615e45565b8515956001600160601b035f9416935b8181106151fb57505050505050506137129061536d565b806152498761520d600194868c614e31565b80359b8c8a60016001605c1b036152248c846153b0565b9260a01c16141517179b87602061523e604085018561377f565b9190940135936153c6565b50016151e4565b614299906152756040361517829060e0910160c08101355f52013560205260405f2090565b906031615651565b9291905f5b818110615290575050505050565b806152b86152a160019385896138cd565b8560206152ad836137b4565b920135913389615c31565b5001615282565b8160ff1c15901517156152cf5750565b63a06356f55f526020526024601cfd5b95849061530e9399949692968a01998a3597889660408d013583019a60016001605c1b038960a01c1691615e45565b9561531f60209261429998946152bf565b0135928035906020016153c6565b60a0916040519382019160c0830135019081359384930135855260208501526020016040840137604001902090565b9261536791926153b0565b91101790565b6140b557565b60c09160408051925f516020615fc55f395f51905f5284523360208501523382850152602081013560608501520135608083015260a08201522090565b60ff1c600281101561158c576001149015151690565b91949290925f958415945f5b81811061540157505050505050828210176153ee575050600190565b633078b2f65f526020526040526044601cfd5b8061543460209a988761542d61541a600196888d6138cd565b9d8e0135928c84019c8d10179b9d6137b4565b8789615c31565b50016153d2565b906040519160c08101350191823580937f4d756c7469636861696e436f6d7061637428616464726573732073706f6e736f83527f722c75696e74323536206e6f6e63652c75696e7432353620657870697265732c60208401527f5365676d656e745b5d207365676d656e7473295365676d656e7428616464726560408401527535365b325d5b5d20696473416e64416d6f756e74732c60768401527f737320617262697465722c75696e7432353620636861696e49642c75696e74326060840152602001609683013782604301605382012092609601902090565b614299903615906028615651565b906142996155386040361517846028615651565b928336159161532d565b61556d906155676080361517829060e0910160c08101355f52013560205260405f2090565b90615b8a565b9091565b61556d906155966040361517829060e0910160c08101355f52013560205260405f2090565b90615b66565b906142996155386155c46080361517859060e0910160c08101355f52013560205260405f2090565b846032615651565b90614299615538610b6b6040361517859060e0910160c08101355f52013560205260405f2090565b61561f906156196080361517829060e0910160c08101355f52013560205260405f2090565b90615bd9565b9192909190565b61561f9061564b60c0361517829060e0910160c08101355f52013560205260405f2090565b90615c0a565b91909180603214615764578060311461575757806030146157475780602b146157165780602f1461570957806028146156c857806033146156b057602a146156a757634e487b7160e01b5f52605160045260245ffd5b61429991615373565b5060e0910160c08101355f52013560205260405f2090565b5060c060e092606060408051948301925f516020615fa55f395f51905f52865233602087015201604085013760a081013560a0840152013560c08201522090565b5061429991361590614eea565b509060c091606060408051935f516020615fc55f395f51905f52855233602086015201604084013760a08201522090565b5061429991604036151790614eea565b50614299913615906150f9565b50614299916040361517906150f9565b9061010060405160a060c085013585019460608635967f436f6d70616374286164647265737320617262697465722c6164647265737320855260208501977f73706f6e736f722c75696e74323536206e6f6e63652c75696e7432353620657889528060408701927f70697265732c75696e743235362069642c75696e7432353620616d6f756e742c845260200184880137820185209788865233905260408301903760e0810135828401528381013560c0840152013560e0820152209190565b60e09092919260a06040519160c081013581019560608735977f4261746368436f6d70616374286164647265737320617262697465722c616464865260208601987f726573732073706f6e736f722c75696e74323536206e6f6e63652c75696e74328a52656f756e74732c60468801528060408801927f353620657870697265732c75696e743235365b325d5b5d20696473416e64416d8452602001606689013760660186209889875233905260408401903782840152013560c0820152209190565b92919280602c146159df5760291461591d57634e487b7160e01b5f52605160045260245ffd5b6101009060a0604051918360c082013582019660608835987f436f6d70616374286164647265737320617262697465722c6164647265737320875260208701997f73706f6e736f722c75696e74323536206e6f6e63652c75696e743235362065788b528060408901927f70697265732c75696e743235362069642c75696e7432353620616d6f756e742c8452602001848a013782018720998a8852339052604085019037820160e081013584860152013560c0840152013560e0820152209190565b5060e09060a06040519160c081013581019560608735977f4261746368436f6d70616374286164647265737320617262697465722c616464865260208601987f726573732073706f6e736f722c75696e74323536206e6f6e63652c75696e74328a52656f756e74732c60468801528060408801927f353620657870697265732c75696e743235365b325d5b5d20696473416e64416d8452602001606689013760660186209889875233905260408401903782840152013560c0820152209190565b91909180603814615af45780603914615ad857600714615ace57634e487b7160e01b5f52605160045260245ffd5b614299915f615651565b505f615aec9160016001605c1b0393614192565b3560a01c1690565b5015612a6d573560a01c60016001605c1b031690565b80603814615b525780603914615b3e57600714615b3557634e487b7160e01b5f52605160045260245ffd5b61429992615651565b5091615aec9160016001605c1b0393614192565b5091615aec9160016001605c1b03936138cd565b9190615b8690615b758461543b565b94908591604036151790602d615ce7565b9190565b9190615b8690615b998461543b565b94908591604036151790602e615ce7565b91615bba615b869284602c6158f7565b9290938460403615179161532d565b91615bba615b86928460296158f7565b91615b86604093615c0093615bed8261543b565b959091863615936080851786602d615ce7565b958691179161532d565b91615b86604093615c0093615c1e8261543b565b959091863615936080851786602e615ce7565b939291909380603514615cdd5780603414615c6a57603714615c6157634e487b7160e01b5f52605160045260245ffd5b614299936140ed565b5090929167edcaa89a8229394060205282601452835f5260405f20805480831183151761077257829003905581601452835f5260405f208054908282019182106107655755335f5260205260018060a01b03169060018060a01b03165f516020615f655f395f51905f5260405fa4600190565b5061429993613697565b9594939190929580602d14615dce57602e14615d1157634e487b7160e01b5f52605160045260245ffd5b6040519360608501528584525f516020615f455f395f51905f526020850196338852466040870152141580615dbf575b60051b60800184209083019060a082013584019060c0823560051b93013560051b5f905f5b858110615d9057505050505060609260a09596926040926020018620608087015285520190372090565b8089016020848301870101358152828214615daf575b50602001615d66565b6020908101859052925082615da6565b60a08401356080860152615d41565b5060609260a095969286604093845197878901528588525f516020615f455f395f51905f52602089019633885246878b0152141580615e37575b60051b60800188208852830101358201803560051b809160200186376020018620608087015285520190372090565b8285013560808a0152615e08565b969594939291909680602714615f315780602414615f1c5780602114615f075780602314615ef75780601f14615ee25780602614615ecf5780602214615ec45780602514615eb157601714615ea857634e487b7160e01b5f52605160045260245ffd5b61429996614c4a565b50906017959493929187614299986152df565b508661429997614239565b5090601795949392918761429998614d26565b50916142999691601796959493361593614d26565b5090614299969291361593614239565b509161429996916017969594933615936151a7565b509161429996916017969594933615936152df565b50906017959493929187614299986151a756fe295feb095767cc67d7e74695da0adaddede54d7b7194a8a5426fe8f0351e03371b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288595ca9a66b8bbf0d2316e90dfa3df465f0790b277b25393a3ef4d67e1f50865057cdca950b17b5efc016b74b912d8527dfba5e404a688cbc3dab16cb943287fec25a7fee8000a237929ef9be08f2933c4b4f320b00b38809f3c7aa104d5421049fa164736f6c634300081c000a",
    "sourceMap": "1085:8212:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8968:151;1085:8212;8968:151;;;1085:8212;;;;;7602:1659:68;1085:8212:36;7602:1659:68;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5321:14:68;1085:8212:36;5321:14:68;;;1085:8212:36;;;;;;;;;;;;;;;2310:667:59;1085:8212:36;2310:667:59;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8235:26:59;1085:8212:36;8235:26:59;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12498:568:27;1085:8212:36;12498:568:27;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5321:14:68;1085:8212:36;5321:14:68;;;1085:8212:36;;;;;;;;;;8235:26:59;1085:8212:36;8235:26:59;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4017:20:59;1085:8212:36;4017:20:59;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:667:59;1085:8212:36;2310:667:59;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4017:20:59;;;1085:8212:36;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;:::i;:::-;;;;;;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;9307:42;:::i;:::-;1085:8212:36;;;;;;7602:1659:68;;1085:8212:36;;;;;;7602:1659:68;;;1085:8212:36;;7602:1659:68;;1085:8212:36;7602:1659:68;;;;;;;;;;;;;;;;;;;;1085:8212:36;7602:1659:68;;;;1085:8212:36;7602:1659:68;;;;1085:8212:36;7602:1659:68;;;;12790:117:60;7602:1659:68;;;;;1085:8212:36;7602:1659:68;-1:-1:-1;;;7602:1659:68;;;9531:2564:27;;;;;;;;7602:1659:68;9531:2564:27;;;1085:8212:36;9531:2564:27;;;;;1085:8212:36;9531:2564:27;;;1085:8212:36;9531:2564:27;;;;;;;;;;;;;;;;;;;1085:8212:36;9531:2564:27;;;;;;;;;;;;;;7602:1659:68;1085:8212:36;9531:2564:27;1085:8212:36;9531:2564:27;-1:-1:-1;;;;;;;;;;;1085:8212:36;;9531:2564:27;1085:8212:36;9531:2564:27;;1085:8212:36;;;;;;;9531:2564:27;;1085:8212:36;9531:2564:27;1085:8212:36;7602:1659:68;9531:2564:27;;;1085:8212:36;9531:2564:27;1085:8212:36;7602:1659:68;9531:2564:27;;;1085:8212:36;9531:2564:27;;1085:8212:36;9531:2564:27;;;1085:8212:36;9531:2564:27;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;9531:2564:27;1085:8212:36;7602:1659:68;9531:2564:27;7602:1659:68;;;;;;;;;;;;;;1085:8212:36;7602:1659:68;;;1085:8212:36;7602:1659:68;1085:8212:36;;;;;;;;;;;:::i;:::-;3669:19:59;;;1085:8212:36;;3669:19:59;;;;:::i;:::-;3877:13;1085:8212:36;3872:369:59;3892:19;;;;;;4261:1050;;;;;2244:19:47;5626:9:36;4261:1050:59;;1085:8212:36;2278:9:47;4261:1050:59;1085:8212:36;;4261:1050:59;-1:-1:-1;;;;;;;;;;;4261:1050:59;;;4017:20;4261:1050;;;;1085:8212:36;4261:1050:59;;;4017:20;4261:1050;;;;;;;;;;;;;;4086:11:68;4261:1050:59;4086:11:68;;1085:8212:36;12790:117:60;2062:9:69;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;9307:42;:::i;:::-;1085:8212:36;;;2062:9:69;:::i;:::-;1085:8212:36;:::i;:::-;2244:19:47;:::i;:::-;2278:9;;:::i;:::-;4017:20:59;1085:8212:36;;;;;;4261:1050:59;;1085:8212:36;4261:1050:59;;4017:20;4261:1050;;;;3913:3;4017:13;;;1085:8212:36;4017:13:59;:20;:13;;;;;:::i;:::-;:20;1085:8212:36;;;;4191:22:59;;;4175:51;3913:3;1085:8212:36;3877:13:59;;;;1085:8212:36;;;;;11806:170:45;11967:8;17305:9:43;1085:8212:36;;;:::i;:::-;19364:12:42;19230:225;19364:34;:12;;;;;;:::i;:::-;:34;;:::i;:::-;19230:225;;:::i;:::-;30600:29:46;;;;:58;:29;;;1085:8212:36;30600:58:46;:::i;:::-;30670:18;;;:::i;:::-;30401:308;11806:170:45;:::i;:::-;1085:8212:36;;;;;;;;;;;;;21628:250:46;18259:8:43;1085:8212:36;;;:::i;:::-;20153:30:42;10999:39;:12;;;;;;:::i;:::-;:39;;:::i;:::-;20153:30;11040:45;20153:30;:::i;:::-;5067:83:55;10999:12:42;21469:68;5067:83:55;;21469:68:42;;;:::i;:::-;1085:8212:36;21801:36:46;21809:1;1085:8212:36;5067:83:55;;21801:36:46;:::i;:::-;21839:18;;;:::i;:::-;21628:250;:57;:250;:::i;1085:8212:36:-;;;;;28390:289:46;14631:8:43;1085:8212:36;;;:::i;:::-;20153:30:42;8453:34;:12;;;;;;:::i;:34::-;20153:30;8797:51;20153:30;:::i;:::-;28542:29:46;:58;1085:8212:36;28542:29:46;;1085:8212:36;28542:58:46;:::i;:::-;8453:12:42;28602:36:46;28610:1;1085:8212:36;5067:83:55;;28602:36:46;:::i;:::-;28640:18;;;:::i;:::-;28390:289;:52;:289;:::i;1085:8212:36:-;;;;;10457:191:46;5049:9:43;1085:8212:36;;;:::i;:::-;10601:5:46;25394:148:42;25489:4;5067:83:55;;;25394:148:42;;:::i;:::-;1085:8212:36;;;;10618:18:46;;:::i;:::-;10457:191;:52;:191;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;12605::43;1085:8212:36;;;:::i;:::-;13766:86:42;;;:::i;:::-;18060:18:46;18043:5;18060:18;;:::i;:::-;17935:155;1085:8212:36;5689:83:55;9882:170:45;;;:::i;1085:8212:36:-;;;;;11364:229:46;5689:9:43;1085:8212:36;;;:::i;:::-;20153:30:42;9563:34;:12;1085:8212:36;9563:12:42;;;;:::i;:34::-;20153:30;9914:26;20153:30;:::i;:::-;5067:83:55;1085:8212:36;21469:68:42;5067:83:55;;21469:68:42;;;:::i;:::-;1085:8212:36;11516:36:46;11524:1;1085:8212:36;5067:83:55;;11516:36:46;:::i;:::-;11554:18;;;:::i;:::-;11364:229;:52;:229;:::i;1085:8212:36:-;;;-1:-1:-1;;1085:8212:36;;;;;1853:80:53;1085:8212:36;;:::i;:::-;1853:80:53;:::i;:::-;2055:9;;2039:10;;2055:9;:::i;:::-;1085:8212:36;;;;;;;;;;;13776:175:45;13942:8;7463:9:43;1085:8212:36;;;:::i;:::-;13274:124:42;13358:39;:12;1085:8212:36;13358:12:42;;;;:::i;:39::-;13274:124;;:::i;:::-;13987:18:46;1085:8212:36;13987:18:46;;:::i;:::-;13863:154;1085:8212:36;5689:83:55;13776:175:45;;;:::i;1085:8212:36:-;;;;;15363:230:46;8903:9:43;1085:8212:36;;;:::i;:::-;;5067:83:55;15509:5:46;20153:30:42;22104:98;1085:8212:36;5067:83:55;;22104:98:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;22104:98:42;20153:30;11040:45;20153:30;:::i;:::-;21469:68;15516:36:46;15524:1;21469:68:42;;;;;:::i;:::-;1085:8212:36;5067:83:55;15516:36:46;:::i;:::-;15554:18;;;:::i;:::-;15363:230;:47;:230;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;301:99:58;1085:8212:36;301:99:58;1085:8212:36;;301:99:58;1085:8212:36;;;;;29732:257:46;16425:9:43;1085:8212:36;;;:::i;:::-;15198:185:42;15301:34;:12;;;;;;:::i;:34::-;15198:185;;:::i;:::-;29880:29:46;;15301:12:42;29880:58:46;:29;;;1085:8212:36;29880:58:46;:::i;:::-;29950:18;;;:::i;1085:8212:36:-;;;;;29732:257:46;16209:8:43;1085:8212:36;;;:::i;:::-;;;;;;9297:9:43;1085:8212:36;;;:::i;:::-;;5067:83:55;;20153:30:42;22563:107;22651:4;5067:83:55;;22563:107:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;22563:107:42;20153:30;11894:54;20153:30;:::i;:::-;21469:68;24111:5:46;21469:68:42;;;;;:::i;:::-;1085:8212:36;24178:36:46;24186:1;24118:58;:29;;;1085:8212:36;24118:58:46;:::i;24178:36::-;24216:18;;;:::i;:::-;23940:315;1085:8212:36;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::i;:::-;11812:6:53;6995:93;1085:8212:36;;:::i;:::-;6995:23:53;;;:::i;:::-;:93;:::i;:::-;11523:372;;;:::i;:::-;1085:8212:36;;;7221:10:53;;11812:6;;:::i;:::-;;;:::i;:::-;4473:27:63;4481:5;1085:8212:36;5067:83:55;;1085:8212:36;;;;7221:10:53;4473:27:63;:::i;1085:8212:36:-;;;;;;10681:8:43;1085:8212:36;;;:::i;:::-;25434:5:46;26926:304:42;27055:118;27154:4;1085:8212:36;5067:83:55;;27055:118:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;26926:304:42;26919:311;;;;25441:58:46;:29;;;1085:8212:36;25441:58:46;:::i;:::-;25511:18;;;:::i;1085:8212:36:-;;;;;14399:223:46;7659:8:43;1085:8212:36;;;:::i;:::-;17004:12:42;16907:181;17004:39;:12;;;;;;:::i;:39::-;16907:181;;:::i;:::-;14583:18:46;;;;;;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;2283:14:70;13542:488:60;;;11487:137;;;;;13542:488;;;1790:15:70;1085:8212:36;1981:10:70;;1962:34;1981:10;;;6656:622;;6777:495;;;;;;;;;;;;;;;;6656:622;1962:34;2006:168;2283:14;:::i;1085:8212:36:-;;;;;17355:240:46;12003:9:43;1085:8212:36;;;:::i;:::-;17511:5:46;10316:77:42;;;:::i;:::-;1085:8212:36;;;17518:36:46;17526:1;1085:8212:36;5067:83:55;;17518:36:46;:::i;:::-;17556:18;;;:::i;1085:8212:36:-;;;;;13314:239:46;6913:8:43;1085:8212:36;;;:::i;:::-;20153:30:42;9873:39;:12;1085:8212:36;9873:12:42;;;;:::i;20153:30::-;5067:83:55;1085:8212:36;21469:68:42;5067:83:55;;21469:68:42;;;:::i;1085:8212:36:-;;;;;13776:175:45;13942:8;18675::43;1085:8212:36;;;:::i;:::-;20153:30:42;12246:39;:12;;;;;;:::i;20153:30::-;5067:83:55;21469:68:42;5067:83:55;;21469:68:42;;;:::i;:::-;1085:8212:36;12246:12:42;31852:58:46;:29;;;1085:8212:36;31852:58:46;:::i;:::-;1085:8212:36;31912:36:46;31920:1;1085:8212:36;5067:83:55;;31912:36:46;:::i;:::-;31950:18;;;:::i;:::-;31654:335;13776:175:45;:::i;1085:8212:36:-;;;;;10457:191:46;4853:8:43;1085:8212:36;;;:::i;:::-;;;;;15174:162:45;8021:8:43;1085:8212:36;;;:::i;:::-;20153:30:42;20598:64;;32705:531:59;1085:8212:36;32705:531:59;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;20598:64:42;20153:30;20664:42;20153:30;:::i;:::-;1085:8212:36;;5067:83:55;14967:4:46;14973:36;14981:1;5067:83:55;;14973:36:46;:::i;:::-;15011:18;;;:::i;:::-;14865:176;15174:162:45;;:::i;1085:8212:36:-;;;;;25784:289:46;11625:9:43;1085:8212:36;;;:::i;:::-;;;;:::i;:::-;25936:29:46;:58;1085:8212:36;25936:29:46;;1085:8212:36;25936:58:46;:::i;:::-;25929:5;25996:36;26004:1;1085:8212:36;5067:83:55;;25996:36:46;:::i;:::-;26034:18;;;:::i;:::-;25784:289;:52;:289;:::i;1085:8212:36:-;;;;;15174:162:45;9475:8:43;1085:8212:36;;;:::i;:::-;16001:5:46;1085:8212:36;5067:83:55;23950:250:42;24052:100;1085:8212:36;5067:83:55;;24052:100:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;24052:100:42;23950:250;;:::i;:::-;23943:257;;;16018:18:46;;:::i;1085:8212:36:-;;;;2310:667:59;3084:71:68;1085:8212:36;;;:::i;:::-;;2310:667:59;-1:-1:-1;;;;;;;;;;;2310:667:59;;;;;;;;1085:8212:36;2310:667:59;;;3010:8:68;2310:667:59;1085:8212:36;2310:667:59;;;;;;;;;;;2947:11:68;2310:667:59;2947:11:68;;1085:8212:36;12790:117:60;2062:9:69;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;9307:42;:::i;3010:8:68:-;2310:667:59;3106:18:68;12790:117:60;3106:18:68;;;:::i;:::-;3139:15;;1085:8212:36;2310:667:59;;5148:8:36;3084:71:68;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;692:938:58;;1085:8212:36;692:938:58;1085:8212:36;692:938:58;;;1085:8212:36;692:938:58;;;;;;;;;;1085:8212:36;692:938:58;1085:8212:36;692:938:58;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;692:938:58;;;;;1085:8212:36;692:938:58;;;;;;1085:8212:36;;;;;11364:229:46;5515:8:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;;;:::i;:::-;4965:661:49;1085:8212:36;4965:661:49;;;;453:10;4965:661;;;1085:8212:36;4965:661:49;1085:8212:36;4965:661:49;;;;;;1085:8212:36;4965:661:49;;;;;1085:8212:36;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;:::i;:::-;13446:63:52;;;;;;;;:::i;:::-;13598:158;;;;;;;;;;;;;;1085:8212:36;13598:158:52;;13860:100;;;;;:::i;:::-;1085:8212:36;;;;;;6305:83:55;;1085:8212:36;6305:83:55;;7578:9012:51;;;;:::i;:::-;17315:570;;;1085:8212:36;17315:570:51;;1085:8212:36;17315:570:51;1085:8212:36;17315:570:51;1085:8212:36;17315:570:51;1085:8212:36;;17315:570:51;1085:8212:36;17315:570:51;;;1085:8212:36;17315:570:51;7205:121:52;;14478:559;1085:8212:36;14478:559:52;;;;;1085:8212:36;14478:559:52;;;;;;;;;;;;;;;;;;;5067:83:55;1085:8212:36;5067:83:55;15198:9:52;;;:::i;:::-;15398:28;;;;:::i;:::-;13542:488:60;;;;;;;3956:20:63;;;;:::i;:::-;1085:8212:36;;;;;;;:::i;:::-;;;;;;;;;13776:175:45;13942:8;20665:9:43;1085:8212:36;;;:::i;:::-;19807:12:42;19668:235;19807:39;:12;;;;;;:::i;19668:235::-;33257:29:46;;;;:58;:29;;;1085:8212:36;33257:58:46;:::i;:::-;33327:18;;;:::i;1085:8212:36:-;;;;;16430:191:46;10467:9:43;1085:8212:36;;;:::i;:::-;16574:5:46;26376:277:42;26496:109;26586:4;1085:8212:36;5067:83:55;;26496:109:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;26496:109:42;26376:277;;:::i;:::-;26369:284;;;;16591:18:46;;:::i;1085:8212:36:-;;;;;17355:240:46;11809:8:43;1085:8212:36;;;:::i;:::-;;;;;13776:175:45;13942:8;7275::43;1085:8212:36;;;:::i;:::-;;;;;18482:223:46;13647:9:43;1085:8212:36;;;:::i;:::-;18649:5:46;17537:104:42;;;:::i;1085:8212:36:-;;;;;13776:175:45;13942:8;6573::43;1085:8212:36;;;:::i;:::-;20153:30:42;6898:39;:12;;;;;;:::i;20153:30::-;1085:8212:36;;5067:83:55;6898:12:42;12924:36:46;12932:1;5067:83:55;;12924:36:46;:::i;:::-;12962:18;;;:::i;:::-;12806:186;13776:175:45;;:::i;1085:8212:36:-;;;;;23301:279:46;8545:9:43;1085:8212:36;;;:::i;:::-;7992:40:42;;;:::i;:::-;23443:29:46;:58;1085:8212:36;23443:29:46;;1085:8212:36;23443:58:46;:::i;:::-;23436:5;23503:36;23511:1;1085:8212:36;5067:83:55;;23503:36:46;:::i;:::-;23541:18;;;:::i;:::-;23301:279;:47;:279;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2251:90:55;;;1085:8212:36;;9307:42:60;1085:8212:36;12790:117:60;;;-1:-1:-1;;;;;12790:117:60;9307:42;:::i;:::-;1085:8212:36;;;11487:137:60;;;;;1085:8212:36;;;;;;;;11032:107:60;;;1085:8212:36;;;;;;;;;;;;-1:-1:-1;;;5394:39:48;;1085:8212:36;;-1:-1:-1;;;;;1085:8212:36;;;;5394:39:48;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;5394:39:48;1085:8212:36;5394:18:48;-1:-1:-1;;;;;1085:8212:36;5394:39:48;;;;;;1085:8212:36;5394:39:48;1085:8212:36;5394:39:48;;;1085:8212:36;;;;;;;;;:::i;5394:39:48:-;;;;;;1085:8212:36;5394:39:48;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;2639:9;1085:8212;;;;;;:::i;:::-;;;:::i;:::-;2639:9;;:::i;1085:8212::-;;;;;11806:170:45;11967:8;16003:9:43;1085:8212:36;;;:::i;:::-;14015:167:42;14109:34;:12;;;;;;:::i;:34::-;14015:167;;:::i;:::-;20187:18:46;14109:12:42;20187:18:46;;:::i;:::-;20062:155;1085:8212:36;5689:83:55;11806:170:45;;;:::i;1085:8212:36:-;;;;;11806:170:45;11967:8;14447:9:43;1085:8212:36;;;:::i;:::-;20153:30:42;7498:34;:12;;;;;;:::i;20153:30::-;1085:8212:36;;5067:83:55;7498:12:42;19082:36:46;19090:1;5067:83:55;;19082:36:46;:::i;:::-;19120:18;;;:::i;:::-;18964:186;11806:170:45;;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;3827::43;1085:8212:36;;;:::i;:::-;6447:44:42;;;:::i;:::-;1085:8212:36;;5067:83:55;9026:4:46;9032:36;;;:::i;:::-;9070:18;;;:::i;:::-;8924:176;9882:170:45;;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;11071::43;1085:8212:36;;;:::i;:::-;20153:30:42;20598:64;;32705:531:59;1085:8212:36;32705:531:59;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;20153:30:42;1085:8212:36;;5067:83:55;16949:4:46;16955:36;16963:1;5067:83:55;;16955:36:46;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;:::i;:::-;6702:189:27;;1085:8212:36;6702:189:27;;;1085:8212:36;6702:189:27;1085:8212:36;6702:189:27;;;;1085:8212:36;;;;;;;;;;;;;15174:162:45;2675:9:43;1085:8212:36;;;:::i;:::-;;5067:83:55;20153:30:42;;;20382:26;20153:30;:::i;:::-;7202:36:46;;;;:::i;:::-;7240:18;;;:::i;:::-;7077:193;7182:4;5067:83:55;;15174:162:45;;;:::i;1085:8212:36:-;;;;;11806:170:45;11967:8;5857::43;1085:8212:36;;;:::i;:::-;13002:114:42;13081:34;:12;1085:8212:36;13081:12:42;;;;:::i;13002:114::-;12007:18:46;1085:8212:36;12007:18:46;;:::i;1085:8212:36:-;;;;;9412:229:46;4147:8:43;1085:8212:36;;;:::i;:::-;;9269:57:42;;;:::i;:::-;1085:8212:36;;;9564:36:46;1085:8212:36;5067:83:55;9564:36:46;:::i;1085:8212:36:-;;;;;20609:223:46;16631:8:43;1085:8212:36;;;:::i;:::-;17952:12:42;17840:185;17952:34;:12;;;;;;:::i;17840:185::-;20793:18:46;;;;;;:::i;1085:8212:36:-;;;;;12409:191:46;6221:8:43;1085:8212:36;;;:::i;:::-;16634:12:42;16542:171;16634:34;:12;;;;;;:::i;1085:8212:36:-;;;;;12409:191:46;6417:9:43;1085:8212:36;;;:::i;:::-;;1853:80:53;4473:27:63;1085:8212:36;;;:::i;:::-;1853:80:53;;;;:::i;:::-;2055:9;;;2039:10;;2055:9;:::i;:::-;4481:5:63;1085:8212:36;5067:83:55;;2039:10:53;;4473:27:63;:::i;1085:8212:36:-;;;;;32359:267:46;19519:8:43;1085:8212:36;;;:::i;:::-;15560:195:42;15668:39;:12;;;;;;:::i;15560:195::-;32517:29:46;;15668:12:42;32517:58:46;:29;;;1085:8212:36;32517:58:46;:::i;:::-;32587:18;;;:::i;:::-;32359:267;:57;:267;:::i;1085:8212:36:-;;;;;27126:257:46;13009:8:43;1085:8212:36;;;:::i;:::-;14922:104:42;;;:::i;:::-;27274:29:46;;27267:5;27274:58;:29;;;1085:8212:36;27274:58:46;:::i;:::-;27344:18;;;:::i;1085:8212:36:-;;;;;;;:::i;:::-;3669:19:59;;;1085:8212:36;;3669:19:59;;;;:::i;:::-;3877:13;1085:8212:36;3872:369:59;3892:19;;;;;;4261:1050;;;;;2244:19:47;5465:8:36;4261:1050:59;;1085:8212:36;2278:9:47;4261:1050:59;1085:8212:36;;4261:1050:59;-1:-1:-1;;;;;;;;;;;4261:1050:59;;;4017:20;4261:1050;;;;1085:8212:36;4261:1050:59;;;4017:20;4261:1050;;;;;;;;;;;;;;4086:11:68;4261:1050:59;4086:11:68;;1085:8212:36;12790:117:60;2062:9:69;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;9307:42;:::i;3913:3:59:-;4017:13;;;1085:8212:36;4017:13:59;:20;:13;;;;;:::i;:::-;:20;1085:8212:36;;;;4191:22:59;;;4175:51;3913:3;1085:8212:36;3877:13:59;;;;1085:8212:36;;;;;11806:170:45;11967:8;14271::43;1085:8212:36;;;:::i;:::-;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;10704:9:52;1085:8212:36;10904:28:52;1085:8212:36;;;;;;:::i;:::-;9640:63:52;;;;;;;;:::i;:::-;1085:8212:36;;10117:55:52;1085:8212:36;;;;;;;5067:83:55;;9783:60:52;1085:8212:36;5067:83:55;;9783:60:52;:::i;:::-;9948:100;;;;:::i;:::-;10117:55;;;;:::i;:::-;1085:8212:36;10279:264:52;;;;;;;5067:83:55;;10704:9:52;;:::i;:::-;10904:28;;:::i;:::-;1085:8212:36;;;;;;;:::i;:::-;;;;;9882:170:45;10043:8;4489::43;1085:8212:36;;;:::i;:::-;12559:66:42;;;:::i;:::-;10055:18:46;1085:8212:36;10055:18:46;;:::i;1085:8212:36:-;;;;;11806:170:45;11967:8;15805::43;1085:8212:36;;;:::i;:::-;;;;;13776:175:45;13942:8;17481::43;1085:8212:36;;;:::i;:::-;20153:30:42;7774:39;:12;;;;;;:::i;20153:30::-;1085:8212:36;;5067:83:55;7774:12:42;21198:36:46;21206:1;5067:83:55;;21198:36:46;:::i;1085:8212:36:-;;;;;24603:247:46;10065:9:43;1085:8212:36;;;:::i;:::-;24400:277:42;24511:109;24601:4;1085:8212:36;5067:83:55;;24511:109:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;24400:277:42;24393:284;;24734:5:46;24741:58;:29;;;1085:8212:36;24741:58:46;:::i;:::-;24811:18;;;:::i;1085:8212:36:-;;;;;13776:175:45;13942:8;18897:9:43;1085:8212:36;;;:::i;:::-;;;;;13776:175:45;13942:8;17667:9:43;1085:8212:36;;;:::i;:::-;;;;;15174:162:45;2519:8:43;1085:8212:36;;;:::i;:::-;;;;;9882:170:45;10043:8;12417:9:43;1085:8212:36;;;:::i;:::-;11488:95:42;;;:::i;:::-;26631:29:46;;26624:5;26631:58;:29;;;1085:8212:36;26631:58:46;:::i;:::-;1085:8212:36;26691:36:46;26699:1;1085:8212:36;5067:83:55;;26691:36:46;:::i;:::-;26729:18;;;:::i;:::-;26443:325;9882:170:45;:::i;1085:8212:36:-;;;;;6995:93:53;11812:6;1085:8212:36;;;:::i;:::-;6995:23:53;;;;;;:::i;:93::-;11523:372;;;;:::i;:::-;7221:10;11812:6;;:::i;:::-;;;:::i;1085:8212:36:-;;;;;15174:162:45;8187:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;4635:9:35;4621:10;:23;4617:78;;4770:21;:39;;;;1085:8212:36;4766:101:35;;1085:8212:36;4960:18:35;;;;9738:2;9726:9;1085:8212:36;9691:55:35;1085:8212:36;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4948:31:35;4944:89;;1085:8212:36;;;-1:-1:-1;;1085:8212:36;5097:4:35;1085:8212:36;;;;4944:89:35;5002:20;;;1085:8212:36;5002:20:35;1085:8212:36;;5002:20:35;1085:8212:36;;;4766:101:35;4832:24;;;1085:8212:36;4832:24:35;1085:8212:36;;4832:24:35;4770:39;1085:8212:36;;;;;4770:39:35;;4617:78;4667:17;;;1085:8212:36;4667:17:35;1085:8212:36;;4667:17:35;1085:8212:36;;;;;11806:170:45;11967:8;5351:9:43;1085:8212:36;;;:::i;:::-;20153:30:42;6658:34;:12;;;;;;:::i;20153:30::-;1085:8212:36;;5067:83:55;6658:12:42;10984:36:46;10992:1;5067:83:55;;10984:36:46;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;3983:9:43;1085:8212:36;;;:::i;:::-;;;;;;;:::i;:::-;7189:18:59;;;;;;;:::i;:::-;1085:8212:36;;;;;;;;;;;;;;;;;7393:26:59;;;:::i;:::-;7481:19;1085:8212:36;7593:13:59;1085:8212:36;7608:12:59;;;;;;9381:470;;;;;1085:8212:36;9381:470:59;1085:8212:36;9381:470:59;8235:26;4546:18:47;9381:470:59;;8854:398;;9381:470;1085:8212:36;;:::i;:::-;;6633:32:68;6597:18;;;;:::i;:::-;8235:26:59;6617:14:68;;1085:8212:36;;;:::i;:::-;;;:::i;:::-;4546:18:47;:::i;:::-;1085:8212:36;4773:12:47;;;;;;8235:26:59;1085:8212:36;;;;;;4787:3:47;4920:12;5090:9;6109:8:36;4920:12:47;1085:8212:36;4920:12:47;;;;:::i;:::-;5056:18;8235:26:59;5056:18:47;;;;:::i;:::-;1085:8212:36;;;5090:9:47;;:::i;:::-;1085:8212:36;4758:13:47;;7622:3:59;7756:12;;;;;:::i;:::-;1085:8212:36;8235:26:59;;;;;;;:::i;:::-;8452:13;1085:8212:36;8447:389:59;8467:18;;;;;;8854:398;;;;1085:8212:36;8854:398:59;;1085:8212:36;8854:398:59;1085:8212:36;8854:398:59;;;1085:8212:36;;8235:26:59;8854:398;;;;;1085:8212:36;7593:13:59;;8487:3;8596:11;;;1085:8212:36;8596:11:59;8235:26;8596:11;;;;;:::i;:::-;:18;1085:8212:36;;;;8783:21:59;;;8767:50;8487:3;1085:8212:36;8452:13:59;;;;1085:8212:36;;;;;;;;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;2865:34:70;2884:10;;6656:622;;6777:495;;;;;;;;;;;;;;;;6656:622;2865:34;2910:506;;;;;;1085:8212:36;3525:23:70;2910:506;;1085:8212:36;5067:83:55;3525:23:70;;:::i;2910:506::-;;;1085:8212:36;2910:506:70;2884:10;1085:8212:36;2910:506:70;1085:8212:36;2910:506:70;;;;1085:8212:36;;;;;;9095:8:43;1085:8212:36;;;:::i;:::-;;;;3200:18:47;1085:8212:36;;;:::i;:::-;3200:18:47;3081;5822::59;;;1085:8212:36;5822:18:59;6579:76;5822:18;;;;:::i;:::-;1085:8212:36;5947:541:59;;;;;;;;;6579:76;;:::i;:::-;5259:112:68;5301:18;;;;:::i;:::-;5321:14;;;1085:8212:36;5259:112:68;;:::i;1085:8212:36:-;3081:18:47;;:::i;:::-;3200;;;;;:::i;:::-;3365:13;1085:8212:36;3380:18:47;;;;;;5321:14:68;1085:8212:36;;;;;;3400:3:47;3532:12;3636:64;3532:12;1085:8212:36;3532:12:47;;;;:::i;:::-;5321:14:68;3683:16:47;;1085:8212:36;;;3646:10:47;;5943:9:36;3636:64:47;:::i;:::-;;1085:8212:36;3365:13:47;;1085:8212:36;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;9865:71:53;11812:6;1085:8212:36;;;;;:::i;:::-;9865:23:53;;;;:::i;:::-;:71;:::i;:::-;11523:372;;;;:::i;:::-;1085:8212:36;;11812:6:53;;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;14105:9:43;1085:8212:36;;;:::i;:::-;27987:5:46;18900:122:42;;;:::i;:::-;27994:29:46;;;;:58;:29;;;1085:8212:36;27994:58:46;:::i;:::-;28064:18;;;:::i;1085:8212:36:-;;;;;7584:197:46;2829:8:43;1085:8212:36;;;:::i;:::-;;5067:83:55;1085:8212:36;20153:30:42;1085:8212:36;5067:83:55;;20153:30:42;21800:26;20153:30;:::i;:::-;21469:68;7713:36:46;21469:68:42;;;;;:::i;:::-;1085:8212:36;7713:36:46;:::i;1085:8212:36:-;;;;;13776:175:45;13942:8;19303:9:43;1085:8212:36;;;:::i;:::-;14350:177:42;14449:39;:12;;;;;;:::i;14350:177::-;22363:18:46;14449:12:42;22363:18:46;;:::i;1085:8212:36:-;;;;;24603:247:46;9859:8:43;1085:8212:36;;;:::i;:::-;;;;;32359:267:46;19745:9:43;1085:8212:36;;;:::i;:::-;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;2893:10;1085:8212;2423:56:64;1085:8212:36;;;;;;:::i;:::-;2893:10;;;;;;:::i;:::-;1085:8212;;2423:56:64;;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;;4290:42:40;-1:-1:-1;;;;;12790:117:60;;;;4290:42:40;:::i;:::-;1085:8212:36;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;11487:137:60;;;;;;1085:8212:36;:::i;:::-;;;;11032:107:60;;;1085:8212:36;:::i;:::-;;;;;;;11806:170:45;11967:8;17071::43;1085:8212:36;;;:::i;:::-;;;;;;;:::i;:::-;6119:335:27;;;;;;;;1085:8212:36;6119:335:27;1085:8212:36;6119:335:27;1085:8212:36;6119:335:27;;1085:8212:36;6119:335:27;;1085:8212:36;;;;;;;;;;;11806:170:45;11967:8;5195::43;1085:8212:36;;;:::i;:::-;;;;;13776:175:45;13942:8;19095::43;1085:8212:36;;;:::i;:::-;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;;;;;;;;;;13373:554:27;1085:8212:36;13373:554:27;;;;1085:8212:36;13373:554:27;;;;;;1085:8212:36;13373:554:27;;;;;;;1085:8212:36;13373:554:27;;1085:8212:36;;;13943:4:27;1085:8212:36;;;;;;;;13776:175:45;13942:8;6739:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;:::i;:::-;6658:53:52;;;;;;:::i;:::-;1085:8212:36;;;;;;;;;6305:83:55;7578:9012:51;;;;;;:::i;:::-;17315:570;;1085:8212:36;17315:570:51;;1085:8212:36;17315:570:51;;1085:8212:36;17315:570:51;;1085:8212:36;17315:570:51;1085:8212:36;;17315:570:51;1085:8212:36;17315:570:51;;;1085:8212:36;17315:570:51;7205:121:52;;1085:8212:36;7205:121:52;;;;;;5067:83:55;1085:8212:36;5067:83:55;7488:9:52;;;:::i;:::-;7632:14;;;:::i;:::-;13542:488:60;;;;;;;3956:20:63;;;;:::i;:::-;7745:11:52;;:::i;:::-;1085:8212:36;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;8258:58:53;8422:9;8258:58;;;;:::i;:::-;8422:9;;;;;:::i;1085:8212:36:-;;;;;11806:170:45;11967:8;6035:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;5088:29:48;;1085:8212:36;;;5088:29:48;;;1085:8212:36;-1:-1:-1;1085:8212:36;5088:29:48;1085:8212:36;5088:18:48;-1:-1:-1;;;;;1085:8212:36;5088:29:48;;;;;;1085:8212:36;5088:29:48;1085:8212:36;5088:29:48;;;1085:8212:36;;;;;;;;:::i;:::-;;;;;9882:170:45;10043:8;13871::43;1085:8212:36;;;:::i;:::-;;;;;9882:170:45;10043:8;12205::43;1085:8212:36;;;:::i;:::-;;;;;9882:170:45;10043:8;4667:9:43;1085:8212:36;;;:::i;:::-;;;;;15174:162:45;3151:8:43;1085:8212:36;;;:::i;:::-;12559:66:42;;;:::i;:::-;8175:18:46;1085:8212:36;8175:18:46;;:::i;:::-;8071:134;1085:8212:36;5689:83:55;15174:162:45;;;:::i;1085:8212:36:-;;;;;3053:53:64;1085:8212:36;;;:::i;:::-;3053:53:64;6411:531:63;6273:675;6411:531;6273:675;6411:531;;;;;;;;;;;;;;;;;;;;;6273:675;;3053:53:64;1085:8212:36;;7168:15;;7158:25;;1085:8212;;;;;;;;;;;:::i;:::-;12498:568:27;;;;;;;;;;;1085:8212:36;12498:568:27;;;1085:8212:36;12498:568:27;;1085:8212:36;12498:568:27;;;;;;;;1085:8212:36;12498:568:27;1085:8212:36;12498:568:27;;;1085:8212:36;;13082:4:27;1085:8212:36;;;;;;;;;10905:9:43;1085:8212:36;;;:::i;:::-;;;;;18482:223:46;13431:8:43;1085:8212:36;;;:::i;:::-;;;;;25784:289:46;11431:8:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;1317:8:64;1085:8212:36;;;;;;6849:10;1317:8:64;:::i;1085:8212:36:-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;4972:2:27;1085:8212:36;;;;;;;;9882:170:45;10043:8;12803:9:43;1085:8212:36;;;:::i;:::-;;;;;;;:::i;:::-;7189:18:59;;;;;;;:::i;:::-;1085:8212:36;;;;;;;;;;;;;;;;;7393:26:59;;;:::i;:::-;7481:19;1085:8212:36;7593:13:59;1085:8212:36;7608:12:59;;;;;;9381:470;;;;;1085:8212:36;9381:470:59;1085:8212:36;9381:470:59;8235:26;4546:18:47;9381:470:59;;8854:398;;9381:470;1085:8212:36;;:::i;4546:18:47:-;1085:8212:36;4773:12:47;;;;;;8235:26:59;1085:8212:36;;;;;;4787:3:47;4920:12;5090:9;6280::36;4920:12:47;1085:8212:36;4920:12:47;;;;:::i;5090:9::-;1085:8212:36;4758:13:47;;7622:3:59;7756:12;;;;;:::i;:::-;1085:8212:36;8235:26:59;;;;;;;:::i;:::-;8452:13;1085:8212:36;8447:389:59;8467:18;;;;;;8854:398;;;;1085:8212:36;8854:398:59;;1085:8212:36;8854:398:59;1085:8212:36;8854:398:59;;;1085:8212:36;;8235:26:59;8854:398;;;;;1085:8212:36;7593:13:59;;8487:3;8596:11;;;1085:8212:36;8596:11:59;8235:26;8596:11;;;;;:::i;:::-;:18;1085:8212:36;;;;8783:21:59;;;8767:50;8487:3;1085:8212:36;8452:13:59;;;;1085:8212:36;;;;;;-1:-1:-1;;1085:8212:36;;;;;8244:18;;:::i;1085:8212::-;;;;;27126:257:46;13225:9:43;1085:8212:36;;;:::i;:::-;;;;;23301:279:46;8361:8:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;2423:56:64;1085:8212:36;;;;;;;;:::i;:::-;;;2423:56:64;;:::i;1085:8212:36:-;;;;;15174:162:45;3319:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;;:::i;:::-;6777:495:70;;;4416:10;6777:495;;;;;;;;;;;;;;4442:510;;;;;;;;;5004:44;1085:8212:36;;;;;4416:10:70;;5004:44;:::i;4442:510::-;;;1085:8212:36;4442:510:70;1085:8212:36;4442:510:70;1085:8212:36;4442:510:70;;1085:8212:36;;;;;13776:175:45;13942:8;20421::43;1085:8212:36;;;:::i;:::-;;;;;28390:289:46;14825:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1085:8212:36;;;;8794:2:60;8778:18;;;8720:10;:23;;8748:21;;:25;;1422:62:55;;8778:18:60;:106;;1085:8212:36;1422:62:55;;;2730:33:40;2726:278;;2663:28:60;;;:::i;:::-;2702:1053;;;;;;;;;;;;;1085:8212:36;2702:1053:60;;;1085:8212:36;2702:1053:60;;;;1085:8212:36;;2702:1053:60;-1:-1:-1;;;;;1085:8212:36;;;;;;;2702:1053:60;;;1085:8212:36;2702:1053:60;1085:8212:36;2702:1053:60;1085:8212:36;2702:1053:60;;;;2726:278:40;2779:215;1085:8212:36;2779:215:40;1085:8212:36;2779:215:40;1085:8212:36;2779:215:40;;8778:106:60;1085:8212:36;;;;;;;;14773:133:28;;1085:8212:36;14773:133:28;;1085:8212:36;14773:133:28;;-1:-1:-1;;;;;1085:8212:36;8823:60:60;;-1:-1:-1;;;;;;8801:8:60;;1085:8212:36;;8801:16:60;;;905:63:55;;8778:106:60;;;;1085:8212:36;;;;;;;;;;;;;;;;2310:667:59;3084:71:68;1085:8212:36;;;:::i;:::-;;2310:667:59;-1:-1:-1;;;;;;;;;;;2310:667:59;;;;;;;;1085:8212:36;2310:667:59;;;3010:8:68;2310:667:59;1085:8212:36;2310:667:59;;;;;;;;;;;2947:11:68;2310:667:59;2947:11:68;;1085:8212:36;12790:117:60;2062:9:69;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;9307:42;:::i;3010:8:68:-;2310:667:59;3106:18:68;12790:117:60;3106:18:68;;;:::i;:::-;3139:15;;1085:8212:36;2310:667:59;;5309:9:36;3084:71:68;:::i;1085:8212:36:-;;;;;9882:170:45;10043:8;11247:9:43;1085:8212:36;;;:::i;:::-;;;;;22797:233:46;20187:9:43;1085:8212:36;;;:::i;:::-;18346:12:42;18229:195;18346:39;:12;;;;;;:::i;1085:8212:36:-;;;;;30973:299:46;18065:9:43;1085:8212:36;;;:::i;:::-;20153:30:42;8756:39;:12;;;;;;:::i;20153:30::-;31135:29:46;:58;1085:8212:36;31135:29:46;;1085:8212:36;31135:58:46;:::i;:::-;8756:12:42;31195:36:46;31203:1;1085:8212:36;5067:83:55;;31195:36:46;:::i;:::-;31233:18;;;:::i;1085:8212:36:-;;;;3200:18:47;1085:8212:36;;;:::i;:::-;3200:18:47;3081;5822::59;;;1085:8212:36;5822:18:59;6579:76;5822:18;;;;:::i;3200::47:-;3365:13;1085:8212:36;3380:18:47;;;;;;5321:14:68;1085:8212:36;;;;;;3400:3:47;3532:12;3636:64;3532:12;1085:8212:36;3532:12:47;;;;:::i;:::-;5321:14:68;3683:16:47;;1085:8212:36;;;3646:10:47;;5782:8:36;3636:64:47;:::i;:::-;;1085:8212:36;3365:13:47;;1085:8212:36;;;;;;-1:-1:-1;;1085:8212:36;;;;;;486:99:58;1085:8212:36;486:99:58;1085:8212:36;;486:99:58;1085:8212:36;;;;;16430:191:46;10261:8:43;1085:8212:36;;;:::i;:::-;;;;;7584:197:46;2993:9:43;1085:8212:36;;;:::i;:::-;;;;;15174:162:45;9663:9:43;1085:8212:36;;;:::i;:::-;;;;;11806:170:45;11967:8;15405::43;1085:8212:36;;;:::i;:::-;20153:30:42;11858:34;:12;;;;;;:::i;20153:30::-;5067:83:55;21469:68:42;5067:83:55;;21469:68:42;;;:::i;:::-;1085:8212:36;11858:12:42;29237:58:46;:29;;;1085:8212:36;29237:58:46;:::i;:::-;1085:8212:36;29297:36:46;29305:1;1085:8212:36;5067:83:55;;29297:36:46;:::i;:::-;29335:18;;;:::i;1085:8212:36:-;;;;;20609:223:46;16847:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;5874:31:70;1085:8212:36;;:::i;:::-;;;5874:31:70;6656:622;;6777:495;;;;;;;;;;;;;;;;6656:622;5874:31;5916:329;1085:8212:36;;5916:329:70;;;;;;;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;8547:181:46;3681:9:43;1085:8212:36;;;:::i;:::-;8681:5:46;25394:148:42;1085:8212:36;;5067:83:55;;25394:148:42;;:::i;1085:8212:36:-;;;;;13314:239:46;7097:9:43;1085:8212:36;;;:::i;:::-;;;;;15363:230:46;8719:8:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;:::i;:::-;1457:10:40;:58;:29;:10;:29;:::i;:::-;:58;:::i;:::-;1576:75;1085:8212:36;1701:1:40;1085:8212:36;;1717:13:40;1751:7;;;;;;1085:8212:36;;;1978:4:40;1085:8212:36;;;1760:9:40;1085:8212:36;;1925:10:40;1457;1789:89;;1925:10;:::i;:::-;1085:8212:36;1744:207:40;;1085:8212:36;;;;;22797:233:46;19961:8:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;3855:55:52;1085:8212:36;;4365:14:52;1085:8212:36;;;;;;:::i;:::-;;;;4221:9:52;1085:8212:36;5067:83:55;;3486:60:52;1085:8212:36;5067:83:55;;3486:60:52;:::i;:::-;3733:53;;;;:::i;:::-;3855:55;;;;;;;;;;:::i;:::-;1085:8212:36;3973:79:52;;;1085:8212:36;4200:5:52;5067:83:55;;;;4221:9:52;;:::i;:::-;4365:14;:::i;1085:8212:36:-;;;;;19482:240:46;15009:8:43;1085:8212:36;;;:::i;:::-;20153:30:42;10650:34;:12;;;;;;:::i;20153:30::-;5067:83:55;10650:12:42;21469:68;5067:83:55;;21469:68:42;;;:::i;:::-;1085:8212:36;19645:36:46;19653:1;1085:8212:36;5067:83:55;;19645:36:46;:::i;1085:8212:36:-;;;;;19482:240:46;15203:9:43;1085:8212:36;;;:::i;:::-;;;;;8547:181:46;3495:8:43;1085:8212:36;;;:::i;:::-;;;;;21628:250:46;18463:9:43;1085:8212:36;;;:::i;:::-;;;;:::i;:::-;9307:42:60;-1:-1:-1;;;;;12790:117:60;;;;;;;9307:42;:::i;:::-;1085:8212:36;;;;;;7602:1659:68;;;1085:8212:36;7602:1659:68;;;1085:8212:36;7602:1659:68;;;;;;;;;;;;;;7255:10:27;7602:1659:68;;;;7255:10:27;1085:8212:36;7602:1659:68;;;;;;;;;;;;;;12790:117:60;7602:1659:68;;;;;1085:8212:36;7602:1659:68;-1:-1:-1;;;7602:1659:68;;;7335:1429:27;;;;7602:1659:68;7335:1429:27;7255:10;7335:1429;;;1085:8212:36;7335:1429:27;1085:8212:36;;7335:1429:27;;;;;;;;;;;;;;;;1085:8212:36;7335:1429:27;1085:8212:36;;7335:1429:27;;;;;;;;;;;;;7255:10;1085:8212:36;7335:1429:27;7602:1659:68;7335:1429:27;7255:10;-1:-1:-1;;;;;;;;;;;1085:8212:36;;7335:1429:27;7602:1659:68;1085:8212:36;;8837:4:27;1085:8212:36;;;;;;;;14399:223:46;7865:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;8968:151;;;;;;;;;1085:8212;;;;;9412:229:46;4321:9:43;1085:8212:36;;;:::i;:::-;;;;;30973:299:46;17861:8:43;1085:8212:36;;;:::i;:::-;;;;;11806:170:45;11967:8;15617:9:43;1085:8212:36;;;:::i;:::-;;;;;;-1:-1:-1;;1085:8212:36;;;;;;-1:-1:-1;;;;;;1085:8212:36;;;;;;;14196:182:27;1085:8212:36;14196:182:27;1085:8212:36;;14196:182:27;;;;;;;;1085:8212:36;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;:::i;:::-;5633:184:27;1085:8212:36;5633:184:27;;;1085:8212:36;;;5633:184:27;1085:8212:36;;;5633:184:27;;1085:8212:36;;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;-1:-1:-1;;;4780:27:48;;1085:8212:36;;;4780:27:48;;;1085:8212:36;-1:-1:-1;4780:27:48;;;:18;-1:-1:-1;;;;;1085:8212:36;4780:27:48;;;;;;1085:8212:36;4780:27:48;1085:8212:36;4780:27:48;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;:::o;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;-1:-1:-1;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;1085:8212:36;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;7205:121:52;;1085:8212:36;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;:::o;:::-;-1:-1:-1;;;;;1085:8212:36;;;;;;-1:-1:-1;;1085:8212:36;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1085:8212:36;;;;;;;;;;;;;;:::o;4176:2284:65:-;;;;;4275:4;;:::i;:::-;-1:-1:-1;;;;;1085:8212:36;;4557:19:65;1085:8212:36;;4146:221:31;-1:-1:-1;4146:221:31;;;;;;;;;;;4553:627:65;5190:1169;;;;;;;-1:-1:-1;5190:1169:65;;-1:-1:-1;5190:1169:65;;;;;;;;;;;-1:-1:-1;5190:1169:65;;;;;;;;;1085:8212:36;;;;;5190:1169:65;-1:-1:-1;;;;;;;;;;;5190:1169:65;;;;;:::i;:::-;6449:4;4176:2284;:::o;4146:221:31:-;;-1:-1:-1;4146:221:31;;;;4553:627:65;4785:4;;;4761:30;4785:4;4761:30;;:::i;:::-;13593:806:31;;;;;;;;-1:-1:-1;13593:806:31;;-1:-1:-1;13593:806:31;;;;;;;;;-1:-1:-1;13593:806:31;;;;;;;5125:30:65;13593:806:31;-1:-1:-1;13593:806:31;;4785:4:65;5125:30;;:::i;:::-;1085:8212:36;;4553:627:65;;;13593:806:31;;-1:-1:-1;13593:806:31;;;;1085:8212:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1085:8212:36;;;;;;;:::o;4367:145:48:-;4452:25;4487:17;981:749:54;;;;4367:145:48;:::o;981:749:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:145:48;:::o;1085:8212:36:-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;2947:3169:53:-;;;;;:::i;:::-;3405:1072;;1085:8212:36;;;;;;3405:1072:53;;;;;;;;;;;;;;;;;;;;;;;12790:117:60;-1:-1:-1;;;;;12790:117:60;;;;;7277:40;;;:::i;:::-;4791:93:53;;;2947:3169;4974:52;5028:12;;;;;;6009:6;;;;;;;:::i;:::-;2947:3169::o;5042:3::-;5174:16;;;;;:::i;:::-;1085:8212:36;;12790:117:60;-1:-1:-1;;;;;12790:117:60;;;;-1:-1:-1;;;;;1085:8212:36;;5559:36:53;;5555:300;;5042:3;-1:-1:-1;5322:1:53;;1085:8212:36;6009:6:53;;3405:1072;1085:8212:36;;;;-1:-1:-1;;;;;1085:8212:36;;6009:6:53;:::i;:::-;1085:8212:36;4974:52:53;;5555:300;6009:6;5681:43;;;;3405:1072;5681:43;;5322:1;5681:43;;;:::i;:::-;5555:300;;;;;;;;4791:93;4863:9;3405:1072;;4863:9;;;:::i;:::-;4791:93;;;3405:1072;;-1:-1:-1;3405:1072:53;;;;2950:460:48;3018:12;;1085:8212:36;3018:12:48;;;1085:8212:36;;;;;1409:20:48;1085:8212:36;1409:20:48;;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;20153:30:42;5067:83:55;;1409:20:48;20382:26:42;20153:30;:::i;:::-;1085:8212:36;;3065:283:48;;3358:12;;;1085:8212:36;3358:12:48;;;1085:8212:36;3065:283:48;;;1085:8212:36;;;;;;;;;;;;3065:283:48;1409:20;5514:59:35;2950:460:48:o;1085:8212:36:-;-1:-1:-1;6052:14:35;1085:8212:36;;;;;;3065:283:48;1409:20;6082:67:35;2950:460:48:o;6048:208:35:-;3065:283:48;1409:20;6179:67:35;2947:3169:53:o;3065:283:48:-;;;;;;;;;1085:8212:36;;32705:531:59;21015:4:42;5067:83:55;;;1409:20:48;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;20153:30:42;32705:531:59;-1:-1:-1;32705:531:59;1409:20:48;8797:51:42;20153:30;:::i;:::-;1085:8212:36;;;;-1:-1:-1;32705:531:59;;-1:-1:-1;32705:531:59;;;;;;;;;;20153:30:42;;1409:20:48;20664:42:42;20153:30;:::i;1085:8212:36:-;6699:60:35;1409:20:48;6699:60:35;1085:8212:36;;;;-1:-1:-1;;1085:8212:36;;;;;;1409:20:48;7298:68:35;1085:8212:36;;;7264:210:35;1409:20:48;7396:68:35;7264:210;;19260:739:31;19403:590;;;19260:739;;;;19403:590;;;;;;;;;;;;;;;;19260:739;:::o;3597:97:48:-;3649:14;;1085:8212:36;3649:14:48;;;1085:8212:36;8260:14:35;;;1085:8212:36;;;;;;;;;;;;7806:55:35;1409:20:48;7806:55:35;3597:97:48:o;1085:8212:36:-;-1:-1:-1;8260:14:35;1085:8212:36;;;;;;8260:14:35;1409:20:48;8290:63:35;3597:97:48:o;8256:200:35:-;8260:14;1409:20:48;8383:63:35;2947:3169:53:o;1085:8212:36:-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;;;:::o;1742:710:54:-;1871:575;1742:710;1871:575;;;;;;;;;;;;;;;;;;;;;;;;;;1742:710;:::o;36947:606:59:-;;37029:518;;;-1:-1:-1;;;;;;;;;;;37029:518:59;;-1:-1:-1;;;;;;;;;;;37029:518:59;;-1:-1:-1;;;;;;;;;;;37029:518:59;;;;;;;;36947:606::o;18139:956:51:-;18258:831;18139:956;18258:831;;;;;;;;;;;;18139:956;:::o;19699:1824:52:-;;19834:32;;:::i;:::-;20564:30;20400:71;20142:166;;;;;;20400:23;;;:::i;:71::-;20588:4;;20564:30;;:::i;:::-;20605:912;;;;;;;;;;;;;20588:4;20605:912;;;;;;;;;;;;;;;;;;;;;;;;19699:1824;:::o;19362:712:51:-;19450:618;;19362:712;19450:618;;;;;;;;;;;;;;;;;;;;;;;;;19362:712::o;21931:1560:52:-;;;;22196:1289;21931:1560;;22196:1289;21931:1560;;;22165:20;;;:::i;:::-;22196:1289;;;;;;;;;;;;;;;;;;;;;;;;;;;;21931:1560::o;22196:1289::-;;;;;;;;;;1450:776:50;1665:30;1450:776;;;;1689:4;1665:30;;:::i;:::-;1757:237;;;;;;;2179:29;1085:8212:36;;2179:29:50;;:::i;1757:237::-;;;;;;;16149:279:60;14888:947;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16303:119;;;14888:947;13542:488;16303:119;;1085:8212:36;14888:947:60;1085:8212:36;;14888:947:60;;;;;;;;;;16303:119;;;;16149:279;:::o;7544:445::-;-1:-1:-1;;;7626:357:60;;;;;;7544:445;:::o;7626:357::-;;;;;;;;;898:148:49;3299:1046;;;;;453:10;3299:1046;;;;;;;;;;;;;;;;;;;;;;;;;;;898:148::o;3299:1046::-;-1:-1:-1;;;3299:1046:49;;;;;9633:516:68;;9844:29;:23;;;1085:8212:36;9844:29:68;:::i;:::-;1085:8212:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;;;;;;10132:9:68;10039:18;;;;;:::i;:::-;;;;;:::i;:::-;10098:10;10132:9;:::i;10716:1453::-;;;;11213:20;;11359:35;;;;5337:33;11359:35;:::i;:::-;1359::69;1434:9;1359:35;;;:::i;:::-;1434:9;;;:::i;:::-;11645:13:68;-1:-1:-1;;;;;11657:1:68;1085:8212:36;;11640:253:68;11660:19;;;;;;11960:203;;;;;;10716:1453::o;11960:203::-;;11232:1;11960:203;;;;11681:3;11815:35;;;;11657:1;11815:35;;-1:-1:-1;;;;;11815:35:68;;;;5337:33;11815:35;:::i;:::-;1085:8212:36;11815:50:68;;11799:79;11681:3;1085:8212:36;11645:13:68;;;;;10716:1453;;;;;11213:20;;11359:35;;;;;;:::i;:::-;1359::69;1434:9;1359:35;;;:::i;1434:9::-;11645:13:68;-1:-1:-1;;;;;11657:1:68;1085:8212:36;;11640:253:68;11660:19;;;;;;11960:203;;;;;;;10716:1453::o;11681:3::-;11815:35;;;;;11657:1;11815:35;;-1:-1:-1;;;;;11815:35:68;;;;;;:::i;:::-;1085:8212:36;11815:50:68;;11799:79;11681:3;1085:8212:36;11645:13:68;;;;;;4999:850:63;;;5399:1;5402:20;;;;;;5831:11;;;;5783:1;4999:850;:::o;5424:3::-;5561:27;5787:8;5561:27;;5783:1;5561:27;;;;:::i;:::-;1085:8212:36;;;;;;5690:10:63;5787:8;:::i;:::-;1085:8212:36;5387:13:63;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1651:1664:63:-;;;;;1787:1522;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1787:1522:63;;;;;;-1:-1:-1;;;;;1787:1522:63;;;;;;;1651:1664::o;1787:1522::-;;;;;;;;;6488:1750:45;;;;;;;;;7088:592;;;;;;;;;;;;;;;7822:2;;;;;:::i;:::-;5410:327:69;;;;;1085:8212:36;;8064:167:45;1085:8212:36;;;;8074:134:45;1085:8212:36;;7088:592:45;1085:8212:36;;;;;7088:592:45;;;;12790:117:60;-1:-1:-1;;;;;12790:117:60;;;;8074:134:45;;:::i;:::-;8064:167;;:::i;:::-;6488:1750;:::o;5410:327:69:-;;;;;;7088:592:45;5410:327:69;7088:592:45;5410:327:69;;;;4509:499:60;;;6416:28;;;:::i;:::-;-1:-1:-1;;;6455:374:60;;;2702:1053;;6455:374;;;4976:3;1085:8212:36;;4941:3:60;1085:8212:36;;;;4884:61:60;:96;4509:499;:::o;:::-;6416:28;;;:::i;:::-;-1:-1:-1;;;6455:374:60;;;2702:1053;;6455:374;;;1085:8212:36;;;;4976:3:60;1085:8212:36;4884:116:60;;4509:499;:::o;6455:374::-;;;1085:8212:36;6455:374:60;;;;;;4509:499;6416:28;;;:::i;:::-;-1:-1:-1;;;6455:374:60;;;2702:1053;;6455:374;;;4976:3;1085:8212:36;;;;4884:96:60;4509:499;:::o;:::-;;6416:28;;;:::i;:::-;-1:-1:-1;;;6455:374:60;;;2702:1053;;6455:374;;;4976:3;1085:8212:36;;4941:3:60;1085:8212:36;;;;4884:61:60;:96;:116;4509:499;:::o;2678:1277:50:-;;;2755:1194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;;;;;2755:1194:50;;-1:-1:-1;;;;;;;;;;;2755:1194:50;;;2678:1277::o;7578:9012:51:-;;;;;;;;;;;-1:-1:-1;7578:9012:51;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;;;-1:-1:-1;;7578:9012:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;7578:9012:51;-1:-1:-1;;;;;;;;;;;7578:9012:51;;-1:-1:-1;;;;;;;;;;;7578:9012:51;;;;;;:::o;:::-;;-1:-1:-1;7578:9012:51;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;-1:-1:-1;7578:9012:51;;;;;;;;;;;;;;;;-1:-1:-1;7578:9012:51;;;;-1:-1:-1;7578:9012:51;;5295:557:60;-1:-1:-1;;;5398:448:60;;;;5295:557;5398:448;;;;5295:557;:::o;10557:505:53:-;;;10744:30;10768:4;10744:30;;:::i;:::-;9254:988:31;;;;;;10768:4:53;9254:988:31;;10865:10:53;9254:988:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;11040:14:53;9254:988:31;;;;;;11040:14:53;:::i;9254:988:31:-;;;;;;;4719:320:69;4801:209;;;;;;4719:320;:::o;4801:209::-;;;;;;;1932:568:57;;2035:459;;;;;;;;;;;;1932:568::o;1085:8212:36:-;-1:-1:-1;;;;;1085:8212:36;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;7205:121:52;1085:8212:36;7205:121:52;;1085:8212:36;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;16358:2747:52:-;;;16614:37;;:::i;:::-;-1:-1:-1;;;;;16956:1264:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;18295:58;16956:1264;;;;;;18295:58;:::i;:::-;18401:26;;;;:::i;:::-;18492:199;;;16358:2747;1085:8212:36;;;;18986:112:52;27026:43;;;:::i;:::-;27216:19;-1:-1:-1;27295:13:52;-1:-1:-1;27310:32:52;;;;;;28096:286;;;;;;16358:2747;:::o;28096:286::-;;-1:-1:-1;28096:286:52;;;;27344:3;1085:8212:36;28037:30:52;1085:8212:36;;;;;;;;27442:55:52;:61;:55;;;;;:::i;:::-;:61;:::i;:::-;1085:8212:36;;;;;;10621:113:60;;-1:-1:-1;;;;;10621:113:60;;;;;27698:17:52;;;;27682:46;27781:16;27864:54;27781:16;27864:54;;;:::i;:::-;1085:8212:36;28061:4:52;28037:30;;:::i;:::-;28018:49;;;;:::i;:::-;1085:8212:36;;27295:13:52;;;;;18492:199;18571:9;16956:1264;;;18571:9;;:::i;:::-;1085:8212:36;;;;;;16956:1264:52;1085:8212:36;;;18492:199:52;;;3614:3121:51;;3816:2913;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3816:2913:51;;-1:-1:-1;;3816:2913:51;;;;;-1:-1:-1;3614:3121:51:o;3816:2913::-;;;;;;;;;;;;;;;;;;;;;;;;24121:1723:52;1085:8212:36;;;;;;24121:1723:52;;;;1085:8212:36;24844:32:52;;;;;;25511:258;;;;;;;;;;;;:::i;24878:3::-;1085:8212:36;25446:29:52;1085:8212:36;;;;25064:4:52;24978:92;25064:4;24978:67;:61;25064:4;24978:61;;;;:::i;:67::-;:92;:::i;:::-;25105:23;25395:49;25105:23;;;;:::i;:::-;1085:8212:36;25273:30:52;;;;;25257:59;25395:49;;;:::i;:::-;1085:8212:36;;;25446:29:52;;;:::i;:::-;1085:8212:36;24829:13:52;;1085:8212:36;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;7205:121:52;1085:8212:36;7205:121:52;;1085:8212:36;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::o;33488:1350:59:-;1085:8212:36;;;;;;33842:4:59;1085:8212:36;;;;;;;33821:26:59;;;:::i;:::-;33933:13;-1:-1:-1;33948:12:59;;;;;;34627:205;;;34131:462;34627:205;;34131:462;;34627:205;33488:1350;:::o;33962:3::-;34103:9;;1085:8212:36;34103:9:59;;;;:::i;:::-;33842:4;34131:462;;1085:8212:36;34131:462:59;;;;;;;;;;;;;;;1085:8212:36;33933:13:59;;2568:2676:45;3056:1056;;;;-1:-1:-1;;;;;3056:1056:45;;2568:2676;;;;;;;3056:1056;;2568:2676;;3056:1056;;;;;;;;;;;;2568:2676;;3056:1056;;;2568:2676;4171:13;3056:1056;;;;4171:13;:::i;:::-;1359:35:69;;;:::i;:::-;3056:1056:45;;;;;1434:9:69;;;;:::i;:::-;4384:262:45;;;;;4805:28;;;;4759:41;;;;1422:62:55;4758:134:45;;;;5140:15;4758:134;5227:9;4758:134;;;2568:2676;4754:236;;;;;2568:2676;3056:1056;;;;;;;;;5140:15;;:::i;:::-;5227:9;;:::i;4754:236::-;4956:22;3056:1056;;;4956:22;;;:::i;:::-;4754:236;;;;;4758:134;7498:53:63;;;6411:531;6273:675;6411:531;6273:675;6411:531;;;;;;;;;;;;;;;;;;;;;6273:675;;7498:53;7555:15;-1:-1:-1;7498:72:63;4758:134:45;;;;;9841:2874:47;;;;;;;;11273:135;9841:2874;;;10515:537;;;;;;;;;;;;;;;;;11153:9;:28;:9;;;;:::i;:::-;1085:8212:36;12790:117:60;;-1:-1:-1;;;;;12790:117:60;;12702:211;11153:28:47;11273:135;;;;:::i;:::-;11710:9;;;;;:::i;:::-;11742:12;12034:40;10515:537;11851:100;1085:8212:36;;;11781:16:47;;;;;1085:8212:36;11851:25:47;;;;1085:8212:36;11851:100:47;:::i;:::-;11830:16;;1422:62:55;12034:40:47;;;;;:::i;:::-;;-1:-1:-1;;;;;12203:1:47;1085:8212:36;;12186:423:47;12206:15;;;;;;12664:11;;;;;;;;;;;;:::i;12223:3::-;12258:9;;;;;:::i;:::-;1085:8212:36;;12329:16:47;;;;11781;12329;;1085:8212:36;12422:25:47;;;10515:537;12422:25;1085:8212:36;12422:100:47;;;;:::i;:::-;12790:117:60;;;;-1:-1:-1;;;;;12790:117:60;12379:38:47;;1422:62:55;12363:172:47;12554:40;;;;;;;:::i;:::-;;12203:1;1085:8212:36;12191:13:47;;1085:8212:36;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;35089:1381:59:-;1085:8212:36;;;;;;35453:4:59;1085:8212:36;;;;;;;35432:26:59;;;:::i;:::-;35544:13;-1:-1:-1;35559:12:59;;;;;;36259:205;;;35747:478;36259:205;;35747:478;;36259:205;35089:1381;:::o;35573:3::-;35719:9;;1085:8212:36;35719:9:59;;;;:::i;:::-;35453:4;35747:478;;1085:8212:36;35747:478:59;;;;;;;;;;;;;;;1085:8212:36;35544:13:59;;3959:187:48;4032:27;4028:69;;5767:105;;;;3959:187;:::o;19512:2305:59:-;19760:2051;19512:2305;;19760:2051;;19512:2305;19760:2051;;;;;;;-1:-1:-1;;;;;;;;;;;19760:2051:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19760:2051:59;;;;;;19512:2305;:::o;2298:320:69:-;2354:258;;;;;;2298:320;:::o;2354:258::-;;;;;;;;;3290:686;2577:519:54;;;;-1:-1:-1;2577:519:54;;;;;;;;;;;;;;;;;3290:686:69;;2577:519:54;;3290:686:69;;6576:3996:32;;;;;;-1:-1:-1;;;;;6576:3996:32;;;;;;;;;3641:329:69;;;;;;;;;;;;;3290:686::o;3641:329::-;;-1:-1:-1;3641:329:69;6576:3996:32;3641:329:69;;6576:3996:32;;;;;;;;;2577:519:54;6576:3996:32;;;-1:-1:-1;6576:3996:32;;;;;;;2577:519:54;6576:3996:32;;;-1:-1:-1;6576:3996:32;;;2577:519:54;6576:3996:32;;;;;;;;;;;;;;;;2577:519:54;6576:3996:32;;;;;;;;;;;;;;;-1:-1:-1;;;6576:3996:32;;;;;;;;;;;;;2577:519:54;6576:3996:32;;;-1:-1:-1;6576:3996:32;2577:519:54;6576:3996:32;2577:519:54;6576:3996:32;;;2577:519:54;6576:3996:32;;-1:-1:-1;6576:3996:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;6576:3996:32;;2577:519:54;6576:3996:32;;;;;;;;;;;2577:519:54;6576:3996:32;;;;;;;;;;;;;;2577:519:54;6576:3996:32;-1:-1:-1;;;;;6576:3996:32;;;1085:8212:36;6576:3996:32;-1:-1:-1;1085:8212:36;6576:3996:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;6576:3996:32;;2577:519:54;6576:3996:32;;;;;;;;;;1099:568:57;1194:467;;;;;;-1:-1:-1;;;;;1194:467:57;;;;;;;;;;;;1099:568::o;22429:3319:59:-;22686:3056;;;;;;;-1:-1:-1;;;;;;;;;;;22686:3056:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;22686:3056:59;;;;;;22429:3319;:::o;22686:3056::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22686:3056:59;;;14160:2308:47;;;;;;;;15357:135;14160:2308;14837:299;;;;;;;;;;;15237:9;:28;:9;;;;:::i;:28::-;15357:135;;;;:::i;:::-;15613:16;;15783:13;-1:-1:-1;;;;;;1085:8212:36;;15778:538:47;15798:15;;;;;;16417:11;;;;;;;;;;:::i;15815:3::-;15889:9;16190:111;15889:9;;1085:8212:36;15889:9:47;;;;:::i;:::-;1085:8212:36;;16015:45:47;;;-1:-1:-1;;;;;16015:45:47;;;;:::i;:::-;12790:117:60;;;;15972:38:47;;1422:62:55;15956:117:47;16190:23;;14837:299;16190:23;;;;;;:::i;:::-;16259:30;;;;1085:8212:36;16190:111:47;;:::i;:::-;;1085:8212:36;15783:13:47;;20720:384:42;20153:30;20720:384;20936:98;21015:4;5067:83:55;;;20936:98:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;20936:98:42;20862:235;8797:51;20153:30;:::i;19628:745:47:-;;;;20027:1;20030:15;;;;;;19628:745;;;;;:::o;20047:3::-;20176:13;20279:63;20176:13;1085:8212:36;20176:13:47;;;;:::i;:::-;20301:18;20325:16;20301:18;;;:::i;:::-;20325:16;;1085:8212:36;20289:10:47;;20279:63;;:::i;:::-;;1085:8212:36;20015:13:47;;6324:381:69;6418:281;;;;;;;;;;6324:381;:::o;6418:281::-;;;;;;;;;6454:1983:47;;;;7956:137;6454:1983;;;;;;7154:711;;;;;;;;;;;;;;12790:117:60;-1:-1:-1;;;;;12790:117:60;;;;7956:137:47;;:::i;:::-;;8236:2;7154:711;7956:137;8347:83;7956:137;8236:2;;:::i;:::-;7154:711;;;;;;;;8347:83;:::i;30933:1265:59:-;31095:1097;30933:1265;31095:1097;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30933:1265;:::o;8318:262:69:-;;8527:45;8318:262;;8527:45;:::i;:::-;8498:24;;1422:62:55;8318:262:69;:::o;20573:345:47:-;20709:203;;20573:345::o;14317:1060:59:-;14489:882;14317:1060;14489:882;;;;-1:-1:-1;;;;;;;;;;;14489:882:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14317:1060;:::o;7335:204:69:-;11032:107:60;;1085:8212:36;;;;;;7512:19:69;7496:35;7454:36;;;905:63:55;7335:204:69;:::o;17378:1707:47:-;;;;;;17782:1;17816:16;;;17984:13;17782:1;17999:15;;;;;;18689:29;;;;;;;;;18673:58;18741:316;;19067:11;;1085:8212:36;17378:1707:47;:::o;18741:316::-;;17782:1;18741:316;18122:16;18741:316;;;;;;18016:3;18075:12;18499:50;18122:16;18075:12;;;18518:18;18075:12;1085:8212:36;18075:12:47;;;;:::i;:::-;18122:16;;;1085:8212:36;;;;;18310:32:47;;;18294:61;18373:32;18518:18;;:::i;:::-;18499:50;;;:::i;:::-;;1085:8212:36;17984:13:47;;28999:1456:59;;29139:1310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28999:1456;:::o;1085:8212:36:-;20153:30:42;1085:8212:36;5067:83:55;;20153:30:42;20382:26;20153:30;:::i;1085:8212:36:-;;21469:68:42;20153:30;21780:4;5067:83:55;;;20153:30:42;21800:26;20153:30;:::i;:::-;5067:83:55;;;;21469:68:42;;:::i;1085:8212:36:-;24400:277:42;1085:8212:36;24511:109:42;24601:4;5067:83:55;;;24511:109:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;24511:109:42;24400:277;;:::i;:::-;24393:284;;1085:8212:36:o;:::-;23950:250:42;1085:8212:36;24052:100:42;24133:4;5067:83:55;;;24052:100:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;24052:100:42;23950:250;;:::i;1085:8212:36:-;;21469:68:42;20153:30;22563:107;22651:4;5067:83:55;;;22563:107:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;22563:107:42;20153:30;11894:54;20153:30;:::i;1085:8212:36:-;;21469:68:42;20153:30;22104:98;22183:4;5067:83:55;;;22104:98:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;;26376:277:42;1085:8212:36;26496:109:42;26586:4;5067:83:55;;;26496:109:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;26496:109:42;26376:277;;:::i;:::-;26369:284;;;;;1085:8212:36:o;:::-;26926:304:42;1085:8212:36;27055:118:42;27154:4;5067:83:55;;;27055:118:42;1085:8212:36;32705:531:59;1085:8212:36;32705:531:59;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;;27055:118:42;26926:304;;:::i;1085:8212:36:-;;;;;;;;;28508:137:59;1085:8212:36;28508:137:59;;;27779:134;1085:8212:36;27779:134:59;;;27062:128;1085:8212:36;27062:128:59;;;15848:748;1085:8212:36;15848:748:59;;;26336:125;1085:8212:36;26336:125:59;;;10532:988;1085:8212:36;10532:988:59;;;1085:8212:36;32705:531:59;;;1085:8212:36;;;;;;;;;;;;;;;:::i;:::-;32705:531:59;;;;;;;;-1:-1:-1;32705:531:59;;;;;;-1:-1:-1;32705:531:59;1085:8212:36;:::o;:::-;10532:988:59;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10532:988:59;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;:::o;:::-;5067:83:55;26336:125:59;5067:83:55;;;26336:125:59;;:::i;1085:8212:36:-;15848:748:59;;;;;;;;;-1:-1:-1;;;;;;;;;;;15848:748:59;;;;;;;;;;;;;;;;;1085:8212:36;:::o;:::-;5067:83:55;27062:128:59;5067:83:55;27105:4:59;5067:83:55;;;27062:128:59;;:::i;1085:8212:36:-;5067:83:55;27779:134:59;5067:83:55;;;27779:134:59;;:::i;1085:8212:36:-;5067:83:55;28508:137:59;5067:83:55;28560:4:59;5067:83:55;;;28508:137:59;;:::i;1085:8212:36:-;;12113:1798:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;;:::o;:::-;17159:1746:59;1085:8212:36;;;;17159:1746:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12113:1798:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;;:::o;:::-;17159:1746:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;;:::o;:::-;;;;;;;;;12790:117:60;1085:8212:36;12790:117:60;;;1085:8212:36;12790:117:60;;;1085:8212:36;;;11232:1:68;1085:8212:36;;;;;11232:1:68;1085:8212:36;;20153:30:42;;11232:1:68;20153:30:42;:::i;1085:8212:36:-;13584:17:68;11232:1;13584:17;;-1:-1:-1;;;;;13584:17:68;;:::i;:::-;1085:8212:36;12790:117:60;;;1085:8212:36;:::o;:::-;-1:-1:-1;1085:8212:36;;;;12790:117:60;;-1:-1:-1;;;;;12790:117:60;;1085:8212:36:o;:::-;;;;;;12790:117:60;1085:8212:36;12790:117:60;;;1085:8212:36;12790:117:60;;;1085:8212:36;;;;;;;;;;;;20153:30:42;;;:::i;1085:8212:36:-;13584:17:68;;;;-1:-1:-1;;;;;13584:17:68;;:::i;1085:8212:36:-;12846:17:68;;;;-1:-1:-1;;;;;12846:17:68;;:::i;1085:8212:36:-;;;23142:88:42;1085:8212:36;23094:30:42;;;:::i;:::-;5067:83:55;;;;23164:4:42;5067:83:55;;;23142:88:42;14490:36;23142:88;:::i;:::-;1085:8212:36;;:::o;:::-;;;23142:88:42;1085:8212:36;23094:30:42;;;:::i;:::-;5067:83:55;;;;23164:4:42;5067:83:55;;;23142:88:42;15709:45;23142:88;:::i;1085:8212:36:-;;25042:30:42;25103:73;1085:8212:36;25042:30:42;17045:42;25042:30;:::i;:::-;5067:83:55;;;;25157:4:42;5067:83:55;;;25103:73:42;;:::i;1085:8212:36:-;;25042:30:42;25103:73;1085:8212:36;25042:30:42;25509:32;25042:30;:::i;1085:8212:36:-;;26065:73:42;26119:4;1085:8212:36;23669:88:42;1085:8212:36;23621:30:42;;;:::i;:::-;5067:83:55;;;;;;;23691:4:42;5067:83:55;;23669:88:42;18387:36;23669:88;:::i;:::-;5067:83:55;;;;26065:73:42;;:::i;1085:8212:36:-;;26065:73:42;26119:4;1085:8212:36;23669:88:42;1085:8212:36;23621:30:42;;;:::i;:::-;5067:83:55;;;;;;;23691:4:42;5067:83:55;;23669:88:42;19848:45;23669:88;:::i;1085:8212:36:-;;;;;;;;;;;;;;;;;3463:4:65;;;1085:8212:36;;;;;;;;;;;;;;;:::i;:::-;1594:1852:65;;;;;;;;;;;-1:-1:-1;1594:1852:65;;-1:-1:-1;1594:1852:65;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1594:1852:65;;-1:-1:-1;1594:1852:65;;;;;;;;;;;;;;-1:-1:-1;1594:1852:65;;;1085:8212:36;;;;;1594:1852:65;1085:8212:36;;;;;;1594:1852:65;-1:-1:-1;;;;;;;;;;;1594:1852:65;-1:-1:-1;1594:1852:65;3463:4;1085:8212:36;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22686:3056:59;;;;;;;;;;-1:-1:-1;;;;;;;;;;;22686:3056:59;;;;;;;;;;;;;;;;;1085:8212:36;22686:3056:59;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22686:3056:59;-1:-1:-1;22686:3056:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;:::o;22686:3056:59:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22686:3056:59;;;;;;;;;;;;;;1085:8212:36;;19760:2051:59;1085:8212:36;19760:2051:59;1085:8212:36;;;;19760:2051:59;1085:8212:36;19760:2051:59;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19760:2051:59;;;;;;;;;;;;;;;;;1085:8212:36;19760:2051:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8212:36;:::o;19760:2051:59:-;;;;;;;;;;;1085:8212:36;;;;;;;;;;;;;;13942:8:45;1085:8212:36;13942:8:45;;;10043;1085:8212:36;10043:8:45;;;13942;1085:8212:36;13942:8:45;;;1085:8212:36;;;;;11967:8:45;1085:8212:36;11967:8:45;;;;1085:8212:36;11967:8:45;;;1085:8212:36;;;;;;10043:8:45;;;1085:8212:36;;;;;;;;;;;;;;;:::i;:::-;9882:170:45;;10043:8;9882:170;;;;;;;;;:::i;1085:8212:36:-;24406:152:45;;;;;:::i;1085:8212:36:-;11806:170:45;;11967:8;11806:170;;;;;;;;;:::i;1085:8212:36:-;5689:83:55;;11806:170:45;5689:83:55;;11967:8:45;5689:83:55;;;;;;11806:170:45;;:::i;1085:8212:36:-;5689:83:55;;25964:175:45;5689:83:55;;;;;25964:175:45;;:::i;1085:8212:36:-;5689:83:55;;13776:175:45;5689:83:55;;13942:8:45;5689:83:55;;;;;;13776:175:45;;:::i;1085:8212:36:-;5689:83:55;;9882:170:45;5689:83:55;;10043:8:45;5689:83:55;;;;;;9882:170:45;;:::i;1085:8212:36:-;13776:175:45;;13942:8;13776:175;;;;;;;;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "44928": [{ "start": 7386, "length": 32 }],
      "44930": [{ "start": 7338, "length": 32 }],
      "44938": [{ "start": 14924, "length": 32 }],
      "44946": [{ "start": 14803, "length": 32 }],
      "44952": [{ "start": 15276, "length": 32 }],
      "61471": [{ "start": 14315, "length": 32 }],
      "61473": [{ "start": 14282, "length": 32 }],
      "61476": [
        { "start": 5399, "length": 32 },
        { "start": 9518, "length": 32 },
        { "start": 12624, "length": 32 }
      ],
      "61478": [{ "start": 20145, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "__activateTstore()": "7423eb3c",
    "__registerAllocator(address,bytes)": "2a9c4d0d",
    "allocatedTransfer((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": "7112406d",
    "allocatedTransfer((bytes,uint256,uint256,(uint256,uint256)[],address))": "200f0c4d",
    "allocatedTransfer((bytes,uint256,uint256,uint256,(address,uint256)[]))": "a2394147",
    "allocatedTransfer((bytes,uint256,uint256,uint256,uint256,address))": "dd589cfc",
    "allocatedWithdrawal((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": "393c33e2",
    "allocatedWithdrawal((bytes,uint256,uint256,(uint256,uint256)[],address))": "6a9a4c44",
    "allocatedWithdrawal((bytes,uint256,uint256,uint256,(address,uint256)[]))": "fdc060e7",
    "allocatedWithdrawal((bytes,uint256,uint256,uint256,uint256,address))": "27c777a9",
    "allowance(address,address,uint256)": "598af9e7",
    "approve(address,uint256,uint256)": "426a8493",
    "balanceOf(address,uint256)": "00fdd58e",
    "claim((bytes,bytes,address,uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "d204f11e",
    "claim((bytes,bytes,address,uint256,uint256,(uint256,uint256,uint256)[],address))": "59202128",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,(uint256,uint256,(address,uint256)[])[]))": "eaa67483",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,(uint256,uint256,uint256)[],address))": "db04bc72",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "fb75fb69",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],(uint256,uint256,uint256)[],address))": "107d4ee4",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(address,uint256)[]))": "d350188c",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "ea14532e",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "176f405a",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,address,uint256))": "12f9d21e",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "4c102416",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "6af2791b",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,uint256,uint256,(address,uint256)[]))": "b4039fc2",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,bytes,uint256,uint256,address,uint256))": "63f5b1ad",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,(uint256,uint256,(address,uint256)[])[]))": "d34ddc82",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,(uint256,uint256,uint256)[],address))": "b54baefd",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,(uint256,uint256,(address,uint256)[])[]))": "eb431821",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,(uint256,uint256,uint256)[],address))": "b24849b7",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "12a1e6ea",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],(uint256,uint256,uint256)[],address))": "b3244389",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(address,uint256)[]))": "414fd914",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "2c4bbd17",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "5ac2ccf1",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,address,uint256))": "1d474b14",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "4d585fbf",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "ebcbd7b5",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,uint256,uint256,(address,uint256)[]))": "e8672f93",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,uint256,uint256,address,uint256))": "0d57fec9",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "577cdc64",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],(uint256,uint256,uint256)[],address))": "9730f4fd",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(address,uint256)[]))": "f745381c",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "aa41c87e",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "eed634ad",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,address,uint256))": "e0565c49",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "a4c7bd93",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "5e6c91ff",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,uint256,uint256,(address,uint256)[]))": "996d3aac",
    "claim((bytes,bytes,address,uint256,uint256,bytes32,string,uint256,uint256,address,uint256))": "44b97d78",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "935ed2ba",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],(uint256,uint256,uint256)[],address))": "9be5f537",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(address,uint256)[]))": "b7ace047",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "06659b7f",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "fa1c5500",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,address,uint256))": "e6c5b654",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "409b3a7e",
    "claim((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "32e2a803",
    "claim((bytes,bytes,address,uint256,uint256,uint256,uint256,(address,uint256)[]))": "b8a5bbad",
    "claim((bytes,bytes,address,uint256,uint256,uint256,uint256,address,uint256))": "86785559",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "548439e1",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,(uint256,uint256,uint256)[],address))": "721f6292",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,(uint256,uint256,(address,uint256)[])[]))": "13589bfe",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,(uint256,uint256,uint256)[],address))": "f44a3452",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "0a133cf2",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],(uint256,uint256,uint256)[],address))": "0f5eeadf",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(address,uint256)[]))": "eb196008",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "88da84d4",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "03417d72",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,address,uint256))": "f23d923d",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "843719f0",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "eea77a78",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,uint256,uint256,(address,uint256)[]))": "06e8cc18",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,bytes,uint256,uint256,address,uint256))": "1bb81a81",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,(uint256,uint256,(address,uint256)[])[]))": "f2f0def1",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,(uint256,uint256,uint256)[],address))": "4e55a548",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,(uint256,uint256,(address,uint256)[])[]))": "08e600ee",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,(uint256,uint256,uint256)[],address))": "b20abc48",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "25d7776b",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],(uint256,uint256,uint256)[],address))": "14865907",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(address,uint256)[]))": "d2a1805f",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "d921f36a",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "fcfe431a",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,address,uint256))": "d3917f3c",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "64870556",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "418a23f5",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,uint256,uint256,(address,uint256)[]))": "f95d3d16",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32,bytes,uint256,uint256,address,uint256))": "138cd819",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "62a420bb",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],(uint256,uint256,uint256)[],address))": "c4d195e8",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(address,uint256)[]))": "3f458a19",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "5d76a382",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "eed93572",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,address,uint256))": "1b98b63f",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "341056c5",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "89ce0661",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,uint256,uint256,(address,uint256)[]))": "4ad5205e",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32,string,uint256,uint256,address,uint256))": "2e4d55cc",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],(uint256,uint256,(address,uint256)[])[]))": "88d247c4",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],(uint256,uint256,uint256)[],address))": "bc95bd7a",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(address,uint256)[]))": "2737edb9",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(uint256,uint256,(address,uint256)[])[]))": "206620a1",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,(uint256,uint256,uint256)[],address))": "2acd5dc3",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,address,uint256))": "76d531d4",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,uint256,uint256,(address,uint256)[]))": "e05c6e7d",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,bytes32[],uint256,uint256,uint256,uint256,address,uint256))": "ca6cc39f",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,uint256,uint256,(address,uint256)[]))": "71f50127",
    "claimAndWithdraw((bytes,bytes,address,uint256,uint256,uint256,uint256,address,uint256))": "b602ae02",
    "consume(uint256[])": "12d48885",
    "decimals(uint256)": "3f47e662",
    "deposit(address)": "f340fa01",
    "deposit(address,(address,uint256)[],uint256,uint256,address,uint8,uint8,address,bytes)": "99cf8b9b",
    "deposit(address,address,uint256)": "8340f549",
    "deposit(address,address,uint8,uint8,uint256,address)": "671b3bd6",
    "deposit(address,uint256,uint256,uint256,address,address,uint8,uint8,address,bytes)": "10d82672",
    "deposit(address,uint8,uint8,address)": "507cb46f",
    "deposit(uint256[2][],address)": "c8091041",
    "depositAndRegister(address,(address,uint256)[],uint256,uint256,address,uint8,uint8,bytes32,uint8,string,bytes)": "da15ee7f",
    "depositAndRegister(address,address,uint256,bytes32,bytes32)": "ecaca40e",
    "depositAndRegister(address,bytes32,bytes32)": "aa8b845d",
    "depositAndRegister(address,uint256,uint256,uint256,address,address,uint8,uint8,bytes32,uint8,string,bytes)": "53e50067",
    "depositAndRegister(uint256[2][],bytes32[2][],uint256)": "5b6016ec",
    "disableForcedWithdrawal(uint256)": "70030190",
    "enableForcedWithdrawal(uint256)": "eb35a6d2",
    "extsload(bytes32)": "1e2eaeaf",
    "extsload(bytes32[])": "dbd035ff",
    "exttload(bytes32)": "f135baaa",
    "forcedWithdrawal(uint256,address,uint256)": "2e3ff2f7",
    "getForcedWithdrawalStatus(address,uint256)": "144bd5b5",
    "getLockDetails(uint256)": "5b15bfd9",
    "getRegistrationStatus(address,bytes32,bytes32)": "440a0ec3",
    "hasConsumedAllocatorNonce(uint256,address)": "da2f268b",
    "isOperator(address,address)": "b6363cf2",
    "name()": "06fdde03",
    "name(uint256)": "00ad800c",
    "register(bytes32,bytes32,uint256)": "4073c0cc",
    "register(bytes32[2][],uint256)": "31bbae3e",
    "setOperator(address,bool)": "558a7297",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol(uint256)": "4e41a1fb",
    "tokenURI(uint256)": "c87b56dd",
    "transfer(address,uint256,uint256)": "095bcdb6",
    "transferFrom(address,address,uint256,uint256)": "fe99049a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providedAmount\",\"type\":\"uint256\"}],\"name\":\"AllocatedAmountExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ForcedWithdrawalAlreadyDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBatchAllocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBatchDepositStructure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDepositBalanceChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDepositTokenOrdering\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"InvalidRegistrationDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"InvalidRegistrationProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"InvalidScope\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDirectCalls\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2CallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"PrematureWithdrawal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"existingCaller\",\"type\":\"address\"}],\"name\":\"ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TStoreAlreadyActivated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TStoreNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TloadTestContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnallocatedTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"allocatorId\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"AllocatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"typehash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"name\":\"CompactRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"activating\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawableAt\",\"type\":\"uint256\"}],\"name\":\"ForcedWithdrawalStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__activateTstore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"__registerAllocator\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TransferComponent[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BatchTransfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"allocatedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitByIdComponent[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchTransfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"allocatedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"recipients\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitTransfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"allocatedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BasicTransfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"allocatedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BasicTransfer\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"allocatedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitByIdComponent[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchTransfer\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"allocatedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct TransferComponent[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BatchTransfer\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"allocatedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"recipients\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitTransfer\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"allocatedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousQualifiedBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousQualifiedBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousQualifiedMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BasicClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousQualifiedMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousQualifiedBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousQualifiedMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitBatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BasicClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct BatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ExogenousSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ExogenousQualifiedMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct QualifiedMultichainClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"portions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SplitBatchClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct QualifiedBatchClaim\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SplitComponent[]\",\"name\":\"claimants\",\"type\":\"tuple[]\"}],\"internalType\":\"struct QualifiedSplitClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"allocatorSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sponsorSignature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypestring\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"qualificationTypehash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"qualificationPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"additionalChains\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"chainIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"notarizedChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchClaimComponent[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"internalType\":\"struct ExogenousQualifiedBatchMultichainClaimWithWitness\",\"name\":\"claimPayload\",\"type\":\"tuple\"}],\"name\":\"claimAndWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nonces\",\"type\":\"uint256[]\"}],\"name\":\"consume\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"resetPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"resetPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2][]\",\"name\":\"idsAndAmounts\",\"type\":\"uint256[2][]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"resetPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum CompactCategory\",\"name\":\"compactCategory\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"witness\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositAndRegister\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2][]\",\"name\":\"idsAndAmounts\",\"type\":\"uint256[2][]\"},{\"internalType\":\"bytes32[2][]\",\"name\":\"claimHashesAndTypehashes\",\"type\":\"bytes32[2][]\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"depositAndRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typehash\",\"type\":\"bytes32\"}],\"name\":\"depositAndRegister\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"resetPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum CompactCategory\",\"name\":\"compactCategory\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"witness\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositAndRegister\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typehash\",\"type\":\"bytes32\"}],\"name\":\"depositAndRegister\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"disableForcedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"enableForcedWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forcedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getForcedWithdrawalStatus\",\"outputs\":[{\"internalType\":\"enum ForcedWithdrawalStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLockDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ResetPeriod\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"enum Scope\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typehash\",\"type\":\"bytes32\"}],\"name\":\"getRegistrationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"}],\"name\":\"hasConsumedAllocatorNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[2][]\",\"name\":\"claimHashesAndTypehashes\",\"type\":\"bytes32[2][]\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"typehash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age (0age.eth)\",\"custom:version\":\"0 (early-stage proof-of-concept)\",\"errors\":{\"BalanceOverflow()\":[{\"details\":\"The balance has overflowed.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InsufficientPermission()\":[{\"details\":\"Insufficient permission to perform the action.\"}]},\"events\":{\"AllocatorRegistered(uint96,address)\":{\"params\":{\"allocator\":\"The address of the registered allocator.\",\"allocatorId\":\"The unique identifier assigned to the allocator.\"}},\"Approval(address,address,uint256,uint256)\":{\"details\":\"Emitted when `owner` approves `spender` to use `amount` of `id` token.\"},\"Claim(address,address,address,bytes32)\":{\"params\":{\"allocator\":\"The account mediating the resource locks utilized by the claim.\",\"arbiter\":\"The account verifying and initiating the settlement of the claim.\",\"claimHash\":\"A bytes32 hash derived from the details of the claimed compact.\",\"sponsor\":\"The account sponsoring the claimed compact.\"}},\"CompactRegistered(address,bytes32,bytes32,uint256)\":{\"params\":{\"claimHash\":\"A bytes32 hash derived from the details of the compact.\",\"expires\":\"The timestamp at which the compact can no longer be claimed.\",\"sponsor\":\"The address registering the compact in question.\",\"typehash\":\"The EIP-712 typehash associated with the registered compact.\"}},\"ForcedWithdrawalStatusUpdated(address,uint256,bool,uint256)\":{\"params\":{\"account\":\"The account for which the withdrawal status has changed.\",\"activating\":\"Whether the forced withdrawal is being activated or has been deactivated.\",\"id\":\"The ERC6909 token identifier of the associated resource lock.\",\"withdrawableAt\":\"The timestamp when tokens become withdrawable if it is being activated.\"}},\"OperatorSet(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables `operator` to manage all of their tokens.\"},\"Transfer(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `by` transfers `amount` of token `id` from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"A bytes32 representing the domain separator for the contract.\"}},\"__activateTstore()\":{\"details\":\"External function to activate TSTORE usage. Does not need to be      called if TSTORE is supported from deployment, and only needs to be      called once. Reverts if TSTORE has already been activated or if the      opcode is not available. Note that this must be called directly from      an externally-owned account to avoid potential reentrancy issues.\"},\"__registerAllocator(address,bytes)\":{\"params\":{\"allocator\":\"The address to register as an allocator.\",\"proof\":\"An 85-byte value containing create2 address derivation parameters (0xff ++ factory ++ salt ++ initcode hash).\"},\"returns\":{\"_0\":\"A unique identifier assigned to the registered allocator.\"}},\"allocatedTransfer((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))\":{\"params\":{\"transfer\":\"A SplitBatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  transfers          Array of SplitByIdComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  portions        Array of SplitComponents, each containing:        -  claimant     The account that will receive tokens.        -  amount       The amount of tokens the claimant will receive.\"},\"returns\":{\"_0\":\"Whether the transfer was successful.\"}},\"allocatedTransfer((bytes,uint256,uint256,(uint256,uint256)[],address))\":{\"params\":{\"transfer\":\"A BatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  transfers          Array of TransferComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  amount          The amount of tokens to transfer.  -  recipient          The account that will receive all tokens.\"},\"returns\":{\"_0\":\"Whether the transfer was successful.\"}},\"allocatedTransfer((bytes,uint256,uint256,uint256,(address,uint256)[]))\":{\"params\":{\"transfer\":\"A SplitTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  recipients         Array of SplitComponents, each containing:     -  claimant        The account that will receive tokens.     -  amount          The amount of tokens the claimant will receive.\"},\"returns\":{\"_0\":\"Whether the transfer was successful.\"}},\"allocatedTransfer((bytes,uint256,uint256,uint256,uint256,address))\":{\"params\":{\"transfer\":\"A BasicTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  amount             The amount of tokens to transfer.  -  recipient          The account that will receive the tokens.\"},\"returns\":{\"_0\":\"Whether the transfer was successful.\"}},\"allocatedWithdrawal((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))\":{\"params\":{\"withdrawal\":\"A SplitBatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  transfers          Array of SplitByIdComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  portions        Array of SplitComponents, each containing:        -  claimant     The account that will receive tokens.        -  amount       The amount of tokens the claimant will receive.\"},\"returns\":{\"_0\":\"Whether the withdrawal was successful.\"}},\"allocatedWithdrawal((bytes,uint256,uint256,(uint256,uint256)[],address))\":{\"params\":{\"withdrawal\":\"A BatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  transfers          Array of TransferComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  amount          The amount of tokens to withdraw.  -  recipient          The account that will receive all tokens.\"},\"returns\":{\"_0\":\"Whether the withdrawal was successful.\"}},\"allocatedWithdrawal((bytes,uint256,uint256,uint256,(address,uint256)[]))\":{\"params\":{\"withdrawal\":\"A SplitTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  recipients         Array of SplitComponents, each containing:     -  claimant        The account that will receive tokens.     -  amount          The amount of tokens the claimant will receive.\"},\"returns\":{\"_0\":\"Whether the withdrawal was successful.\"}},\"allocatedWithdrawal((bytes,uint256,uint256,uint256,uint256,address))\":{\"params\":{\"withdrawal\":\"A BasicTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  amount             The amount of tokens to withdraw.  -  recipient          The account that will receive the tokens.\"},\"returns\":{\"_0\":\"Whether the withdrawal was successful.\"}},\"allowance(address,address,uint256)\":{\"details\":\"Returns the amount of token `id` that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` for the caller for token `id`. Emits a {Approval} event.\"},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of token `id` owned by `owner`.\"},\"consume(uint256[])\":{\"params\":{\"nonces\":\"Array of nonces to be consumed.\"},\"returns\":{\"_0\":\"Whether all nonces were successfully consumed.\"}},\"decimals(uint256)\":{\"details\":\"Returns the number of decimals for token `id`. Returns 18 by default. Please override this function if you need to return a custom value.\"},\"deposit(address)\":{\"params\":{\"allocator\":\"The address of the allocator.\"},\"returns\":{\"_0\":\"The ERC6909 token identifier of the associated resource lock.\"}},\"deposit(address,address,uint256)\":{\"params\":{\"allocator\":\"The address of the allocator mediating the resource lock.\",\"amount\":\"The amount of tokens to deposit.\",\"token\":\"The address of the ERC20 token to deposit.\"},\"returns\":{\"_0\":\"      The ERC6909 token identifier of the associated resource lock.\"}},\"deposit(address,address,uint8,uint8,uint256,address)\":{\"params\":{\"allocator\":\"The address of the allocator mediating the resource lock.\",\"amount\":\"The amount of tokens to deposit.\",\"recipient\":\"The address that will receive the corresponding ERC6909 tokens.\",\"resetPeriod\":\"The duration after which the resource lock can be reset once a forced withdrawal is initiated.\",\"scope\":\"The scope of the resource lock (multichain or single chain).\",\"token\":\"The address of the ERC20 token to deposit.\"},\"returns\":{\"_0\":\"        The ERC6909 token identifier of the associated resource lock.\"}},\"deposit(address,uint8,uint8,address)\":{\"params\":{\"allocator\":\"The address of the allocator mediating the resource lock.\",\"recipient\":\"The address that will receive the corresponding ERC6909 tokens.\",\"resetPeriod\":\"The duration after which the resource lock can be reset once a forced withdrawal is initiated.\",\"scope\":\"The scope of the resource lock (multichain or single chain).\"},\"returns\":{\"_0\":\"        The ERC6909 token identifier of the associated resource lock.\"}},\"deposit(uint256[2][],address)\":{\"params\":{\"idsAndAmounts\":\"Array of [id, amount] pairs with each pair indicating the resource lock and amount to deposit.\",\"recipient\":\"The address that will receive the corresponding ERC6909 tokens.\"},\"returns\":{\"_0\":\"Whether the batch deposit was successfully completed.\"}},\"depositAndRegister(address,address,uint256,bytes32,bytes32)\":{\"params\":{\"allocator\":\"The address of the allocator mediating the resource lock.\",\"amount\":\"The amount of tokens to deposit.\",\"claimHash\":\"A bytes32 hash derived from the details of the compact.\",\"token\":\"The address of the ERC20 token to deposit.\",\"typehash\":\"The EIP-712 typehash associated with the registered compact.\"},\"returns\":{\"id\":\"      The ERC6909 token identifier of the associated resource lock.\"}},\"depositAndRegister(address,bytes32,bytes32)\":{\"params\":{\"allocator\":\"The address of the allocator.\",\"claimHash\":\"A bytes32 hash derived from the details of the compact.\",\"typehash\":\"The EIP-712 typehash associated with the registered compact.\"},\"returns\":{\"id\":\"      The ERC6909 token identifier of the associated resource lock.\"}},\"depositAndRegister(uint256[2][],bytes32[2][],uint256)\":{\"params\":{\"claimHashesAndTypehashes\":\"Array of [claimHash, typehash] pairs for registration.\",\"duration\":\"The duration for which the claim hashes remain valid.\",\"idsAndAmounts\":\"Array of [id, amount] pairs with each pair indicating the resource lock and amount to deposit.\"},\"returns\":{\"_0\":\"Whether the batch deposit and claim hash registration was successfully completed.\"}},\"disableForcedWithdrawal(uint256)\":{\"params\":{\"id\":\"The ERC6909 token identifier for the resource lock.\"},\"returns\":{\"_0\":\"Whether the forced withdrawal was successfully disabled.\"}},\"enableForcedWithdrawal(uint256)\":{\"params\":{\"id\":\"The ERC6909 token identifier for the resource lock.\"},\"returns\":{\"_0\":\"The timestamp at which tokens become withdrawable.\"}},\"forcedWithdrawal(uint256,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw.\",\"id\":\"The ERC6909 token identifier for the resource lock.\",\"recipient\":\"The account that will receive the withdrawn tokens.\"},\"returns\":{\"_0\":\"Whether the forced withdrawal was successfully executed.\"}},\"getForcedWithdrawalStatus(address,uint256)\":{\"params\":{\"account\":\"The account to get the forced withdrawal status for.\",\"id\":\"The ERC6909 token identifier of the resource lock.\"},\"returns\":{\"_0\":\"                     The current ForcedWithdrawalStatus (disabled, pending, or enabled).\",\"_1\":\"The timestamp at which tokens become withdrawable if status is pending.\"}},\"getLockDetails(uint256)\":{\"params\":{\"id\":\"The ERC6909 token identifier of the resource lock.\"},\"returns\":{\"_0\":\"      The address of the underlying token (or address(0) for native tokens).\",\"_1\":\"  The account of the allocator mediating the resource lock.\",\"_2\":\"The duration after which the resource lock can be reset once a forced withdrawal is initiated.\",\"_3\":\"      The scope of the resource lock (multichain or single chain).\"}},\"getRegistrationStatus(address,bytes32,bytes32)\":{\"params\":{\"claimHash\":\"A bytes32 hash derived from the details of the compact.\",\"sponsor\":\"The account that registered the compact.\",\"typehash\":\"The EIP-712 typehash associated with the registered claim hash.\"},\"returns\":{\"expires\":\" The timestamp at which the compact registration expires.\",\"isActive\":\"Whether the compact registration is currently active.\"}},\"hasConsumedAllocatorNonce(uint256,address)\":{\"params\":{\"allocator\":\"The account of the allocator.\",\"nonce\":\"The nonce to check.\"},\"returns\":{\"_0\":\"Whether the nonce has been consumed.\"}},\"isOperator(address,address)\":{\"details\":\"Checks if a `spender` is approved by `owner` to manage all of their tokens.\"},\"name()\":{\"details\":\"Returns the name for the contract.\"},\"name(uint256)\":{\"details\":\"Returns the symbol for token `id`.\"},\"register(bytes32,bytes32,uint256)\":{\"params\":{\"claimHash\":\"A bytes32 hash derived from the details of the compact.\",\"duration\":\"The duration for which the claim hash remains valid.\",\"typehash\":\"The EIP-712 typehash associated with the registered claim hash.\"},\"returns\":{\"_0\":\"Whether the claim hash was successfully registered.\"}},\"register(bytes32[2][],uint256)\":{\"params\":{\"claimHashesAndTypehashes\":\"Array of [claimHash, typehash] pairs for registration.\",\"duration\":\"The duration for which the claim hashes remain valid.\"},\"returns\":{\"_0\":\"Whether all claim hashes were successfully registered.\"}},\"setOperator(address,bool)\":{\"details\":\"Sets whether `operator` is approved to manage the tokens of the caller. Emits {OperatorSet} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`.\"},\"symbol(uint256)\":{\"details\":\"Returns the symbol for token `id`.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for token `id`.\"},\"transfer(address,uint256,uint256)\":{\"details\":\"Transfers `amount` of token `id` from the caller to `to`. Requirements: - caller must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256,uint256)\":{\"details\":\"Transfers `amount` of token `id` from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount` of token `id`. -  The caller must have at least `amount` of allowance to transfer the    tokens of `from` or approved as an operator. Emits a {Transfer} event.\"}},\"title\":\"The Compact\",\"version\":1},\"userdoc\":{\"events\":{\"AllocatorRegistered(uint96,address)\":{\"notice\":\"Event indicating an allocator has been registered.\"},\"Claim(address,address,address,bytes32)\":{\"notice\":\"Event indicating that a claim has been processed for a given compact.\"},\"CompactRegistered(address,bytes32,bytes32,uint256)\":{\"notice\":\"Event indicating that a compact has been registered directly.\"},\"ForcedWithdrawalStatusUpdated(address,uint256,bool,uint256)\":{\"notice\":\"Event indicating a change in forced withdrawal status.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"External pure function for returning the domain separator of the contract.\"},\"__registerAllocator(address,bytes)\":{\"notice\":\"External function for registering an allocator. Can be called by anyone if one of three conditions is met: the caller is the allocator address being registered, the allocator address contains code, or a proof is supplied representing valid create2 deployment parameters that resolve to the supplied allocator address.\"},\"allocatedTransfer((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))\":{\"notice\":\"Transfers ERC6909 tokens from multiple resource locks to multiple recipients with allocator approval.\"},\"allocatedTransfer((bytes,uint256,uint256,(uint256,uint256)[],address))\":{\"notice\":\"Transfers ERC6909 tokens from multiple resource locks to a single recipient with allocator approval.\"},\"allocatedTransfer((bytes,uint256,uint256,uint256,(address,uint256)[]))\":{\"notice\":\"Transfers ERC6909 tokens to multiple recipients with allocator approval.\"},\"allocatedTransfer((bytes,uint256,uint256,uint256,uint256,address))\":{\"notice\":\"Transfers ERC6909 tokens to a single recipient with allocator approval.\"},\"allocatedWithdrawal((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))\":{\"notice\":\"Withdraws underlying tokens from multiple resource locks to multiple recipients with allocator approval.\"},\"allocatedWithdrawal((bytes,uint256,uint256,(uint256,uint256)[],address))\":{\"notice\":\"Withdraws underlying tokens from multiple resource locks to a single recipient with allocator approval.\"},\"allocatedWithdrawal((bytes,uint256,uint256,uint256,(address,uint256)[]))\":{\"notice\":\"Withdraws underlying tokens to multiple recipients with allocator approval.\"},\"allocatedWithdrawal((bytes,uint256,uint256,uint256,uint256,address))\":{\"notice\":\"Withdraws underlying tokens to a single recipient with allocator approval.\"},\"consume(uint256[])\":{\"notice\":\"External function for consuming allocator nonces. Only callable by a registered allocator. Once consumed, any compact payloads that utilize those nonces cannot be claimed.\"},\"deposit(address)\":{\"notice\":\"External payable function for depositing native tokens into a resource lock and receiving back ERC6909 tokens representing the underlying locked balance controlled by the depositor. The allocator mediating the lock is provided as an argument, and the default reset period (ten minutes) and scope (multichain) will be used for the resource lock. The ERC6909 token amount received by the caller will match the amount of native tokens sent with the transaction.\"},\"deposit(address,address,uint256)\":{\"notice\":\"External function for depositing ERC20 tokens into a resource lock. The default reset period (ten minutes) and scope (multichain) will be used. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received back by the caller is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token.\"},\"deposit(address,address,uint8,uint8,uint256,address)\":{\"notice\":\"External function for depositing ERC20 tokens into a resource lock with custom reset period and scope parameters. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received by the recipient is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token.\"},\"deposit(address,uint8,uint8,address)\":{\"notice\":\"External payable function for depositing native tokens into a resource lock with custom reset period and scope parameters. The ERC6909 token amount received by the recipient will match the amount of native tokens sent with the transaction.\"},\"deposit(uint256[2][],address)\":{\"notice\":\"External payable function for depositing multiple tokens in a single transaction. The first entry in idsAndAmounts can optionally represent native tokens by providing the null address and an amount matching msg.value. For ERC20 tokens, the caller must directly approve The Compact to transfer sufficient amounts on its behalf. The ERC6909 token amounts received by the recipient are derived from the differences between starting and ending balances held in the resource locks, which may differ from the amounts transferred depending on the implementation details of the respective tokens.\"},\"depositAndRegister(address,address,uint256,bytes32,bytes32)\":{\"notice\":\"External function for depositing ERC20 tokens and simultaneously registering a compact. The default reset period (ten minutes) and scope (multichain) will be used. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received back by the caller is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token.\"},\"depositAndRegister(address,bytes32,bytes32)\":{\"notice\":\"External payable function for depositing native tokens into a resource lock and simultaneously registering a compact. The allocator, the claim hash, and the typehash used for the claim hash are provided as additional arguments, and the default reset period (ten minutes) and scope (multichain) will be used for the resource lock. The ERC6909 token amount received by the caller will match the amount of native tokens sent with the transaction.\"},\"depositAndRegister(uint256[2][],bytes32[2][],uint256)\":{\"notice\":\"External payable function for depositing multiple tokens in a single transaction and registering a set of claim hashes. The first entry in idsAndAmounts can optionally represent native tokens by providing the null address and an amount matching msg.value. For ERC20 tokens, the caller must directly approve The Compact to transfer sufficient amounts on its behalf. The ERC6909 token amounts received by the recipient are derived from the differences between starting and ending balances held in the resource locks, which may differ from the amounts transferred depending on the implementation details of the respective tokens. Note that resource lock ids must be supplied in alphanumeric order.\"},\"disableForcedWithdrawal(uint256)\":{\"notice\":\"External function to disable a previously enabled forced withdrawal for a resource lock.\"},\"enableForcedWithdrawal(uint256)\":{\"notice\":\"External function to initiate a forced withdrawal for a resource lock. Once enabled, forced withdrawals can be executed after the reset period has elapsed. The withdrawableAt timestamp returned will be the current timestamp plus the reset period associated with the resource lock.\"},\"forcedWithdrawal(uint256,address,uint256)\":{\"notice\":\"External function to execute a forced withdrawal from a resource lock after the reset period has elapsed. The tokens will be withdrawn to the specified recipient in the amount requested. The ERC6909 token balance of the caller will be reduced by the difference in the balance held by the resource lock before and after the withdrawal, which may differ from the provided amount depending on the underlying token in question.\"},\"getForcedWithdrawalStatus(address,uint256)\":{\"notice\":\"External view function for checking the forced withdrawal status of a resource lock for a given account. Returns both the current status (disabled, pending, or enabled) and the timestamp at which forced withdrawals will be enabled (if status is pending) or became enabled (if status is enabled).\"},\"getLockDetails(uint256)\":{\"notice\":\"External view function for retrieving the details of a resource lock. Returns the underlying token, the mediating allocator, the reset period, and the scope.\"},\"getRegistrationStatus(address,bytes32,bytes32)\":{\"notice\":\"External view function for checking the registration status of a compact. Returns both whether the claim hash is currently active and when it expires (if it is active).\"},\"hasConsumedAllocatorNonce(uint256,address)\":{\"notice\":\"External view function for checking whether a specific nonce has been consumed by an allocator. Once consumed, a nonce cannot be reused for claims mediated by that allocator.\"},\"register(bytes32,bytes32,uint256)\":{\"notice\":\"External function to register a claim hash and its associated EIP-712 typehash. The registered claim hash will remain valid for the specified duration. Once expired, the claim hash can no longer be used to initiate claims.\"},\"register(bytes32[2][],uint256)\":{\"notice\":\"External function to register multiple claim hashes and their associated EIP-712 typehashes in a single call. All registered claim hashes will remain valid for the specified duration. Once expired, the claim hashes can no longer be used to initiate claims.\"}},\"notice\":\"The Compact is an ownerless ERC6909 contract that facilitates the voluntary         formation and mediation of reusable \\\"resource locks.\\\"         This contract has not yet been properly tested, audited, or reviewed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TheCompact.sol\":\"TheCompact\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/permit2/lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solady/=lib/solady/src/\",\":soledge/=lib/soledge/src/\",\":solmate/=lib/permit2/lib/solmate/\",\":tstorish/=lib/tstorish/src/\"],\"viaIR\":true},\"sources\":{\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solady/src/tokens/ERC6909.sol\":{\"keccak256\":\"0x03975a3d9680a1bfe53a678685c81ed4d70b6e0f046ccf1905539caa5376eea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://827a2f6b69fcb700909635203a9453310ea89c0bb904943cf3cc732e35d81398\",\"dweb:/ipfs/QmZha3DSrunz1NR3jXHRXrLT6uvAKTt3AEV6PcbGWRLu4q\"]},\"lib/solady/src/utils/EfficientHashLib.sol\":{\"keccak256\":\"0x32032578683dc18c5f95c8dd4c1422d212f230d96d5425cc491f3350157e6fe1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82c89ef25e537766bbfc8ebba4138eee4fa1b64527c39add8240bce2ea99c661\",\"dweb:/ipfs/QmZVciQDtnXs3nDVUaH7mMLC6vFKe8zeKLK969bqJetKCj\"]},\"lib/solady/src/utils/LibString.sol\":{\"keccak256\":\"0xa0b70980612eeedd30cc65c44c37a286c8527cb41c7454db55b1a435beb2276f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93950259301ac435f1d8756cb80f99eafe9da4dc68b05e148a4b16042a69cc9b\",\"dweb:/ipfs/QmUpyP9AD7AqmRNEmrjLSQivXXdbZmFZKaLJwW9UP2wWCN\"]},\"lib/solady/src/utils/MetadataReaderLib.sol\":{\"keccak256\":\"0x671f4b38462335f3500b91eeff2fd25fc447cc201901524959c05b934ad0b100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa64b44dc13b25c1aa713cb5724fade1dc093c95581efc5ccb85cbcc616c02c5\",\"dweb:/ipfs/QmRvXqBw8GqpShA8cXAwA6ha14Q2bfajNmYq1mYNYAaMiv\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]},\"lib/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb\",\"dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry\"]},\"lib/tstorish/src/Tstorish.sol\":{\"keccak256\":\"0xad3697d9fd6e7c1fb6faa8d474af00bb2a7afd51e8818165fd30bcc7ead53973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b62000145be27440c913238fbe9b97ecfc709eacac14b498f18980418d6ab6\",\"dweb:/ipfs/QmRMXHdYUDmajWzwUjs7CQZ5i1T739MhiMmimd3do8qJNk\"]},\"src/TheCompact.sol\":{\"keccak256\":\"0x2949a8d172180ba623c85dfc22eda0ba1f59c4d70d8ee8ade62b5876ff6cd935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c6a3fdaa5319cc8a272422e8af551bee8e1467f78aa8b65a1290fddf0453a90\",\"dweb:/ipfs/QmafPX5TCncQbuhFtztQVL81hmU9wmdxfNZCYj9t5X6QqM\"]},\"src/interfaces/ITheCompact.sol\":{\"keccak256\":\"0xe75d130ab9ead7ef7866f4ce8fcbe5e8de49450abf5f8c6b5878c4e54e480103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b7694d1b97b350c41e668e72d25d3df10c230b9dd21219827d7d2cc0dc39b6\",\"dweb:/ipfs/QmTDJAFcTYfU7DyfuYMJHK3YMYRkXQvm9MoUhywaqeUsZ6\"]},\"src/interfaces/ITheCompactClaims.sol\":{\"keccak256\":\"0x5691d5127ccff51eea74ce4f6dd01a5f121fd2a1b7bdad41aca39c4d236e27bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca686c6911319d151dc1f658767545823d750c3fb54cb8f75e46b544df3a217a\",\"dweb:/ipfs/QmT2a1twcvzHxjWwcLqMebo9rat5x5CVy2KJfawj9qXS5a\"]},\"src/lib/AllocatorLogic.sol\":{\"keccak256\":\"0xadfa16ae7d02777e129d31639f110be46093ef109c1287896598ee792de34d5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11a258ef5e43b6d85c99b330beaf4c3750f0d41c3b862b677551eca3626a2071\",\"dweb:/ipfs/QmfViBPCWeKqgdVKfA7KQUz2JntZEdGfbpgAwCGWwLGQ9Y\"]},\"src/lib/ClaimHashFunctionCastLib.sol\":{\"keccak256\":\"0xcfa2f7fb4e3df789ae504ebc13e31cadb6c05282e07d46a4b807d5d23a5ef530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51e642f4676ec4e0ecc1fb716cd051bd6d12dac2d39e997e516af5bd141b3178\",\"dweb:/ipfs/QmeQ8vHdg8vsCZ9XPc3af82ktXHHicY3QQbAoghHfvkVK4\"]},\"src/lib/ClaimHashLib.sol\":{\"keccak256\":\"0x2bc3fb604115697562a4770f98020efd578b02d6376b56ca52c64d0df46f6e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeddaee5ec0f8512fc13af7b0bfc07e93250a1bc34b6095c6a5bd6624a73990d\",\"dweb:/ipfs/QmVeVSBNoJeMndTQpvB2Kr9BzWWG8crjeBPjZZxciGYXMx\"]},\"src/lib/ClaimProcessor.sol\":{\"keccak256\":\"0x58872af76a73fd131a85635150545978bbe09ae83ec4ed2fae19d75c038a482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d782488fcbded4ef2781031940611599b6ec41e92d813800912e2c86afd7979\",\"dweb:/ipfs/QmaCuq52gwjc1LfZrURPpyrjmGZZCtzhXRqg4dMhXP1NKa\"]},\"src/lib/ClaimProcessorFunctionCastLib.sol\":{\"keccak256\":\"0xb69ec41dc657f93f6f6a1901d39e48a791907d4debc0eb8104f9fe016b6a59ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6a54cebc498c4181ddc25fd4c6162449ae12d407fc1b45c0e6c4b365da1543e\",\"dweb:/ipfs/QmRdZp5fraYJRB7QXwDqE5jbpmerWaCV3DqMPxi9aCk4ZQ\"]},\"src/lib/ClaimProcessorLib.sol\":{\"keccak256\":\"0xf150692ad2915d0c4df63ea44e62f6e3d5736f2c91de7cea48a1301cf4034e51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c2f21638d2a613e912cf73dd049b0bb2e4abbea54a3f58a5439f6396c59d9ee\",\"dweb:/ipfs/QmRQpwnhhNfvWyTXHRy982awBnHA4fjK7GpHzSgqC3pPT6\"]},\"src/lib/ClaimProcessorLogic.sol\":{\"keccak256\":\"0x737780590a48e67dc0f64bd3bb7248eafb7630f579d8aa44befb197d9ac66ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c69e2cbf316fe182fad296b8d65a76ade84923edb0572c339f880e21fc7bc\",\"dweb:/ipfs/QmWuZ9UJA4nsdPjgCa6rsCBvoWBjcUhWRuCnLqPNbM8687\"]},\"src/lib/ComponentLib.sol\":{\"keccak256\":\"0x3e1ad4bff9cd12162f9b849078839b802f4783b474588fa93be8ba1e61263dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faa70f41d0679e1fa2aa827f863c03bf8a3962703a26ae724b7ca2a8d5f9f96b\",\"dweb:/ipfs/QmXWyv8ATKeSKwiXCPFZBLkrRuV1NhNDS5yH5rDyrm6GLs\"]},\"src/lib/ConstructorLogic.sol\":{\"keccak256\":\"0xca9b0d52a562351978aafcc06f79f5c555ea948eaad28983812a7892f02b1245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f2e41013c0ef8ef9bee844494185b7a09c8680ea3d931a2683f968cdaa154a9\",\"dweb:/ipfs/QmX8CoLP6VGRkxhx6VonrRf2YqPZ1hg1LagKvkNBaQtNaR\"]},\"src/lib/ConsumerLib.sol\":{\"keccak256\":\"0x582badfccdb57ee9518e39676fab7ba2abc6b527c854d524b8f417126fa6d192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96d6dde54bdad2fc2203620d5f75e96cc9267cb340e1284d311bf6f8c77d16d2\",\"dweb:/ipfs/Qmbq8XuUiAoEsmYVa2NCHSdi6gu4ZYzeyr1iPNGaFwwhxu\"]},\"src/lib/DepositLogic.sol\":{\"keccak256\":\"0xb2a199980ca4025c1784ebc79ec5d73cbe849ff26d446b2ca58bdb7066475fcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73e9defc19c10bb6b63d7571a1e097ed09accdf7cf123b91c8a9bea02c9ca87f\",\"dweb:/ipfs/QmVWt9Ssb6CuFpYKTDYc31FH9TFZfYqs4WGsqf2ksiPtpx\"]},\"src/lib/DepositViaPermit2Lib.sol\":{\"keccak256\":\"0x3d45834b9be7e0af8aadd4c3afb2b5d7a9c1a47156e30780499852b1e503b1c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e16d1aa8eb93fefd956455fbb157a58cb9fb3824a276f54a33a52c17924c30b\",\"dweb:/ipfs/QmUmsqU9p8J7r7hk5jxNYXUnaPoCaMruFKtxFo12zV7XJQ\"]},\"src/lib/DepositViaPermit2Logic.sol\":{\"keccak256\":\"0xb8813f63d4a3c05dc99e36b6a900cbd7c6c6bfc8cccdb5b9052894400b4925a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463fa79ef23b7f6d56a9bc8f6139917374a06f860c12fbfe6e76d794e690b9e0\",\"dweb:/ipfs/QmXGqm3wZqRSDAvy7mykMvezMBVPPT79pJYsASwkxXFitq\"]},\"src/lib/DirectDepositLogic.sol\":{\"keccak256\":\"0xa1b9f042c5ecf3edcde3733bd12cde49633dcce9336622ea7c5eabd0ce2bafa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0eeaa505727c2b42780bd4e3e3dbede2ce51480c46ff90ad401d7328fc5e42d8\",\"dweb:/ipfs/QmZ8MDQjSi2yczScSgKyd6Ge3ir4xJA2o8pX1j15ryyzVp\"]},\"src/lib/DomainLib.sol\":{\"keccak256\":\"0x0a69b112fabd7d4e13fbf4c796a4a163f522c84b4b6a981c913a6c7342f5cc6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a3d3fd2d8ab66c6dd0f2674efcf2bca87899decd42e949631be80a60f74d6a2\",\"dweb:/ipfs/QmP38CpNz5GjycQZwpe7CxXrRsugraQDtr6rsiA5ue2iK6\"]},\"src/lib/EfficiencyLib.sol\":{\"keccak256\":\"0xd8fd182c728a98a3ac5c64cbc7011bc34dc1ee06e377a1a5e670c3cd8375eff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f565cad687dc0bd3438a8b8b08ecc973f5ad5a1aebd332baa402e45cd56ae83\",\"dweb:/ipfs/QmayoEFEv6zMhRw6kqqoqdmNE1jGbwgRQ6VA5wj2XAb7Du\"]},\"src/lib/EventLib.sol\":{\"keccak256\":\"0x0d9bc84e78628d9ff42689b8cd33353c86f9de7220002d74c5d485275f328946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb8bf826a89bb1cc62e8af269f34453c13df6ffe473e0dff8aeddaf1797afa0f\",\"dweb:/ipfs/QmX7TFZACuGBhCVMjAPve7JKz6PWZjYTMr7JQ9WbFatKcu\"]},\"src/lib/Extsload.sol\":{\"keccak256\":\"0x72075add7c7d734c46922f2f56cb490d48711a0cc6af439619ff39e60df75924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283cc72cb88802327c60fc9bc75f840ff639d791c1d19056bbadf7e7e5f3c99f\",\"dweb:/ipfs/QmWoCebx1axDW8uuUEPv6QRzGWFD5bRGnvw2VD7KJufokB\"]},\"src/lib/HashLib.sol\":{\"keccak256\":\"0x50bc064b796b92d6199cf09cf8ea34a808653a8c668f695ce89cd3614956cb4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bd96eb47fd50bb4f15540e3f8c903d5cf83d8e0e975d615abb9e2dfe7329af0\",\"dweb:/ipfs/QmVPs5HWJEbUtKQn69jSYdA7U92jU7nkWwGfsmD6sUCWsR\"]},\"src/lib/IdLib.sol\":{\"keccak256\":\"0x14a04b7bdfcd5e7cc783a7202cb0429fb225f0a960908f06028f39f78b01373b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c465efd13c8fd3ddfd701357f8f6e64443d69c5ab835c7bb35b8934261c2313e\",\"dweb:/ipfs/QmP15v2Qrp1hg7BvkfzE4zqcjwhDH2NBHkzJ8rRShCwU8S\"]},\"src/lib/MetadataLib.sol\":{\"keccak256\":\"0x1d7f67de567fccba29393048a15373c9ad6cc903409b52b94a8baf1747204340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f15f66c2420d6f5a527ee12945bc000e7687586727845015d60e229ca5009d4\",\"dweb:/ipfs/QmY27xFEKUBW3U7K18gQNNbmR3pZbp1Gz3ecQVkZQUBzek\"]},\"src/lib/MetadataRenderer.sol\":{\"keccak256\":\"0xdef8b8a92120470f9d290b5d6ab3fc69145300741ca066b152ddc71cd719982e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6946d4d9d525fd21e3b4d310aaa5160de531bda7574bb5ad8c6a10616c340fe8\",\"dweb:/ipfs/QmdB6Kwipo2MXCLPexXqjNP2xQhkG8BRx7KBWKMyqCRNHk\"]},\"src/lib/RegistrationLib.sol\":{\"keccak256\":\"0xa6be3d3f74e30fa04157f369964afe818f562c82369bb0823ffc4a06297364a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f73aa296543d4c3757a9b104278cfa9c07838ae9a9b82a3e77ed6df7bbe8ef20\",\"dweb:/ipfs/QmWDCBxnz3quqhDtAN7zqetaQmCE8ULM1dAYEBrguHP5DQ\"]},\"src/lib/RegistrationLogic.sol\":{\"keccak256\":\"0x40850751ea4a77f6bd9df09a3a9f565994dfd03b29a15dcc31e03da3be317b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16f07cb5ab8e5adfe74cdd700f5c9e448b28fab0b120058b25d4d1bcf2338a9a\",\"dweb:/ipfs/QmULZACcDPswptXRxKnA8dBChU63k8CkvY5Q7YG7SJoSs6\"]},\"src/lib/SharedLogic.sol\":{\"keccak256\":\"0xcc76a01f9dc24f1afc4fd21dbdb423ec7a6cccb454c9b725fa3b135d4d851365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f9fe59a2d0c467832d42c60acabd4c599868024c09b5aa89e9e91b38e9f8eba\",\"dweb:/ipfs/Qmbsu2BLJT32Qc77RR3ZHhVTMkyh1sLJueLiTuYHCQwxVf\"]},\"src/lib/TheCompactLogic.sol\":{\"keccak256\":\"0xc6106d8b4a9f2bf6c9006181a3e6acc95c8524628b5096478c76716a7e2cc5c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18056a737da3fddaac4cb50dd598b57e0bcc5d1889669831bbb4d09bc48c5cf6\",\"dweb:/ipfs/QmPvQs8THzQPfpxuB5MKNKsFGiPjbR9B5QVAKa4NTkpSbd\"]},\"src/lib/TransferFunctionCastLib.sol\":{\"keccak256\":\"0x1b2b8d48503f85dee96cb0d915d1f506ab872aac6fb29a1adbb894de93a534e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a2eb941a4a3e4633c88420ae3eab750ffdb32e431c71927a10feb6562b6e9a9\",\"dweb:/ipfs/QmeYJbeupvqjyrMV43Z41mz52E9Bwqhmm4mSx7K8F26Vmb\"]},\"src/lib/TransferLogic.sol\":{\"keccak256\":\"0x08ae66f9d642e8caabcd200d8574e5487cc11181c23acc18f2076e4f5e9ca086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f4ec47106727e1fd5197f9fa7e86552469a198dd62dd24ad3dc1db9fb6d4327\",\"dweb:/ipfs/QmR3bC1fmUVYTarsZMRU3u3RV1GcbNsF3NghvxND4B7J46\"]},\"src/lib/ValidityLib.sol\":{\"keccak256\":\"0xfdecefc1bd9b9ba92fb471af7d09dc30255cb16154cec436b27fc06630fc7106\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b36c79e57192514bcf3aace66e38568708e066f24db93832f0a7f530754c5a7\",\"dweb:/ipfs/QmUSRsBpZz7VEPN1ubX5mB71uKRdQ17Tf5jbkUNkyiMGhu\"]},\"src/lib/WithdrawalLogic.sol\":{\"keccak256\":\"0x438c41cb28048ee067e8f64e2faaf7339a3324f0ce81ec96c94e5692074ee650\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f811218032733e0fd0eb937a036b04e37dfcd46ed64bcbac22ecbb5d2a5993b4\",\"dweb:/ipfs/QmdD2bN9Be2dDBEmuYBKGJKgW5FsayuojBqjYuz2ZvWcEb\"]},\"src/types/BatchClaims.sol\":{\"keccak256\":\"0x368860cb48d9cf8b7ee86e226fc203307c8559ee5bbd987299c14580c61039b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edd6eccb18ee3f7dc1e4fdeaa00d007b8cd6f506ab76366f74e530a66211ba8d\",\"dweb:/ipfs/Qmf68iLL8CVZEvkjnQb6GdPumsP5V8dFfSubXCSx1Vgu4Z\"]},\"src/types/BatchMultichainClaims.sol\":{\"keccak256\":\"0xe493995e946bf63d2970e5668e426f6c3d84f9ae5b03f86f7c493ae02ca8b96c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91370d328607589fa1ff37f3c0ef66a5b90ff63de20c8ccee3b009a6aedb2620\",\"dweb:/ipfs/QmY5Ja2XfxRFbh4dtViqiepaSfNr1rWrMYSnSGjeMPxxNw\"]},\"src/types/Claims.sol\":{\"keccak256\":\"0x6ae4ad79a64e0edd6169e87f8c3e35abd5f592ac23dc8eae7b92dfc190fa3ae2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4434f16be0877209b2aaa51c9f27b9374fab6acbfc3b6241ba00907d6de7a96\",\"dweb:/ipfs/QmTTcNwtekjwMZkrNKAcKAprWG47pSVEn2GETX6tZu746C\"]},\"src/types/CompactCategory.sol\":{\"keccak256\":\"0xc3ab3758e88fc8591d79352d3d49140433bbf4176c3caa1bfce1903e2bfadf06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16960ee62b98c5cbbedcfe22ce4b521205d2bcc4fe9dfa57a9d68ec90efeb5a1\",\"dweb:/ipfs/Qmc3FciGTRrDZjRSb9waUYkZsELRvVWkJKNVqS1u8vEDNG\"]},\"src/types/Components.sol\":{\"keccak256\":\"0xd5027c0eb603a4604e050e97930fa436db33755b3e8097894320916cd7163ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b414c4a0e0d543f8de309bbb005f62d63a5c67ae6cf78d5d5b5fd076dd7b0a51\",\"dweb:/ipfs/QmX8Z9Fp2QJVgE9hwbPjrXUYc4RVAE8qTyfN8DKBpV5iPB\"]},\"src/types/EIP712Types.sol\":{\"keccak256\":\"0x386ff8e0aff7d437b8b49117ed158554e608d0cc18a0b4f561510e9584cafb91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49d199dd3caab0210a2648a1b9d2a8965b5706f602fffee8e1815bbacddbe5e\",\"dweb:/ipfs/QmYUzWFC4GK1rjoqnZEt2ghL5GMPCiaF5xaPzSr4Rm99PK\"]},\"src/types/ForcedWithdrawalStatus.sol\":{\"keccak256\":\"0xdf352a2439e57ea9e1b7d54997fe904e4ea41ab9d2d8221d7d753dce94e76dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6faadb6857eda66cbef8fe1bf36d85d16f534b899a737a9464e69dc505eb9e89\",\"dweb:/ipfs/QmdC9beQhPRYv5sAFx7TyWvzGPjm6XY3bCYNKzuZH1Pesd\"]},\"src/types/Lock.sol\":{\"keccak256\":\"0x21a490258b933f8d5db759a91d07f7d9d2b2435d366334a8bcfbce4379a85011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1cfcb02c3b0a70d82b2d9bd9c55ffcf654a226774711ca727eab8b0cdf456ea\",\"dweb:/ipfs/QmRFN3dvespK1mUcUuXm4rnPd3ZGNRdba8MZgub1zu24Qw\"]},\"src/types/MultichainClaims.sol\":{\"keccak256\":\"0x596b71d675b7b5e13b29f6b7fb92d23722d2792fadc82ad764467fdf9c693cb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://974d9d906e06ad29e875c2556d32c1f631a70539e43b018815e3fc68ede01e53\",\"dweb:/ipfs/QmPbqsU21jDGhLQ9x9No2xDUimaLueGGF7eAkNxJfhc3fx\"]},\"src/types/ResetPeriod.sol\":{\"keccak256\":\"0xfd32523d563b926c72fdc693aa8b7f6db24f4720decee16710cdfc662a8d8f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c510cde0fc28cde51aad2df6bac8eeef5e0fb67be754a3d8c655a8556db32c6\",\"dweb:/ipfs/QmWjVZJdfxVK5EiprmWi9iGNMqXAkVZjECnzeXvjfTsDZX\"]},\"src/types/Scope.sol\":{\"keccak256\":\"0x3e63be015c24bde88698efc20b00690d1e683a5cabf2122dc91ab0ecad4ae8ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5160d46460204dc6268a963e9d0c117fab903318f74d3b5903693fe2dfcc2462\",\"dweb:/ipfs/QmRsc4VSWvvSxi3VfyFgjTELj5DB5MpZ7UPJ3mzgPMyD9v\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "allocatedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "providedAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AllocatedAmountExceeded"
        },
        { "inputs": [], "type": "error", "name": "BalanceOverflow" },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Expired"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "type": "error",
          "name": "ForcedWithdrawalAlreadyDisabled"
        },
        { "inputs": [], "type": "error", "name": "InsufficientBalance" },
        { "inputs": [], "type": "error", "name": "InsufficientPermission" },
        { "inputs": [], "type": "error", "name": "InvalidBatchAllocation" },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidBatchDepositStructure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDepositBalanceChange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDepositTokenOrdering"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidRegistrationDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRegistrationProof"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidScope"
        },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "InvalidToken"
        },
        { "inputs": [], "type": "error", "name": "OnlyDirectCalls" },
        { "inputs": [], "type": "error", "name": "Permit2CallFailed" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "type": "error",
          "name": "PrematureWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "existingCaller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ReentrantCall"
        },
        { "inputs": [], "type": "error", "name": "TStoreAlreadyActivated" },
        { "inputs": [], "type": "error", "name": "TStoreNotSupported" },
        {
          "inputs": [],
          "type": "error",
          "name": "TloadTestContractDeploymentFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "type": "error",
          "name": "UnallocatedTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "allocatorId",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocatorRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "arbiter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "typehash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "expires",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CompactRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "activating",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "withdrawableAt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ForcedWithdrawalStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "by",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__activateTstore"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            { "internalType": "bytes", "name": "proof", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__registerAllocator",
          "outputs": [
            { "internalType": "uint96", "name": "", "type": "uint96" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchTransfer",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TransferComponent[]",
                  "name": "transfers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedTransfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchTransfer",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitByIdComponent[]",
                  "name": "transfers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedTransfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitTransfer",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "recipients",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedTransfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BasicTransfer",
              "name": "transfer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedTransfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BasicTransfer",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchTransfer",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitByIdComponent[]",
                  "name": "transfers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchTransfer",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TransferComponent[]",
                  "name": "transfers",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitTransfer",
              "name": "withdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "recipients",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allocatedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BasicClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BasicClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct BatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedSplitBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedMultichainClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct SplitBatchClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "struct SplitBatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SplitComponent[]",
                      "name": "portions",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "claimant",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedBatchClaim",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct QualifiedSplitClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                { "internalType": "uint256", "name": "id", "type": "uint256" },
                {
                  "internalType": "uint256",
                  "name": "allocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct SplitComponent[]",
                  "name": "claimants",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimant",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct ExogenousQualifiedBatchMultichainClaimWithWitness",
              "name": "claimPayload",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "allocatorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sponsorSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expires",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypestring",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "qualificationTypehash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "qualificationPayload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "additionalChains",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "chainIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "notarizedChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BatchClaimComponent[]",
                  "name": "claims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAndWithdraw",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "nonces",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consume",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "enum ResetPeriod", "name": "", "type": "uint8" },
            { "internalType": "enum Scope", "name": "", "type": "uint8" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            {
              "internalType": "enum ResetPeriod",
              "name": "resetPeriod",
              "type": "uint8"
            },
            { "internalType": "enum Scope", "name": "scope", "type": "uint8" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            {
              "internalType": "enum ResetPeriod",
              "name": "resetPeriod",
              "type": "uint8"
            },
            { "internalType": "enum Scope", "name": "scope", "type": "uint8" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" },
            {
              "internalType": "struct ISignatureTransfer.TokenPermissions[]",
              "name": "permitted",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "enum ResetPeriod", "name": "", "type": "uint8" },
            { "internalType": "enum Scope", "name": "", "type": "uint8" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2][]",
              "name": "idsAndAmounts",
              "type": "uint256[2][]"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            { "internalType": "address", "name": "", "type": "address" },
            {
              "internalType": "enum ResetPeriod",
              "name": "resetPeriod",
              "type": "uint8"
            },
            { "internalType": "enum Scope", "name": "", "type": "uint8" },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum CompactCategory",
              "name": "compactCategory",
              "type": "uint8"
            },
            { "internalType": "string", "name": "witness", "type": "string" },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndRegister",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2][]",
              "name": "idsAndAmounts",
              "type": "uint256[2][]"
            },
            {
              "internalType": "bytes32[2][]",
              "name": "claimHashesAndTypehashes",
              "type": "bytes32[2][]"
            },
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositAndRegister",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            { "internalType": "bytes32", "name": "typehash", "type": "bytes32" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositAndRegister",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureTransfer.TokenPermissions[]",
              "name": "permitted",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            {
              "internalType": "enum ResetPeriod",
              "name": "resetPeriod",
              "type": "uint8"
            },
            { "internalType": "enum Scope", "name": "", "type": "uint8" },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum CompactCategory",
              "name": "compactCategory",
              "type": "uint8"
            },
            { "internalType": "string", "name": "witness", "type": "string" },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositAndRegister",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            { "internalType": "bytes32", "name": "typehash", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndRegister",
          "outputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableForcedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableForcedWithdrawal",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            { "internalType": "bytes32[]", "name": "", "type": "bytes32[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forcedWithdrawal",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getForcedWithdrawalStatus",
          "outputs": [
            {
              "internalType": "enum ForcedWithdrawalStatus",
              "name": "",
              "type": "uint8"
            },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLockDetails",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "enum ResetPeriod", "name": "", "type": "uint8" },
            { "internalType": "enum Scope", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sponsor", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            { "internalType": "bytes32", "name": "typehash", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegistrationStatus",
          "outputs": [
            { "internalType": "bool", "name": "isActive", "type": "bool" },
            { "internalType": "uint256", "name": "expires", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "nonce", "type": "uint256" },
            {
              "internalType": "address",
              "name": "allocator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasConsumedAllocatorNonce",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            { "internalType": "bool", "name": "status", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[2][]",
              "name": "claimHashesAndTypehashes",
              "type": "bytes32[2][]"
            },
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "claimHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "typehash",
              "type": "bytes32"
            },
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setOperator",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            { "internalType": "bool", "name": "result", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "id", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "id", "type": "uint256" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "A bytes32 representing the domain separator for the contract."
            }
          },
          "__activateTstore()": {
            "details": "External function to activate TSTORE usage. Does not need to be      called if TSTORE is supported from deployment, and only needs to be      called once. Reverts if TSTORE has already been activated or if the      opcode is not available. Note that this must be called directly from      an externally-owned account to avoid potential reentrancy issues."
          },
          "__registerAllocator(address,bytes)": {
            "params": {
              "allocator": "The address to register as an allocator.",
              "proof": "An 85-byte value containing create2 address derivation parameters (0xff ++ factory ++ salt ++ initcode hash)."
            },
            "returns": {
              "_0": "A unique identifier assigned to the registered allocator."
            }
          },
          "allocatedTransfer((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": {
            "params": {
              "transfer": "A SplitBatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  transfers          Array of SplitByIdComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  portions        Array of SplitComponents, each containing:        -  claimant     The account that will receive tokens.        -  amount       The amount of tokens the claimant will receive."
            },
            "returns": { "_0": "Whether the transfer was successful." }
          },
          "allocatedTransfer((bytes,uint256,uint256,(uint256,uint256)[],address))": {
            "params": {
              "transfer": "A BatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  transfers          Array of TransferComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  amount          The amount of tokens to transfer.  -  recipient          The account that will receive all tokens."
            },
            "returns": { "_0": "Whether the transfer was successful." }
          },
          "allocatedTransfer((bytes,uint256,uint256,uint256,(address,uint256)[]))": {
            "params": {
              "transfer": "A SplitTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  recipients         Array of SplitComponents, each containing:     -  claimant        The account that will receive tokens.     -  amount          The amount of tokens the claimant will receive."
            },
            "returns": { "_0": "Whether the transfer was successful." }
          },
          "allocatedTransfer((bytes,uint256,uint256,uint256,uint256,address))": {
            "params": {
              "transfer": "A BasicTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the transfer cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  amount             The amount of tokens to transfer.  -  recipient          The account that will receive the tokens."
            },
            "returns": { "_0": "Whether the transfer was successful." }
          },
          "allocatedWithdrawal((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": {
            "params": {
              "withdrawal": "A SplitBatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  transfers          Array of SplitByIdComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  portions        Array of SplitComponents, each containing:        -  claimant     The account that will receive tokens.        -  amount       The amount of tokens the claimant will receive."
            },
            "returns": { "_0": "Whether the withdrawal was successful." }
          },
          "allocatedWithdrawal((bytes,uint256,uint256,(uint256,uint256)[],address))": {
            "params": {
              "withdrawal": "A BatchTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  transfers          Array of TransferComponents, each containing:     -  id              The ERC6909 token identifier of the resource lock.     -  amount          The amount of tokens to withdraw.  -  recipient          The account that will receive all tokens."
            },
            "returns": { "_0": "Whether the withdrawal was successful." }
          },
          "allocatedWithdrawal((bytes,uint256,uint256,uint256,(address,uint256)[]))": {
            "params": {
              "withdrawal": "A SplitTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  recipients         Array of SplitComponents, each containing:     -  claimant        The account that will receive tokens.     -  amount          The amount of tokens the claimant will receive."
            },
            "returns": { "_0": "Whether the withdrawal was successful." }
          },
          "allocatedWithdrawal((bytes,uint256,uint256,uint256,uint256,address))": {
            "params": {
              "withdrawal": "A BasicTransfer struct containing the following:  -  allocatorSignature Authorization signature from the allocator.  -  nonce              Parameter enforcing replay protection, scoped to the allocator.  -  expires            Timestamp after which the withdrawal cannot be executed.  -  id                 The ERC6909 token identifier of the resource lock.  -  amount             The amount of tokens to withdraw.  -  recipient          The account that will receive the tokens."
            },
            "returns": { "_0": "Whether the withdrawal was successful." }
          },
          "allowance(address,address,uint256)": {
            "details": "Returns the amount of token `id` that `spender` can spend on behalf of `owner`."
          },
          "approve(address,uint256,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` for the caller for token `id`. Emits a {Approval} event."
          },
          "balanceOf(address,uint256)": {
            "details": "Returns the amount of token `id` owned by `owner`."
          },
          "consume(uint256[])": {
            "params": { "nonces": "Array of nonces to be consumed." },
            "returns": {
              "_0": "Whether all nonces were successfully consumed."
            }
          },
          "decimals(uint256)": {
            "details": "Returns the number of decimals for token `id`. Returns 18 by default. Please override this function if you need to return a custom value."
          },
          "deposit(address)": {
            "params": { "allocator": "The address of the allocator." },
            "returns": {
              "_0": "The ERC6909 token identifier of the associated resource lock."
            }
          },
          "deposit(address,address,uint256)": {
            "params": {
              "allocator": "The address of the allocator mediating the resource lock.",
              "amount": "The amount of tokens to deposit.",
              "token": "The address of the ERC20 token to deposit."
            },
            "returns": {
              "_0": "      The ERC6909 token identifier of the associated resource lock."
            }
          },
          "deposit(address,address,uint8,uint8,uint256,address)": {
            "params": {
              "allocator": "The address of the allocator mediating the resource lock.",
              "amount": "The amount of tokens to deposit.",
              "recipient": "The address that will receive the corresponding ERC6909 tokens.",
              "resetPeriod": "The duration after which the resource lock can be reset once a forced withdrawal is initiated.",
              "scope": "The scope of the resource lock (multichain or single chain).",
              "token": "The address of the ERC20 token to deposit."
            },
            "returns": {
              "_0": "        The ERC6909 token identifier of the associated resource lock."
            }
          },
          "deposit(address,uint8,uint8,address)": {
            "params": {
              "allocator": "The address of the allocator mediating the resource lock.",
              "recipient": "The address that will receive the corresponding ERC6909 tokens.",
              "resetPeriod": "The duration after which the resource lock can be reset once a forced withdrawal is initiated.",
              "scope": "The scope of the resource lock (multichain or single chain)."
            },
            "returns": {
              "_0": "        The ERC6909 token identifier of the associated resource lock."
            }
          },
          "deposit(uint256[2][],address)": {
            "params": {
              "idsAndAmounts": "Array of [id, amount] pairs with each pair indicating the resource lock and amount to deposit.",
              "recipient": "The address that will receive the corresponding ERC6909 tokens."
            },
            "returns": {
              "_0": "Whether the batch deposit was successfully completed."
            }
          },
          "depositAndRegister(address,address,uint256,bytes32,bytes32)": {
            "params": {
              "allocator": "The address of the allocator mediating the resource lock.",
              "amount": "The amount of tokens to deposit.",
              "claimHash": "A bytes32 hash derived from the details of the compact.",
              "token": "The address of the ERC20 token to deposit.",
              "typehash": "The EIP-712 typehash associated with the registered compact."
            },
            "returns": {
              "id": "      The ERC6909 token identifier of the associated resource lock."
            }
          },
          "depositAndRegister(address,bytes32,bytes32)": {
            "params": {
              "allocator": "The address of the allocator.",
              "claimHash": "A bytes32 hash derived from the details of the compact.",
              "typehash": "The EIP-712 typehash associated with the registered compact."
            },
            "returns": {
              "id": "      The ERC6909 token identifier of the associated resource lock."
            }
          },
          "depositAndRegister(uint256[2][],bytes32[2][],uint256)": {
            "params": {
              "claimHashesAndTypehashes": "Array of [claimHash, typehash] pairs for registration.",
              "duration": "The duration for which the claim hashes remain valid.",
              "idsAndAmounts": "Array of [id, amount] pairs with each pair indicating the resource lock and amount to deposit."
            },
            "returns": {
              "_0": "Whether the batch deposit and claim hash registration was successfully completed."
            }
          },
          "disableForcedWithdrawal(uint256)": {
            "params": {
              "id": "The ERC6909 token identifier for the resource lock."
            },
            "returns": {
              "_0": "Whether the forced withdrawal was successfully disabled."
            }
          },
          "enableForcedWithdrawal(uint256)": {
            "params": {
              "id": "The ERC6909 token identifier for the resource lock."
            },
            "returns": {
              "_0": "The timestamp at which tokens become withdrawable."
            }
          },
          "forcedWithdrawal(uint256,address,uint256)": {
            "params": {
              "amount": "The amount of tokens to withdraw.",
              "id": "The ERC6909 token identifier for the resource lock.",
              "recipient": "The account that will receive the withdrawn tokens."
            },
            "returns": {
              "_0": "Whether the forced withdrawal was successfully executed."
            }
          },
          "getForcedWithdrawalStatus(address,uint256)": {
            "params": {
              "account": "The account to get the forced withdrawal status for.",
              "id": "The ERC6909 token identifier of the resource lock."
            },
            "returns": {
              "_0": "                     The current ForcedWithdrawalStatus (disabled, pending, or enabled).",
              "_1": "The timestamp at which tokens become withdrawable if status is pending."
            }
          },
          "getLockDetails(uint256)": {
            "params": {
              "id": "The ERC6909 token identifier of the resource lock."
            },
            "returns": {
              "_0": "      The address of the underlying token (or address(0) for native tokens).",
              "_1": "  The account of the allocator mediating the resource lock.",
              "_2": "The duration after which the resource lock can be reset once a forced withdrawal is initiated.",
              "_3": "      The scope of the resource lock (multichain or single chain)."
            }
          },
          "getRegistrationStatus(address,bytes32,bytes32)": {
            "params": {
              "claimHash": "A bytes32 hash derived from the details of the compact.",
              "sponsor": "The account that registered the compact.",
              "typehash": "The EIP-712 typehash associated with the registered claim hash."
            },
            "returns": {
              "expires": " The timestamp at which the compact registration expires.",
              "isActive": "Whether the compact registration is currently active."
            }
          },
          "hasConsumedAllocatorNonce(uint256,address)": {
            "params": {
              "allocator": "The account of the allocator.",
              "nonce": "The nonce to check."
            },
            "returns": { "_0": "Whether the nonce has been consumed." }
          },
          "isOperator(address,address)": {
            "details": "Checks if a `spender` is approved by `owner` to manage all of their tokens."
          },
          "name()": { "details": "Returns the name for the contract." },
          "name(uint256)": { "details": "Returns the symbol for token `id`." },
          "register(bytes32,bytes32,uint256)": {
            "params": {
              "claimHash": "A bytes32 hash derived from the details of the compact.",
              "duration": "The duration for which the claim hash remains valid.",
              "typehash": "The EIP-712 typehash associated with the registered claim hash."
            },
            "returns": {
              "_0": "Whether the claim hash was successfully registered."
            }
          },
          "register(bytes32[2][],uint256)": {
            "params": {
              "claimHashesAndTypehashes": "Array of [claimHash, typehash] pairs for registration.",
              "duration": "The duration for which the claim hashes remain valid."
            },
            "returns": {
              "_0": "Whether all claim hashes were successfully registered."
            }
          },
          "setOperator(address,bool)": {
            "details": "Sets whether `operator` is approved to manage the tokens of the caller. Emits {OperatorSet} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`."
          },
          "symbol(uint256)": {
            "details": "Returns the symbol for token `id`."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for token `id`."
          },
          "transfer(address,uint256,uint256)": {
            "details": "Transfers `amount` of token `id` from the caller to `to`. Requirements: - caller must at least have `amount`. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256,uint256)": {
            "details": "Transfers `amount` of token `id` from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount` of token `id`. -  The caller must have at least `amount` of allowance to transfer the    tokens of `from` or approved as an operator. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "External pure function for returning the domain separator of the contract."
          },
          "__registerAllocator(address,bytes)": {
            "notice": "External function for registering an allocator. Can be called by anyone if one of three conditions is met: the caller is the allocator address being registered, the allocator address contains code, or a proof is supplied representing valid create2 deployment parameters that resolve to the supplied allocator address."
          },
          "allocatedTransfer((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": {
            "notice": "Transfers ERC6909 tokens from multiple resource locks to multiple recipients with allocator approval."
          },
          "allocatedTransfer((bytes,uint256,uint256,(uint256,uint256)[],address))": {
            "notice": "Transfers ERC6909 tokens from multiple resource locks to a single recipient with allocator approval."
          },
          "allocatedTransfer((bytes,uint256,uint256,uint256,(address,uint256)[]))": {
            "notice": "Transfers ERC6909 tokens to multiple recipients with allocator approval."
          },
          "allocatedTransfer((bytes,uint256,uint256,uint256,uint256,address))": {
            "notice": "Transfers ERC6909 tokens to a single recipient with allocator approval."
          },
          "allocatedWithdrawal((bytes,uint256,uint256,(uint256,(address,uint256)[])[]))": {
            "notice": "Withdraws underlying tokens from multiple resource locks to multiple recipients with allocator approval."
          },
          "allocatedWithdrawal((bytes,uint256,uint256,(uint256,uint256)[],address))": {
            "notice": "Withdraws underlying tokens from multiple resource locks to a single recipient with allocator approval."
          },
          "allocatedWithdrawal((bytes,uint256,uint256,uint256,(address,uint256)[]))": {
            "notice": "Withdraws underlying tokens to multiple recipients with allocator approval."
          },
          "allocatedWithdrawal((bytes,uint256,uint256,uint256,uint256,address))": {
            "notice": "Withdraws underlying tokens to a single recipient with allocator approval."
          },
          "consume(uint256[])": {
            "notice": "External function for consuming allocator nonces. Only callable by a registered allocator. Once consumed, any compact payloads that utilize those nonces cannot be claimed."
          },
          "deposit(address)": {
            "notice": "External payable function for depositing native tokens into a resource lock and receiving back ERC6909 tokens representing the underlying locked balance controlled by the depositor. The allocator mediating the lock is provided as an argument, and the default reset period (ten minutes) and scope (multichain) will be used for the resource lock. The ERC6909 token amount received by the caller will match the amount of native tokens sent with the transaction."
          },
          "deposit(address,address,uint256)": {
            "notice": "External function for depositing ERC20 tokens into a resource lock. The default reset period (ten minutes) and scope (multichain) will be used. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received back by the caller is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token."
          },
          "deposit(address,address,uint8,uint8,uint256,address)": {
            "notice": "External function for depositing ERC20 tokens into a resource lock with custom reset period and scope parameters. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received by the recipient is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token."
          },
          "deposit(address,uint8,uint8,address)": {
            "notice": "External payable function for depositing native tokens into a resource lock with custom reset period and scope parameters. The ERC6909 token amount received by the recipient will match the amount of native tokens sent with the transaction."
          },
          "deposit(uint256[2][],address)": {
            "notice": "External payable function for depositing multiple tokens in a single transaction. The first entry in idsAndAmounts can optionally represent native tokens by providing the null address and an amount matching msg.value. For ERC20 tokens, the caller must directly approve The Compact to transfer sufficient amounts on its behalf. The ERC6909 token amounts received by the recipient are derived from the differences between starting and ending balances held in the resource locks, which may differ from the amounts transferred depending on the implementation details of the respective tokens."
          },
          "depositAndRegister(address,address,uint256,bytes32,bytes32)": {
            "notice": "External function for depositing ERC20 tokens and simultaneously registering a compact. The default reset period (ten minutes) and scope (multichain) will be used. The caller must directly approve The Compact to transfer a sufficient amount of the ERC20 token on its behalf. The ERC6909 token amount received back by the caller is derived from the difference between the starting and ending balance held in the resource lock, which may differ from the amount transferred depending on the implementation details of the respective token."
          },
          "depositAndRegister(address,bytes32,bytes32)": {
            "notice": "External payable function for depositing native tokens into a resource lock and simultaneously registering a compact. The allocator, the claim hash, and the typehash used for the claim hash are provided as additional arguments, and the default reset period (ten minutes) and scope (multichain) will be used for the resource lock. The ERC6909 token amount received by the caller will match the amount of native tokens sent with the transaction."
          },
          "depositAndRegister(uint256[2][],bytes32[2][],uint256)": {
            "notice": "External payable function for depositing multiple tokens in a single transaction and registering a set of claim hashes. The first entry in idsAndAmounts can optionally represent native tokens by providing the null address and an amount matching msg.value. For ERC20 tokens, the caller must directly approve The Compact to transfer sufficient amounts on its behalf. The ERC6909 token amounts received by the recipient are derived from the differences between starting and ending balances held in the resource locks, which may differ from the amounts transferred depending on the implementation details of the respective tokens. Note that resource lock ids must be supplied in alphanumeric order."
          },
          "disableForcedWithdrawal(uint256)": {
            "notice": "External function to disable a previously enabled forced withdrawal for a resource lock."
          },
          "enableForcedWithdrawal(uint256)": {
            "notice": "External function to initiate a forced withdrawal for a resource lock. Once enabled, forced withdrawals can be executed after the reset period has elapsed. The withdrawableAt timestamp returned will be the current timestamp plus the reset period associated with the resource lock."
          },
          "forcedWithdrawal(uint256,address,uint256)": {
            "notice": "External function to execute a forced withdrawal from a resource lock after the reset period has elapsed. The tokens will be withdrawn to the specified recipient in the amount requested. The ERC6909 token balance of the caller will be reduced by the difference in the balance held by the resource lock before and after the withdrawal, which may differ from the provided amount depending on the underlying token in question."
          },
          "getForcedWithdrawalStatus(address,uint256)": {
            "notice": "External view function for checking the forced withdrawal status of a resource lock for a given account. Returns both the current status (disabled, pending, or enabled) and the timestamp at which forced withdrawals will be enabled (if status is pending) or became enabled (if status is enabled)."
          },
          "getLockDetails(uint256)": {
            "notice": "External view function for retrieving the details of a resource lock. Returns the underlying token, the mediating allocator, the reset period, and the scope."
          },
          "getRegistrationStatus(address,bytes32,bytes32)": {
            "notice": "External view function for checking the registration status of a compact. Returns both whether the claim hash is currently active and when it expires (if it is active)."
          },
          "hasConsumedAllocatorNonce(uint256,address)": {
            "notice": "External view function for checking whether a specific nonce has been consumed by an allocator. Once consumed, a nonce cannot be reused for claims mediated by that allocator."
          },
          "register(bytes32,bytes32,uint256)": {
            "notice": "External function to register a claim hash and its associated EIP-712 typehash. The registered claim hash will remain valid for the specified duration. Once expired, the claim hash can no longer be used to initiate claims."
          },
          "register(bytes32[2][],uint256)": {
            "notice": "External function to register multiple claim hashes and their associated EIP-712 typehashes in a single call. All registered claim hashes will remain valid for the specified duration. Once expired, the claim hashes can no longer be used to initiate claims."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/permit2/lib/openzeppelin-contracts/",
        "permit2/=lib/permit2/",
        "solady/=lib/solady/src/",
        "soledge/=lib/soledge/src/",
        "solmate/=lib/permit2/lib/solmate/",
        "tstorish/=lib/tstorish/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/TheCompact.sol": "TheCompact" },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solady/src/tokens/ERC6909.sol": {
        "keccak256": "0x03975a3d9680a1bfe53a678685c81ed4d70b6e0f046ccf1905539caa5376eea2",
        "urls": [
          "bzz-raw://827a2f6b69fcb700909635203a9453310ea89c0bb904943cf3cc732e35d81398",
          "dweb:/ipfs/QmZha3DSrunz1NR3jXHRXrLT6uvAKTt3AEV6PcbGWRLu4q"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/EfficientHashLib.sol": {
        "keccak256": "0x32032578683dc18c5f95c8dd4c1422d212f230d96d5425cc491f3350157e6fe1",
        "urls": [
          "bzz-raw://82c89ef25e537766bbfc8ebba4138eee4fa1b64527c39add8240bce2ea99c661",
          "dweb:/ipfs/QmZVciQDtnXs3nDVUaH7mMLC6vFKe8zeKLK969bqJetKCj"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/LibString.sol": {
        "keccak256": "0xa0b70980612eeedd30cc65c44c37a286c8527cb41c7454db55b1a435beb2276f",
        "urls": [
          "bzz-raw://93950259301ac435f1d8756cb80f99eafe9da4dc68b05e148a4b16042a69cc9b",
          "dweb:/ipfs/QmUpyP9AD7AqmRNEmrjLSQivXXdbZmFZKaLJwW9UP2wWCN"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/MetadataReaderLib.sol": {
        "keccak256": "0x671f4b38462335f3500b91eeff2fd25fc447cc201901524959c05b934ad0b100",
        "urls": [
          "bzz-raw://aa64b44dc13b25c1aa713cb5724fade1dc093c95581efc5ccb85cbcc616c02c5",
          "dweb:/ipfs/QmRvXqBw8GqpShA8cXAwA6ha14Q2bfajNmYq1mYNYAaMiv"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a",
        "urls": [
          "bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c",
          "dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SignatureCheckerLib.sol": {
        "keccak256": "0x472ad43dd67dcc0d548efbbc8779f34e56a7eb99d7a8b1c29af33fb03bbe9ffc",
        "urls": [
          "bzz-raw://733da5015058b9540927c63c316665e9ac8d9676d23f722bddf9376c2a03d4cb",
          "dweb:/ipfs/QmPhXj1qpjnwVjrZUgFdkinMK9XSuoLN3cxbSmqADYSZry"
        ],
        "license": "MIT"
      },
      "lib/tstorish/src/Tstorish.sol": {
        "keccak256": "0xad3697d9fd6e7c1fb6faa8d474af00bb2a7afd51e8818165fd30bcc7ead53973",
        "urls": [
          "bzz-raw://a8b62000145be27440c913238fbe9b97ecfc709eacac14b498f18980418d6ab6",
          "dweb:/ipfs/QmRMXHdYUDmajWzwUjs7CQZ5i1T739MhiMmimd3do8qJNk"
        ],
        "license": "MIT"
      },
      "src/TheCompact.sol": {
        "keccak256": "0x2949a8d172180ba623c85dfc22eda0ba1f59c4d70d8ee8ade62b5876ff6cd935",
        "urls": [
          "bzz-raw://4c6a3fdaa5319cc8a272422e8af551bee8e1467f78aa8b65a1290fddf0453a90",
          "dweb:/ipfs/QmafPX5TCncQbuhFtztQVL81hmU9wmdxfNZCYj9t5X6QqM"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITheCompact.sol": {
        "keccak256": "0xe75d130ab9ead7ef7866f4ce8fcbe5e8de49450abf5f8c6b5878c4e54e480103",
        "urls": [
          "bzz-raw://63b7694d1b97b350c41e668e72d25d3df10c230b9dd21219827d7d2cc0dc39b6",
          "dweb:/ipfs/QmTDJAFcTYfU7DyfuYMJHK3YMYRkXQvm9MoUhywaqeUsZ6"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITheCompactClaims.sol": {
        "keccak256": "0x5691d5127ccff51eea74ce4f6dd01a5f121fd2a1b7bdad41aca39c4d236e27bb",
        "urls": [
          "bzz-raw://ca686c6911319d151dc1f658767545823d750c3fb54cb8f75e46b544df3a217a",
          "dweb:/ipfs/QmT2a1twcvzHxjWwcLqMebo9rat5x5CVy2KJfawj9qXS5a"
        ],
        "license": "MIT"
      },
      "src/lib/AllocatorLogic.sol": {
        "keccak256": "0xadfa16ae7d02777e129d31639f110be46093ef109c1287896598ee792de34d5c",
        "urls": [
          "bzz-raw://11a258ef5e43b6d85c99b330beaf4c3750f0d41c3b862b677551eca3626a2071",
          "dweb:/ipfs/QmfViBPCWeKqgdVKfA7KQUz2JntZEdGfbpgAwCGWwLGQ9Y"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimHashFunctionCastLib.sol": {
        "keccak256": "0xcfa2f7fb4e3df789ae504ebc13e31cadb6c05282e07d46a4b807d5d23a5ef530",
        "urls": [
          "bzz-raw://51e642f4676ec4e0ecc1fb716cd051bd6d12dac2d39e997e516af5bd141b3178",
          "dweb:/ipfs/QmeQ8vHdg8vsCZ9XPc3af82ktXHHicY3QQbAoghHfvkVK4"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimHashLib.sol": {
        "keccak256": "0x2bc3fb604115697562a4770f98020efd578b02d6376b56ca52c64d0df46f6e87",
        "urls": [
          "bzz-raw://aeddaee5ec0f8512fc13af7b0bfc07e93250a1bc34b6095c6a5bd6624a73990d",
          "dweb:/ipfs/QmVeVSBNoJeMndTQpvB2Kr9BzWWG8crjeBPjZZxciGYXMx"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimProcessor.sol": {
        "keccak256": "0x58872af76a73fd131a85635150545978bbe09ae83ec4ed2fae19d75c038a482c",
        "urls": [
          "bzz-raw://8d782488fcbded4ef2781031940611599b6ec41e92d813800912e2c86afd7979",
          "dweb:/ipfs/QmaCuq52gwjc1LfZrURPpyrjmGZZCtzhXRqg4dMhXP1NKa"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimProcessorFunctionCastLib.sol": {
        "keccak256": "0xb69ec41dc657f93f6f6a1901d39e48a791907d4debc0eb8104f9fe016b6a59ba",
        "urls": [
          "bzz-raw://b6a54cebc498c4181ddc25fd4c6162449ae12d407fc1b45c0e6c4b365da1543e",
          "dweb:/ipfs/QmRdZp5fraYJRB7QXwDqE5jbpmerWaCV3DqMPxi9aCk4ZQ"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimProcessorLib.sol": {
        "keccak256": "0xf150692ad2915d0c4df63ea44e62f6e3d5736f2c91de7cea48a1301cf4034e51",
        "urls": [
          "bzz-raw://1c2f21638d2a613e912cf73dd049b0bb2e4abbea54a3f58a5439f6396c59d9ee",
          "dweb:/ipfs/QmRQpwnhhNfvWyTXHRy982awBnHA4fjK7GpHzSgqC3pPT6"
        ],
        "license": "MIT"
      },
      "src/lib/ClaimProcessorLogic.sol": {
        "keccak256": "0x737780590a48e67dc0f64bd3bb7248eafb7630f579d8aa44befb197d9ac66ce8",
        "urls": [
          "bzz-raw://ea7c69e2cbf316fe182fad296b8d65a76ade84923edb0572c339f880e21fc7bc",
          "dweb:/ipfs/QmWuZ9UJA4nsdPjgCa6rsCBvoWBjcUhWRuCnLqPNbM8687"
        ],
        "license": "MIT"
      },
      "src/lib/ComponentLib.sol": {
        "keccak256": "0x3e1ad4bff9cd12162f9b849078839b802f4783b474588fa93be8ba1e61263dd6",
        "urls": [
          "bzz-raw://faa70f41d0679e1fa2aa827f863c03bf8a3962703a26ae724b7ca2a8d5f9f96b",
          "dweb:/ipfs/QmXWyv8ATKeSKwiXCPFZBLkrRuV1NhNDS5yH5rDyrm6GLs"
        ],
        "license": "MIT"
      },
      "src/lib/ConstructorLogic.sol": {
        "keccak256": "0xca9b0d52a562351978aafcc06f79f5c555ea948eaad28983812a7892f02b1245",
        "urls": [
          "bzz-raw://1f2e41013c0ef8ef9bee844494185b7a09c8680ea3d931a2683f968cdaa154a9",
          "dweb:/ipfs/QmX8CoLP6VGRkxhx6VonrRf2YqPZ1hg1LagKvkNBaQtNaR"
        ],
        "license": "MIT"
      },
      "src/lib/ConsumerLib.sol": {
        "keccak256": "0x582badfccdb57ee9518e39676fab7ba2abc6b527c854d524b8f417126fa6d192",
        "urls": [
          "bzz-raw://96d6dde54bdad2fc2203620d5f75e96cc9267cb340e1284d311bf6f8c77d16d2",
          "dweb:/ipfs/Qmbq8XuUiAoEsmYVa2NCHSdi6gu4ZYzeyr1iPNGaFwwhxu"
        ],
        "license": "MIT"
      },
      "src/lib/DepositLogic.sol": {
        "keccak256": "0xb2a199980ca4025c1784ebc79ec5d73cbe849ff26d446b2ca58bdb7066475fcf",
        "urls": [
          "bzz-raw://73e9defc19c10bb6b63d7571a1e097ed09accdf7cf123b91c8a9bea02c9ca87f",
          "dweb:/ipfs/QmVWt9Ssb6CuFpYKTDYc31FH9TFZfYqs4WGsqf2ksiPtpx"
        ],
        "license": "MIT"
      },
      "src/lib/DepositViaPermit2Lib.sol": {
        "keccak256": "0x3d45834b9be7e0af8aadd4c3afb2b5d7a9c1a47156e30780499852b1e503b1c4",
        "urls": [
          "bzz-raw://1e16d1aa8eb93fefd956455fbb157a58cb9fb3824a276f54a33a52c17924c30b",
          "dweb:/ipfs/QmUmsqU9p8J7r7hk5jxNYXUnaPoCaMruFKtxFo12zV7XJQ"
        ],
        "license": "MIT"
      },
      "src/lib/DepositViaPermit2Logic.sol": {
        "keccak256": "0xb8813f63d4a3c05dc99e36b6a900cbd7c6c6bfc8cccdb5b9052894400b4925a9",
        "urls": [
          "bzz-raw://463fa79ef23b7f6d56a9bc8f6139917374a06f860c12fbfe6e76d794e690b9e0",
          "dweb:/ipfs/QmXGqm3wZqRSDAvy7mykMvezMBVPPT79pJYsASwkxXFitq"
        ],
        "license": "MIT"
      },
      "src/lib/DirectDepositLogic.sol": {
        "keccak256": "0xa1b9f042c5ecf3edcde3733bd12cde49633dcce9336622ea7c5eabd0ce2bafa1",
        "urls": [
          "bzz-raw://0eeaa505727c2b42780bd4e3e3dbede2ce51480c46ff90ad401d7328fc5e42d8",
          "dweb:/ipfs/QmZ8MDQjSi2yczScSgKyd6Ge3ir4xJA2o8pX1j15ryyzVp"
        ],
        "license": "MIT"
      },
      "src/lib/DomainLib.sol": {
        "keccak256": "0x0a69b112fabd7d4e13fbf4c796a4a163f522c84b4b6a981c913a6c7342f5cc6a",
        "urls": [
          "bzz-raw://4a3d3fd2d8ab66c6dd0f2674efcf2bca87899decd42e949631be80a60f74d6a2",
          "dweb:/ipfs/QmP38CpNz5GjycQZwpe7CxXrRsugraQDtr6rsiA5ue2iK6"
        ],
        "license": "MIT"
      },
      "src/lib/EfficiencyLib.sol": {
        "keccak256": "0xd8fd182c728a98a3ac5c64cbc7011bc34dc1ee06e377a1a5e670c3cd8375eff9",
        "urls": [
          "bzz-raw://1f565cad687dc0bd3438a8b8b08ecc973f5ad5a1aebd332baa402e45cd56ae83",
          "dweb:/ipfs/QmayoEFEv6zMhRw6kqqoqdmNE1jGbwgRQ6VA5wj2XAb7Du"
        ],
        "license": "MIT"
      },
      "src/lib/EventLib.sol": {
        "keccak256": "0x0d9bc84e78628d9ff42689b8cd33353c86f9de7220002d74c5d485275f328946",
        "urls": [
          "bzz-raw://eb8bf826a89bb1cc62e8af269f34453c13df6ffe473e0dff8aeddaf1797afa0f",
          "dweb:/ipfs/QmX7TFZACuGBhCVMjAPve7JKz6PWZjYTMr7JQ9WbFatKcu"
        ],
        "license": "MIT"
      },
      "src/lib/Extsload.sol": {
        "keccak256": "0x72075add7c7d734c46922f2f56cb490d48711a0cc6af439619ff39e60df75924",
        "urls": [
          "bzz-raw://283cc72cb88802327c60fc9bc75f840ff639d791c1d19056bbadf7e7e5f3c99f",
          "dweb:/ipfs/QmWoCebx1axDW8uuUEPv6QRzGWFD5bRGnvw2VD7KJufokB"
        ],
        "license": "MIT"
      },
      "src/lib/HashLib.sol": {
        "keccak256": "0x50bc064b796b92d6199cf09cf8ea34a808653a8c668f695ce89cd3614956cb4e",
        "urls": [
          "bzz-raw://6bd96eb47fd50bb4f15540e3f8c903d5cf83d8e0e975d615abb9e2dfe7329af0",
          "dweb:/ipfs/QmVPs5HWJEbUtKQn69jSYdA7U92jU7nkWwGfsmD6sUCWsR"
        ],
        "license": "MIT"
      },
      "src/lib/IdLib.sol": {
        "keccak256": "0x14a04b7bdfcd5e7cc783a7202cb0429fb225f0a960908f06028f39f78b01373b",
        "urls": [
          "bzz-raw://c465efd13c8fd3ddfd701357f8f6e64443d69c5ab835c7bb35b8934261c2313e",
          "dweb:/ipfs/QmP15v2Qrp1hg7BvkfzE4zqcjwhDH2NBHkzJ8rRShCwU8S"
        ],
        "license": "MIT"
      },
      "src/lib/MetadataLib.sol": {
        "keccak256": "0x1d7f67de567fccba29393048a15373c9ad6cc903409b52b94a8baf1747204340",
        "urls": [
          "bzz-raw://1f15f66c2420d6f5a527ee12945bc000e7687586727845015d60e229ca5009d4",
          "dweb:/ipfs/QmY27xFEKUBW3U7K18gQNNbmR3pZbp1Gz3ecQVkZQUBzek"
        ],
        "license": "MIT"
      },
      "src/lib/MetadataRenderer.sol": {
        "keccak256": "0xdef8b8a92120470f9d290b5d6ab3fc69145300741ca066b152ddc71cd719982e",
        "urls": [
          "bzz-raw://6946d4d9d525fd21e3b4d310aaa5160de531bda7574bb5ad8c6a10616c340fe8",
          "dweb:/ipfs/QmdB6Kwipo2MXCLPexXqjNP2xQhkG8BRx7KBWKMyqCRNHk"
        ],
        "license": "MIT"
      },
      "src/lib/RegistrationLib.sol": {
        "keccak256": "0xa6be3d3f74e30fa04157f369964afe818f562c82369bb0823ffc4a06297364a8",
        "urls": [
          "bzz-raw://f73aa296543d4c3757a9b104278cfa9c07838ae9a9b82a3e77ed6df7bbe8ef20",
          "dweb:/ipfs/QmWDCBxnz3quqhDtAN7zqetaQmCE8ULM1dAYEBrguHP5DQ"
        ],
        "license": "MIT"
      },
      "src/lib/RegistrationLogic.sol": {
        "keccak256": "0x40850751ea4a77f6bd9df09a3a9f565994dfd03b29a15dcc31e03da3be317b7f",
        "urls": [
          "bzz-raw://16f07cb5ab8e5adfe74cdd700f5c9e448b28fab0b120058b25d4d1bcf2338a9a",
          "dweb:/ipfs/QmULZACcDPswptXRxKnA8dBChU63k8CkvY5Q7YG7SJoSs6"
        ],
        "license": "MIT"
      },
      "src/lib/SharedLogic.sol": {
        "keccak256": "0xcc76a01f9dc24f1afc4fd21dbdb423ec7a6cccb454c9b725fa3b135d4d851365",
        "urls": [
          "bzz-raw://1f9fe59a2d0c467832d42c60acabd4c599868024c09b5aa89e9e91b38e9f8eba",
          "dweb:/ipfs/Qmbsu2BLJT32Qc77RR3ZHhVTMkyh1sLJueLiTuYHCQwxVf"
        ],
        "license": "MIT"
      },
      "src/lib/TheCompactLogic.sol": {
        "keccak256": "0xc6106d8b4a9f2bf6c9006181a3e6acc95c8524628b5096478c76716a7e2cc5c4",
        "urls": [
          "bzz-raw://18056a737da3fddaac4cb50dd598b57e0bcc5d1889669831bbb4d09bc48c5cf6",
          "dweb:/ipfs/QmPvQs8THzQPfpxuB5MKNKsFGiPjbR9B5QVAKa4NTkpSbd"
        ],
        "license": "MIT"
      },
      "src/lib/TransferFunctionCastLib.sol": {
        "keccak256": "0x1b2b8d48503f85dee96cb0d915d1f506ab872aac6fb29a1adbb894de93a534e7",
        "urls": [
          "bzz-raw://6a2eb941a4a3e4633c88420ae3eab750ffdb32e431c71927a10feb6562b6e9a9",
          "dweb:/ipfs/QmeYJbeupvqjyrMV43Z41mz52E9Bwqhmm4mSx7K8F26Vmb"
        ],
        "license": "MIT"
      },
      "src/lib/TransferLogic.sol": {
        "keccak256": "0x08ae66f9d642e8caabcd200d8574e5487cc11181c23acc18f2076e4f5e9ca086",
        "urls": [
          "bzz-raw://2f4ec47106727e1fd5197f9fa7e86552469a198dd62dd24ad3dc1db9fb6d4327",
          "dweb:/ipfs/QmR3bC1fmUVYTarsZMRU3u3RV1GcbNsF3NghvxND4B7J46"
        ],
        "license": "MIT"
      },
      "src/lib/ValidityLib.sol": {
        "keccak256": "0xfdecefc1bd9b9ba92fb471af7d09dc30255cb16154cec436b27fc06630fc7106",
        "urls": [
          "bzz-raw://3b36c79e57192514bcf3aace66e38568708e066f24db93832f0a7f530754c5a7",
          "dweb:/ipfs/QmUSRsBpZz7VEPN1ubX5mB71uKRdQ17Tf5jbkUNkyiMGhu"
        ],
        "license": "MIT"
      },
      "src/lib/WithdrawalLogic.sol": {
        "keccak256": "0x438c41cb28048ee067e8f64e2faaf7339a3324f0ce81ec96c94e5692074ee650",
        "urls": [
          "bzz-raw://f811218032733e0fd0eb937a036b04e37dfcd46ed64bcbac22ecbb5d2a5993b4",
          "dweb:/ipfs/QmdD2bN9Be2dDBEmuYBKGJKgW5FsayuojBqjYuz2ZvWcEb"
        ],
        "license": "MIT"
      },
      "src/types/BatchClaims.sol": {
        "keccak256": "0x368860cb48d9cf8b7ee86e226fc203307c8559ee5bbd987299c14580c61039b5",
        "urls": [
          "bzz-raw://edd6eccb18ee3f7dc1e4fdeaa00d007b8cd6f506ab76366f74e530a66211ba8d",
          "dweb:/ipfs/Qmf68iLL8CVZEvkjnQb6GdPumsP5V8dFfSubXCSx1Vgu4Z"
        ],
        "license": "MIT"
      },
      "src/types/BatchMultichainClaims.sol": {
        "keccak256": "0xe493995e946bf63d2970e5668e426f6c3d84f9ae5b03f86f7c493ae02ca8b96c",
        "urls": [
          "bzz-raw://91370d328607589fa1ff37f3c0ef66a5b90ff63de20c8ccee3b009a6aedb2620",
          "dweb:/ipfs/QmY5Ja2XfxRFbh4dtViqiepaSfNr1rWrMYSnSGjeMPxxNw"
        ],
        "license": "MIT"
      },
      "src/types/Claims.sol": {
        "keccak256": "0x6ae4ad79a64e0edd6169e87f8c3e35abd5f592ac23dc8eae7b92dfc190fa3ae2",
        "urls": [
          "bzz-raw://d4434f16be0877209b2aaa51c9f27b9374fab6acbfc3b6241ba00907d6de7a96",
          "dweb:/ipfs/QmTTcNwtekjwMZkrNKAcKAprWG47pSVEn2GETX6tZu746C"
        ],
        "license": "MIT"
      },
      "src/types/CompactCategory.sol": {
        "keccak256": "0xc3ab3758e88fc8591d79352d3d49140433bbf4176c3caa1bfce1903e2bfadf06",
        "urls": [
          "bzz-raw://16960ee62b98c5cbbedcfe22ce4b521205d2bcc4fe9dfa57a9d68ec90efeb5a1",
          "dweb:/ipfs/Qmc3FciGTRrDZjRSb9waUYkZsELRvVWkJKNVqS1u8vEDNG"
        ],
        "license": "MIT"
      },
      "src/types/Components.sol": {
        "keccak256": "0xd5027c0eb603a4604e050e97930fa436db33755b3e8097894320916cd7163ff0",
        "urls": [
          "bzz-raw://b414c4a0e0d543f8de309bbb005f62d63a5c67ae6cf78d5d5b5fd076dd7b0a51",
          "dweb:/ipfs/QmX8Z9Fp2QJVgE9hwbPjrXUYc4RVAE8qTyfN8DKBpV5iPB"
        ],
        "license": "MIT"
      },
      "src/types/EIP712Types.sol": {
        "keccak256": "0x386ff8e0aff7d437b8b49117ed158554e608d0cc18a0b4f561510e9584cafb91",
        "urls": [
          "bzz-raw://e49d199dd3caab0210a2648a1b9d2a8965b5706f602fffee8e1815bbacddbe5e",
          "dweb:/ipfs/QmYUzWFC4GK1rjoqnZEt2ghL5GMPCiaF5xaPzSr4Rm99PK"
        ],
        "license": "MIT"
      },
      "src/types/ForcedWithdrawalStatus.sol": {
        "keccak256": "0xdf352a2439e57ea9e1b7d54997fe904e4ea41ab9d2d8221d7d753dce94e76dc7",
        "urls": [
          "bzz-raw://6faadb6857eda66cbef8fe1bf36d85d16f534b899a737a9464e69dc505eb9e89",
          "dweb:/ipfs/QmdC9beQhPRYv5sAFx7TyWvzGPjm6XY3bCYNKzuZH1Pesd"
        ],
        "license": "MIT"
      },
      "src/types/Lock.sol": {
        "keccak256": "0x21a490258b933f8d5db759a91d07f7d9d2b2435d366334a8bcfbce4379a85011",
        "urls": [
          "bzz-raw://d1cfcb02c3b0a70d82b2d9bd9c55ffcf654a226774711ca727eab8b0cdf456ea",
          "dweb:/ipfs/QmRFN3dvespK1mUcUuXm4rnPd3ZGNRdba8MZgub1zu24Qw"
        ],
        "license": "MIT"
      },
      "src/types/MultichainClaims.sol": {
        "keccak256": "0x596b71d675b7b5e13b29f6b7fb92d23722d2792fadc82ad764467fdf9c693cb9",
        "urls": [
          "bzz-raw://974d9d906e06ad29e875c2556d32c1f631a70539e43b018815e3fc68ede01e53",
          "dweb:/ipfs/QmPbqsU21jDGhLQ9x9No2xDUimaLueGGF7eAkNxJfhc3fx"
        ],
        "license": "MIT"
      },
      "src/types/ResetPeriod.sol": {
        "keccak256": "0xfd32523d563b926c72fdc693aa8b7f6db24f4720decee16710cdfc662a8d8f16",
        "urls": [
          "bzz-raw://4c510cde0fc28cde51aad2df6bac8eeef5e0fb67be754a3d8c655a8556db32c6",
          "dweb:/ipfs/QmWjVZJdfxVK5EiprmWi9iGNMqXAkVZjECnzeXvjfTsDZX"
        ],
        "license": "MIT"
      },
      "src/types/Scope.sol": {
        "keccak256": "0x3e63be015c24bde88698efc20b00690d1e683a5cabf2122dc91ab0ecad4ae8ed",
        "urls": [
          "bzz-raw://5160d46460204dc6268a963e9d0c117fab903318f74d3b5903693fe2dfcc2462",
          "dweb:/ipfs/QmRsc4VSWvvSxi3VfyFgjTELj5DB5MpZ7UPJ3mzgPMyD9v"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 36
}
